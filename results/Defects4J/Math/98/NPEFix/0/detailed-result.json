{"executions":[{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1148)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008945248,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,5 +685,12 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix == null) {\n+                if ( data[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n+            } else {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008945164},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:820)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008942679,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,5 +553,12 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix == null) {\n+                if ( data[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n+            } else {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008942619},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1148)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008945554,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,2 +685,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                subMatrix = data;\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008945469},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:820)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008945443,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,2 +553,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                subMatrix = data;\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008945383},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): 1\nclass java.lang.ArrayIndexOutOfBoundsException: 1\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1127)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008945740,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,5 +685,12 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix == null) {\n+                if ( new BigDecimal[0][r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n+            } else {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008945655},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): 1\nclass java.lang.ArrayIndexOutOfBoundsException: 1\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:799)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008945630,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"double"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,5 +553,12 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix == null) {\n+                if ( new double[0][r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n+            } else {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008945571},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): 1\nclass java.lang.ArrayIndexOutOfBoundsException: 1\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1127)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008945925,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,2 +685,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                subMatrix = new BigDecimal[0];\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008945841},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): 1\nclass java.lang.ArrayIndexOutOfBoundsException: 1\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:799)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008945815,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"double"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,2 +553,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                subMatrix = new double[0];\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008945756},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1148)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008946109,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,5 +685,7 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix != null) {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008946025},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:820)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008946001,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,5 +553,7 @@\n         for (int r = 1; r < nRows; r++) {\n-            if (subMatrix[r].length != nCols) {\n-                throw new IllegalArgumentException(\n-                \"All input rows must have the same length.\");\n+            if (subMatrix != null) {\n+                if (subMatrix[r].length != nCols) {\n+                    throw new IllegalArgumentException(\n+                    \"All input rows must have the same length.\");\n+                }\n             }\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008945942},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): expecting NullPointerException\nclass junit.framework.AssertionFailedError: expecting NullPointerException\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:737)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008946291,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -675,2 +685,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                return null;\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25639,"line":676,"executionCount":0,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008946208},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): expecting NullPointerException\nclass junit.framework.AssertionFailedError: expecting NullPointerException\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:682)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008946184,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = data[0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n@@ -543,2 +553,5 @@\n         for (int r = 1; r < nRows; r++) {\n+            if (subMatrix == null) {\n+                return null;\n+            }\n             if (subMatrix[r].length != nCols) {\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":21071,"line":544,"executionCount":0,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008946125},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1148)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008946660,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,2 +674,5 @@\n         }\n+        if (subMatrix == null) {\n+            subMatrix = data;\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008946576},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:820)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008946551,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,2 +542,5 @@\n         }\n+        if (subMatrix == null) {\n+            subMatrix = data;\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008946491},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): 0\nclass java.lang.ArrayIndexOutOfBoundsException: 0\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1119)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008946843,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = new BigDecimal[0][0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008946760},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): 0\nclass java.lang.ArrayIndexOutOfBoundsException: 0\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:791)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008946735,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"double"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,8 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        final int nCols;\n+        if (subMatrix == null) {\n+            nCols = new double[0][0].length;\n+        } else {\n+            nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008946677},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): 0\nclass java.lang.ArrayIndexOutOfBoundsException: 0\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1119)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008947026,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,2 +674,5 @@\n         }\n+        if (subMatrix == null) {\n+            subMatrix = new BigDecimal[0];\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008946943},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): 0\nclass java.lang.ArrayIndexOutOfBoundsException: 0\n    at org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(RealMatrixImpl.java:791)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:681)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008946918,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"double"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,2 +542,5 @@\n         }\n+        if (subMatrix == null) {\n+            subMatrix = new double[0];\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008946860},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008947213,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,3 +674,5 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        if (subMatrix != null) {\n+            final int nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008947129},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008947104,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,3 +542,5 @@\n         }\n-        final int nCols = subMatrix[0].length;\n+        if (subMatrix != null) {\n+            final int nCols = subMatrix[0].length;\n+        }\n         if (nCols == 0) {\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008947043},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): expecting NullPointerException\nclass junit.framework.AssertionFailedError: expecting NullPointerException\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:737)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008947396,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,3 +664,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -669,2 +674,5 @@\n         }\n+        if (subMatrix == null) {\n+            return null;\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},{"sourceEnd":25421,"line":670,"executionCount":0,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008947312},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.RealMatrixImplTest): expecting NullPointerException\nclass junit.framework.AssertionFailedError: expecting NullPointerException\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(RealMatrixImplTest.java:682)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.RealMatrixImplTest"},"endDate":1557008947288,"decisions":[{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- linear/RealMatrixImpl.java\n+++ linear/RealMatrixImpl.java\n@@ -532,3 +532,8 @@\n         }\n-        final int nRows = subMatrix.length;\n+        final int nRows;\n+        if (subMatrix == null) {\n+            nRows = data.length;\n+        } else {\n+            nRows = subMatrix.length;\n+        }\n         if (nRows == 0) {\n@@ -537,2 +542,5 @@\n         }\n+        if (subMatrix == null) {\n+            return null;\n+        }\n         final int nCols = subMatrix[0].length;\n","locations":[{"sourceEnd":20673,"line":533,"executionCount":0,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},{"sourceEnd":20853,"line":538,"executionCount":0,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"}],"startDate":1557008947230},{"result":{"success":false,"error":"testSetSubMatrix(org.apache.commons.math.linear.BigMatrixImplTest): invalid row or column index selection\nclass org.apache.commons.math.linear.MatrixIndexException: invalid row or column index selection\n    at org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(BigMatrixImpl.java:1148)\n    at org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(BigMatrixImplTest.java:736)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSetSubMatrix","class":"org.apache.commons.math.linear.BigMatrixImplTest"},"endDate":1557008947763,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}}],"diff":"--- linear/BigMatrixImpl.java\n+++ linear/BigMatrixImpl.java\n@@ -664,2 +664,5 @@\n         }\n+        if (subMatrix == null) {\n+            subMatrix = data;\n+        }\n         final int nRows = subMatrix.length;\n","locations":[{"sourceEnd":25241,"line":665,"executionCount":0,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"}],"startDate":1557008947679}],"endInit":1557008940219,"start":1557008940618,"end":1557008947763,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25241,"line":665,"sourceStart":25233,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":12,"decisionType":"NEW","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2A","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":21071,"line":544,"sourceStart":21063,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"double"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":8,"decisionType":"NEW","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":18,"decisionType":"NEW","location":{"sourceEnd":20853,"line":538,"sourceStart":20845,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":true,"strategy":"Strat1A","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat4 VOID","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":20673,"line":533,"sourceStart":20665,"class":"org.apache.commons.math.linear.RealMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat2B","value":{"level":2,"instanceType":"NewArray","class":"java.math.BigDecimal"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25421,"line":670,"sourceStart":25413,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat1B","value":{"variableName":"data","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":25639,"line":676,"sourceStart":25631,"class":"org.apache.commons.math.linear.BigMatrixImpl"},"used":false,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}]}