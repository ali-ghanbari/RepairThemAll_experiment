{"general":{"NR_RIGHT_COMPILATIONS":59,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Math-95","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":44,"NR_GENERATIONS":103,"TOTAL_TIME":55.155,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"206","VALIDATION":"|true|0|1301|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.distribution.FDistributionImpl","PATH":"\\\/tmp\\\/jGenProg_Defects4J_Math_95\\\/output_astor\\\/AstorMain-Math-95\\\/src\\\/default\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0.258","INGREDIENT_PARENT":"return numeratorDegreesOfFreedom","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"return ret","BUGGY_CODE_TYPE":"CtReturnImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jGenProg_Defects4J_Math_95\\\/.\\\/output_astor\\\/AstorMain-Math-95\\\/\\\/src\\\/\\\/variant-206_f\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","LINE":"148","MP_RANKING":"5","PATCH_HUNK_CODE":"return numeratorDegreesOfFreedom"}],"TIME":"55","GENERATION":"103","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jGenProg_Defects4J_Math_95\\\/.\\\/output_astor\\\/AstorMain-Math-95\\\/\\\/bin\\\/\\\/variant-206","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n+++ org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n@@ -145,8 +145,6 @@\\n \\t\\tdouble d = getDenominatorDegreesOfFreedom();\\n \\n \\t\\tret = d \\\/ (d - 2.0);\\n-\\t\\treturn ret;\\n-\\t}\\n \\n \\n \\n@@ -154,20 +152,22 @@\\n \\n \\n \\n-\\tpublic void setNumeratorDegreesOfFreedom(double degreesOfFreedom) {\\n-\\t\\tif (degreesOfFreedom <= 0.0) {\\n-\\t\\t\\tthrow new java.lang.IllegalArgumentException(\\n-\\t\\t\\t\\\"degrees of freedom must be positive.\\\");\\n-\\t\\t}\\n-\\t\\tthis.numeratorDegreesOfFreedom = degreesOfFreedom;\\n-\\t}\\n \\n \\n \\n \\n \\n-\\tpublic double getNumeratorDegreesOfFreedom() {\\n-\\t\\treturn numeratorDegreesOfFreedom;\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\treturn numeratorDegreesOfFreedom;} \\tpublic void setNumeratorDegreesOfFreedom(double degreesOfFreedom) { \\t\\tif (degreesOfFreedom <= 0.0) { \\t\\t\\tthrow new java.lang.IllegalArgumentException(\\\"degrees of freedom must be positive.\\\");} \\t\\tthis.numeratorDegreesOfFreedom = degreesOfFreedom;} \\tpublic double getNumeratorDegreesOfFreedom() { \\t\\treturn numeratorDegreesOfFreedom;\\n \\t}\\n \\n \\n\\n"}]}