{"executions":[{"result":{"success":false,"error":"testAdd(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.addSub(Fraction.java:571)\n    at org.apache.commons.math.fraction.Fraction.add(Fraction.java:460)\n    at org.apache.commons.math.fraction.FractionTest.testAdd(FractionTest.java:352)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAdd","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225309,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225292},{"result":{"success":false,"error":"testConstructor(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.<init>(Fraction.java:138)\n    at org.apache.commons.math.fraction.FractionTest.testConstructor(FractionTest.java:46)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testConstructor","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225249,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225196},{"result":{"success":false,"error":"testDivide(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.divide(Fraction.java:633)\n    at org.apache.commons.math.fraction.FractionTest.testDivide(FractionTest.java:388)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testDivide","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225316,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225309},{"result":{"success":false,"error":"testGetReducedFraction(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.getReducedFraction(Fraction.java:654)\n    at org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(FractionTest.java:540)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetReducedFraction","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225340,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225337},{"result":{"success":false,"error":"testGoldenRatio(org.apache.commons.math.fraction.FractionTest): wrong exception caught\nclass junit.framework.AssertionFailedError: wrong exception caught\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.fraction.FractionTest.testGoldenRatio(FractionTest.java:75)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGoldenRatio","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225254,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,6 +62,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225249},{"result":{"success":false,"error":"testIntegerOverflow(org.apache.commons.math.fraction.FractionTest): wrong exception caught\nclass junit.framework.AssertionFailedError: wrong exception caught\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:148)\n    at org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(FractionTest.java:137)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testIntegerOverflow","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225261,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,6 +62,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225258},{"result":{"success":false,"error":"testNegate(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.negate(Fraction.java:419)\n    at org.apache.commons.math.fraction.FractionTest.testNegate(FractionTest.java:292)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testNegate","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225292,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225289},{"result":{"success":false,"error":"testReciprocal(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.<init>(Fraction.java:134)\n    at org.apache.commons.math.fraction.Fraction.reciprocal(Fraction.java:440)\n    at org.apache.commons.math.fraction.FractionTest.testReciprocal(FractionTest.java:260)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testReciprocal","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225289,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225285},{"result":{"success":false,"error":"testSubtract(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at org.apache.commons.math.MathRuntimeException.translate(MathRuntimeException.java:42)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.addSub(Fraction.java:571)\n    at org.apache.commons.math.fraction.Fraction.subtract(Fraction.java:480)\n    at org.apache.commons.math.fraction.FractionTest.testSubtract(FractionTest.java:498)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSubtract","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225334,"decisions":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,6 +63,8 @@\n         try {\n-            if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n-                // caching the resource bundle\n-                cachedResources =\n+            if (cachedResources != null) {\n+                if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n+                    // caching the resource bundle\n+                    cachedResources =\n                     ResourceBundle.getBundle(\"org.apache.commons.math.MessagesResources\", locale);\n+                }\n             }\n","startDate":1557009225321},{"result":{"success":false,"error":"testAdd(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.addSub(Fraction.java:571)\n    at org.apache.commons.math.fraction.Fraction.add(Fraction.java:460)\n    at org.apache.commons.math.fraction.FractionTest.testAdd(FractionTest.java:352)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAdd","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225392,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225377},{"result":{"success":false,"error":"testConstructor(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.<init>(Fraction.java:138)\n    at org.apache.commons.math.fraction.FractionTest.testConstructor(FractionTest.java:46)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testConstructor","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225364,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225342},{"result":{"success":false,"error":"testDivide(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.divide(Fraction.java:633)\n    at org.apache.commons.math.fraction.FractionTest.testDivide(FractionTest.java:388)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testDivide","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225397,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225392},{"result":{"success":false,"error":"testGetReducedFraction(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.getReducedFraction(Fraction.java:654)\n    at org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(FractionTest.java:540)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetReducedFraction","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225413,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225410},{"result":{"success":false,"error":"testGoldenRatio(org.apache.commons.math.fraction.FractionTest): wrong exception caught\nclass junit.framework.AssertionFailedError: wrong exception caught\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.fraction.FractionTest.testGoldenRatio(FractionTest.java:75)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGoldenRatio","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225366,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225364},{"result":{"success":false,"error":"testIntegerOverflow(org.apache.commons.math.fraction.FractionTest): wrong exception caught\nclass junit.framework.AssertionFailedError: wrong exception caught\n    at junit.framework.Assert.fail(Assert.java:57)\n    at junit.framework.TestCase.fail(TestCase.java:227)\n    at org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:148)\n    at org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(FractionTest.java:137)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n    at fr.inria.spirals.npefix.main.run.Main.run(Main.java:66)\n    at fr.inria.spirals.npefix.main.run.Main.main(Main.java:48)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testIntegerOverflow","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225368,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225366},{"result":{"success":false,"error":"testNegate(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.negate(Fraction.java:419)\n    at org.apache.commons.math.fraction.FractionTest.testNegate(FractionTest.java:292)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n    at fr.inria.spirals.npefix.main.run.Main.multipleRuns(Main.java:104)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testNegate","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225377,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225374},{"result":{"success":false,"error":"testReciprocal(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.<init>(Fraction.java:134)\n    at org.apache.commons.math.fraction.Fraction.reciprocal(Fraction.java:440)\n    at org.apache.commons.math.fraction.FractionTest.testReciprocal(FractionTest.java:260)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testReciprocal","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225374,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225371},{"result":{"success":false,"error":"testSubtract(org.apache.commons.math.fraction.FractionTest): null\nclass java.lang.NullPointerException: null\n    at java.text.MessageFormat.applyPattern(MessageFormat.java:436)\n    at java.text.MessageFormat.<init>(MessageFormat.java:380)\n    at org.apache.commons.math.MathRuntimeException.buildMessage(MathRuntimeException.java:99)\n    at org.apache.commons.math.MathRuntimeException.createArithmeticException(MathRuntimeException.java:279)\n    at org.apache.commons.math.fraction.Fraction.addSub(Fraction.java:571)\n    at org.apache.commons.math.fraction.Fraction.subtract(Fraction.java:480)\n    at org.apache.commons.math.fraction.FractionTest.testSubtract(FractionTest.java:498)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at junit.framework.TestCase.runTest(TestCase.java:176)\n    at junit.framework.TestCase.runBare(TestCase.java:141)\n    at junit.framework.TestResult$1.protect(TestResult.java:122)\n    at junit.framework.TestResult.runProtected(TestResult.java:142)\n    at junit.framework.TestResult.run(TestResult.java:125)\n    at junit.framework.TestCase.run(TestCase.java:129)\n    at junit.framework.TestSuite.runTest(TestSuite.java:255)\n    at junit.framework.TestSuite.run(TestSuite.java:250)\n    at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n    at utils.sacha.runner.main.TestRunner.run(TestRunner.java:70)\n    at fr.inria.spirals.npefix.main.all.DefaultRepairStrategy.run(DefaultRepairStrategy.java:90)\n    at fr.inria.spirals.npefix.main.all.Launcher.run(Launcher.java:289)\n\n\n","type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSubtract","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225410,"decisions":[{"epsilon":0,"nbUse":1,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return null;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225397},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAdd","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225470,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225454},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testConstructor","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225437,"decisions":[{"epsilon":0,"nbUse":4,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225414},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testDivide","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225479,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225470},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetReducedFraction","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225496,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225493},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGoldenRatio","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225441,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225437},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testIntegerOverflow","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225445,"decisions":[{"epsilon":0,"nbUse":4,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225441},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testNegate","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225454,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225451},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testReciprocal","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225451,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225447},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSubtract","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225493,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return s;\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225479},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testAdd","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225548,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225533},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testConstructor","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225519,"decisions":[{"epsilon":0,"nbUse":4,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225497},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testDivide","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225557,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225548},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGetReducedFraction","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225573,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225570},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testGoldenRatio","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225521,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225519},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testIntegerOverflow","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225524,"decisions":[{"epsilon":0,"nbUse":4,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathException.java\n+++ MathException.java\n@@ -62,2 +62,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2131,"line":63,"executionCount":0,"sourceStart":2117,"class":"org.apache.commons.math.MathException"}],"startDate":1557009225521},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testNegate","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225533,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225530},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testReciprocal","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225530,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225527},{"result":{"success":true,"type":"test"},"metadata":{"seed":10,"strategy_selection":"exploration"},"test":{"name":"testSubtract","class":"org.apache.commons.math.fraction.FractionTest"},"endDate":1557009225570,"decisions":[{"epsilon":0,"nbUse":2,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}],"diff":"--- MathRuntimeException.java\n+++ MathRuntimeException.java\n@@ -63,2 +63,5 @@\n         try {\n+            if (cachedResources == null) {\n+                return new String();\n+            }\n             if ((cachedResources == null) || (! cachedResources.getLocale().equals(locale))) {\n","locations":[{"sourceEnd":2198,"line":64,"executionCount":0,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"}],"startDate":1557009225557}],"endInit":1557009224648,"start":1557009225144,"end":1557009225957,"searchSpace":[{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2198,"line":64,"sourceStart":2184,"class":"org.apache.commons.math.MathRuntimeException"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}},{"epsilon":0,"nbUse":0,"decisionType":"NEW","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":true,"strategy":"Strat3","value":{"instanceType":"Primitive","class":"class java.lang.Boolean","value":false}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":false,"strategy":"Strat4 NULL","value":{"instanceType":"Primitive","class":"null","value":"null"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":false,"strategy":"Strat4 VAR","value":{"variableName":"s","instanceType":"Variable"}},{"epsilon":0,"nbUse":0,"decisionType":"RANDOM","location":{"sourceEnd":2131,"line":63,"sourceStart":2117,"class":"org.apache.commons.math.MathException"},"used":false,"strategy":"Strat4 NEW","value":{"instanceType":"New","class":"java.lang.String"}}]}