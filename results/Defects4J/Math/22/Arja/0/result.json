{
  "repair_end": "2018-12-01 14:05:49.413878", 
  "repair_begin": "2018-12-01 12:33:36.114487", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 132, 
          "faulty": "final double logn=FastMath.log(numeratorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "numericalVarianceIsCalculated=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_880/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:33:39.195435605 -0500\n@@ -126,10 +126,14 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n-        final double logn = FastMath.log(numeratorDegreesOfFreedom);\n+        numericalVarianceIsCalculated = true;\n+\t\tfinal double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_880/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:33:39.195435605 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 132, 
          "faulty": "final double logn=FastMath.log(numeratorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_998/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:38:14.196623418 -0500\n@@ -126,10 +126,17 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n-        final double logn = FastMath.log(numeratorDegreesOfFreedom);\n+        if (!numericalVarianceIsCalculated) {\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n+\t\t\tnumericalVarianceIsCalculated = true;\n+\t\t}\n+\t\tfinal double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_998/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:38:14.196623418 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 131, 
          "faulty": "final double logx=FastMath.log(x);", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1484/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:57:13.939213264 -0500\n@@ -128,7 +128,10 @@\n     public double density(double x) {\n         final double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n-        final double logx = FastMath.log(x);\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1484/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:57:13.939213264 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/FastMath.java", 
          "line": 1107, 
          "faulty": "return Double.NEGATIVE_INFINITY;", 
          "type": "Delete", 
          "seed": "if (x != x) {\n  return Double.NaN;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_478/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:17:54.525101914 -0500\n@@ -126,7 +126,10 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/util/FastMath.java\t2018-12-01 06:33:19.697757877 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_478/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/util/FastMath.java\t2018-12-01 07:17:54.529101927 -0500\n@@ -1104,7 +1104,7 @@\n      */\n     private static double log(final double x, final double[] hiPrec) {\n         if (x==0) { // Handle special case of +0/-0\n-            return Double.NEGATIVE_INFINITY;\n+            \n         }\n         long bits = Double.doubleToLongBits(x);\n \n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_478/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:17:54.529101927 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 133, 
          "faulty": "final double logm=FastMath.log(denominatorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "if (numeratorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,numeratorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1342/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:51:43.726176543 -0500\n@@ -126,11 +126,19 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n-        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+        if (numeratorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tnumeratorDegreesOfFreedom);\n+\t\t}\n+\t\tfinal double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n         return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1342/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:51:43.730176554 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 132, 
          "faulty": "final double logn=FastMath.log(numeratorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "if (denominatorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,denominatorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1396/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:53:45.370539299 -0500\n@@ -126,10 +126,18 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n-        final double logn = FastMath.log(numeratorDegreesOfFreedom);\n+        if (denominatorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tdenominatorDegreesOfFreedom);\n+\t\t}\n+\t\tfinal double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1396/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:53:45.370539299 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 136, 
          "faulty": "return FastMath.exp(nhalf * logn + nhalf * logx - logx + mhalf * logm - nhalf * lognxm - mhalf * lognxm - Beta.logBeta(nhalf,mhalf));", 
          "type": "InsertBefore", 
          "seed": "if (denominatorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,denominatorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_850/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:32:29.683162834 -0500\n@@ -126,14 +126,22 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n-        return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n+        if (denominatorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tdenominatorDegreesOfFreedom);\n+\t\t}\n+\t\treturn FastMath.exp(nhalf * logn + nhalf * logx - logx +\n                             mhalf * logm - nhalf * lognxm - mhalf * lognxm -\n                             Beta.logBeta(nhalf, mhalf));\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_850/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:32:29.683162834 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 136, 
          "faulty": "return FastMath.exp(nhalf * logn + nhalf * logx - logx + mhalf * logm - nhalf * lognxm - mhalf * lognxm - Beta.logBeta(nhalf,mhalf));", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_783/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:29:53.118604411 -0500\n@@ -126,14 +126,20 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n-        return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\treturn FastMath.exp(nhalf * logn + nhalf * logx - logx +\n                             mhalf * logm - nhalf * lognxm - mhalf * lognxm -\n                             Beta.logBeta(nhalf, mhalf));\n     }\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_783/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:29:53.118604411 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 275, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1700/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:05:40.885061638 -0500\n@@ -126,7 +126,10 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1700/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 08:05:40.885061638 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 133, 
          "faulty": "final double logm=FastMath.log(denominatorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "if (denominatorDegreesOfFreedom <= 0) {\n  throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,denominatorDegreesOfFreedom);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 258, 
          "faulty": "return 0;", 
          "type": "Replace", 
          "seed": "return solverAbsoluteAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1630/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 08:02:57.360438358 -0500\n@@ -126,11 +126,19 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n-        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+        if (denominatorDegreesOfFreedom <= 0) {\n+\t\t\tthrow new NotStrictlyPositiveException(\n+\t\t\t\t\tLocalizedFormats.DEGREES_OF_FREEDOM,\n+\t\t\t\t\tdenominatorDegreesOfFreedom);\n+\t\t}\n+\t\tfinal double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n         return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n@@ -255,7 +263,7 @@\n      * @return lower bound of the support (always 0)\n      */\n     public double getSupportLowerBound() {\n-        return 0;\n+        return solverAbsoluteAccuracy;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1630/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 08:02:57.360438358 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 131, 
          "faulty": "final double logx=FastMath.log(x);", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 258, 
          "faulty": "return 0;", 
          "type": "Replace", 
          "seed": "return 0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1535/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:59:13.283624432 -0500\n@@ -126,9 +126,13 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n-        final double logx = FastMath.log(x);\n+        numericalVariance = calculateNumericalVariance();\n+\t\tfinal double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n@@ -255,7 +259,7 @@\n      * @return lower bound of the support (always 0)\n      */\n     public double getSupportLowerBound() {\n-        return 0;\n+        return 0.0;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1535/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:59:13.291624460 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_322/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:11:48.896401057 -0500\n@@ -126,7 +126,10 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_322/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:11:48.932401070 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 132, 
          "faulty": "final double logn=FastMath.log(numeratorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1178/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:45:16.581210533 -0500\n@@ -126,10 +126,14 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n-        final double logn = FastMath.log(numeratorDegreesOfFreedom);\n+        numericalVariance = calculateNumericalVariance();\n+\t\tfinal double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1178/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:45:16.585210542 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 133, 
          "faulty": "final double logm=FastMath.log(denominatorDegreesOfFreedom);", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1134/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:43:34.492982068 -0500\n@@ -126,11 +126,17 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n-        final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n                                            denominatorDegreesOfFreedom);\n         return FastMath.exp(nhalf * logn + nhalf * logx - logx +\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1134/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:43:34.492982068 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 258, 
          "faulty": "return 0;", 
          "type": "Replace", 
          "seed": "return 0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_692/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:26:18.502007892 -0500\n@@ -126,7 +126,10 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n@@ -255,7 +258,7 @@\n      * @return lower bound of the support (always 0)\n      */\n     public double getSupportLowerBound() {\n-        return 0;\n+        return 0.0;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_692/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:26:18.502007892 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 131, 
          "faulty": "final double logx=FastMath.log(x);", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_894/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:34:09.815559847 -0500\n@@ -126,9 +126,15 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n-        final double logx = FastMath.log(x);\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_894/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:34:09.819559863 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 131, 
          "faulty": "final double logx=FastMath.log(x);", 
          "type": "InsertBefore", 
          "seed": "numericalVariance=calculateNumericalVariance();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1373/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:52:53.310381079 -0500\n@@ -126,9 +126,13 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n-        final double logx = FastMath.log(x);\n+        numericalVariance = calculateNumericalVariance();\n+\t\tfinal double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n         final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1373/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:52:53.310381079 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 258, 
          "faulty": "return 0;", 
          "type": "Replace", 
          "seed": "return solverAbsoluteAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1368/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:52:43.706352366 -0500\n@@ -126,7 +126,10 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n         final double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n@@ -255,7 +258,7 @@\n      * @return lower bound of the support (always 0)\n      */\n     public double getSupportLowerBound() {\n-        return 0;\n+        return solverAbsoluteAccuracy;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_1368/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:52:43.706352366 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 129, 
          "faulty": "final double nhalf=numeratorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (x <= 0) {\n  return 0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 130, 
          "faulty": "final double mhalf=denominatorDegreesOfFreedom / 2;", 
          "type": "InsertBefore", 
          "seed": "if (!numericalVarianceIsCalculated) {\n  numericalVariance=calculateNumericalVariance();\n  numericalVarianceIsCalculated=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java", 
          "line": 184, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_417/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2018-12-01 07:15:31.448711890 -0500\n@@ -126,8 +126,15 @@\n      * @since 2.1\n      */\n     public double density(double x) {\n-        final double nhalf = numeratorDegreesOfFreedom / 2;\n-        final double mhalf = denominatorDegreesOfFreedom / 2;\n+        if (x <= 0) {\n+\t\t\treturn 0;\n+\t\t}\n+\t\tfinal double nhalf = numeratorDegreesOfFreedom / 2;\n+        if (!numericalVarianceIsCalculated) {\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n+\t\t\tnumericalVarianceIsCalculated = true;\n+\t\t}\n+\t\tfinal double mhalf = denominatorDegreesOfFreedom / 2;\n         final double logx = FastMath.log(x);\n         final double logn = FastMath.log(numeratorDegreesOfFreedom);\n         final double logm = FastMath.log(denominatorDegreesOfFreedom);\n\n\n--- /tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 06:33:23.389757961 -0500\n+++ /tmp/Arja_Defects4J_Math_22/patches_owa9/Patch_417/patched/tmp/Arja_Defects4J_Math_22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java\t2018-12-01 07:15:31.452711899 -0500\n@@ -181,7 +181,7 @@\n \n     /** {@inheritDoc} */\n     public boolean isSupportUpperBoundInclusive() {\n-        return false;\n+        return true;\n     }\n \n     /**\n\n\n"
    }
  ]
}