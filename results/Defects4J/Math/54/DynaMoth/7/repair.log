cd /tmp/DynaMoth_Defects4J_Math_54;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 5 \
	--source src/main/java/ \
	--classpath "target/classes/:target/test-classes/:/tmp/DynaMoth_Defects4J_Math_54/target/classes/:/tmp/DynaMoth_Defects4J_Math_54/target/test-classes/:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
10:19:25.111 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:19:25.115 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Math_54/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_54/target/test-classes/, file:/tmp/DynaMoth_Defects4J_Math_54/target/classes/, file:/tmp/DynaMoth_Defects4J_Math_54/target/test-classes/, file:/home/tdurieux/defects4j4repair/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
10:19:25.115 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:19:25.116 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MathRuntimeExceptionTest, org.apache.commons.math.exception.MathRuntimeExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest]
10:19:25.119 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.RetryRunnerTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.FunctionUtilsTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.GaussianTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.HarmonicOscillatorTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogisticTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.LogitTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.SigmoidTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.function.StepFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolver2Test, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.SecantSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpDecTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpMathTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.dfp.DfpTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.DimensionMismatchExceptionTest, org.apache.commons.math.exception.MathRuntimeExceptionTest, org.apache.commons.math.exception.MathRuntimeExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.MaxCountExceededExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NonMonotonousSequenceExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.OutOfRangeExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ArgUtilsTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.exception.util.ExceptionContextTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.CMAESOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.PowellOptimizerTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.GaussianFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BracketFinderTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.BrentOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well1024aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937aTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well19937cTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497aTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well44497bTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.random.Well512aTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.MannWhitneyUTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathStrictComparisonTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTest, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.FastMathTestPerformance, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.IncrementorTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.MultidimensionalCounterTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.PairTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=5, outputFolder=., json=true}
10:19:25.119 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
10:19:25.135 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 916 MB
10:19:25.135 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:19:25.136 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 990 MB
10:19:25.136 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
10:19:25.137 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
10:19:25.137 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
10:21:53.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:21:53.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:746 which is executed by 2 tests
1857420685
10:21:54.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:21:54.283 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:743 which is executed by 2 tests
1857420685
10:21:54.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:21:54.929 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (450 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:21:56.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:21:56.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:741 which is executed by 2 tests
1857420685
10:21:56.755 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:21:57.327 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (560 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:21:58.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:21:58.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:740 which is executed by 2 tests
1857420685
10:21:58.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:21:59.110 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (524 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:00.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:00.571 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (446 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:01.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:22:01.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:739 which is executed by 2 tests
1857420685
10:22:01.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:02.244 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (546 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:02.679 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:22:02.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:738 which is executed by 2 tests
1857420685
10:22:02.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:22:02.822 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:737 which is executed by 2 tests
1857420685
10:22:02.963 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:03.452 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (481 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:04.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:22:04.064 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:736 which is executed by 2 tests
1857420685
10:22:04.203 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:04.782 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (572 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:05.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:22:05.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:735 which is executed by 2 tests
1857420685
10:22:05.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:05.986 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (414 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:06.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:22:06.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:734 which is executed by 2 tests
1857420685
10:22:06.751 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:07.164 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:07.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:22:07.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:733 which is executed by 2 tests
1857420685
10:22:07.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:22:07.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:732 which is executed by 2 tests
1857420685
10:22:07.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:22:07.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:731 which is executed by 2 tests
1857420685
10:22:08.108 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:22:08.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:729 which is executed by 2 tests
1857420685
10:22:08.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:22:08.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:728 which is executed by 2 tests
1857420685
10:22:08.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:22:08.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:662 which is executed by 2 tests
1857420685
10:22:08.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:22:08.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:659 which is executed by 2 tests
1857420685
10:22:08.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:09.082 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (413 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:13.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:22:13.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:657 which is executed by 2 tests
1857420685
10:22:13.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:13.626 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (476 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:17.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:22:17.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:656 which is executed by 2 tests
1857420685
10:22:17.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:18.156 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (452 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:22.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:22.546 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (426 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:26.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:22:26.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:655 which is executed by 2 tests
1857420685
10:22:26.619 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:27.036 [pool-56-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:28.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:22:28.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:654 which is executed by 2 tests
1857420685
10:22:28.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:29.405 [pool-60-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (465 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:31.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:22:31.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:653 which is executed by 2 tests
1857420685
10:22:31.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:31.953 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (430 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:32.355 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:22:32.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:652 which is executed by 2 tests
1857420685
10:22:32.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:32.921 [pool-68-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (424 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:33.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:22:33.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:651 which is executed by 2 tests
1857420685
10:22:33.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:34.066 [pool-72-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:34.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:22:34.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:649 which is executed by 2 tests
1857420685
10:22:34.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:22:34.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:648 which is executed by 2 tests
1857420685
10:22:34.685 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:22:34.686 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:647 which is executed by 2 tests
1857420685
10:22:34.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:22:34.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:646 which is executed by 2 tests
1857420685
10:22:34.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:22:34.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:645 which is executed by 2 tests
1857420685
10:22:35.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:22:35.087 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:634 which is executed by 2 tests
1857420685
10:22:35.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:22:35.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:630 which is executed by 2 tests
1857420685
10:22:35.356 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:35.763 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (399 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:36.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
10:22:36.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:629 which is executed by 2 tests
1857420685
10:22:36.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:36.942 [pool-80-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (428 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:37.627 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:38.061 [pool-84-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (404 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:38.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
10:22:38.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:627 which is executed by 2 tests
1857420685
10:22:38.778 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:39.197 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (411 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:39.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
10:22:39.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:626 which is executed by 2 tests
1857420685
10:22:39.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
10:22:39.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:625 which is executed by 2 tests
1857420685
10:22:40.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
10:22:40.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:623 which is executed by 2 tests
1857420685
10:22:40.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:40.621 [pool-92-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (421 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:41.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
10:22:41.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:621 which is executed by 2 tests
1857420685
10:22:41.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:41.790 [pool-96-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (421 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:42.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
10:22:42.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:620 which is executed by 2 tests
1857420685
10:22:42.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
10:22:42.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:619 which is executed by 2 tests
1857420685
10:22:42.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
10:22:42.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:618 which is executed by 2 tests
1857420685
10:22:42.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
10:22:42.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:616 which is executed by 2 tests
1857420685
10:22:42.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
10:22:42.959 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:615 which is executed by 2 tests
1857420685
10:22:43.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:43.542 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (443 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:44.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
10:22:44.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:607 which is executed by 2 tests
1857420685
10:22:44.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
10:22:44.289 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:606 which is executed by 2 tests
1857420685
10:22:44.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
10:22:44.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:605 which is executed by 2 tests
1857420685
10:22:44.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
10:22:44.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:604 which is executed by 2 tests
1857420685
10:22:44.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
10:22:44.688 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:603 which is executed by 2 tests
1857420685
10:22:44.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
10:22:44.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:590 which is executed by 2 tests
1857420685
10:22:44.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:45.392 [pool-104-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (432 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:45.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
10:22:45.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:589 which is executed by 2 tests
1857420685
10:22:45.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:46.324 [pool-108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (450 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:46.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
10:22:46.660 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:588 which is executed by 2 tests
1857420685
10:22:46.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:47.208 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (409 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:47.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
10:22:47.562 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:587 which is executed by 2 tests
1857420685
10:22:47.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:48.120 [pool-116-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (419 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:48.488 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
10:22:48.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:586 which is executed by 2 tests
1857420685
10:22:48.621 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:49.053 [pool-120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:49.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
10:22:49.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:584 which is executed by 2 tests
1857420685
10:22:49.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:50.035 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (480 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:50.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
10:22:50.365 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:583 which is executed by 2 tests
1857420685
10:22:50.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:50.903 [pool-128-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (394 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:51.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
10:22:51.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:582 which is executed by 2 tests
1857420685
10:22:51.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
10:22:51.371 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:580 which is executed by 2 tests
1857420685
10:22:51.503 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:51.944 [pool-132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (434 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:52.331 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
10:22:52.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:579 which is executed by 2 tests
1857420685
10:22:52.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:52.884 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (413 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:53.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
10:22:53.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:578 which is executed by 2 tests
1857420685
10:22:53.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
10:22:53.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:576 which is executed by 2 tests
1857420685
10:22:53.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
10:22:53.774 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:575 which is executed by 2 tests
1857420685
10:22:53.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
10:22:53.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:574 which is executed by 2 tests
1857420685
10:22:54.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
10:22:54.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:573 which is executed by 2 tests
1857420685
10:22:54.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
10:22:54.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1915 which is executed by 4 tests
68623
10:22:54.347 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:54.781 [pool-140-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (428 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:55.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
10:22:55.552 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1907 which is executed by 5 tests
68623
10:22:55.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:56.146 [pool-144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (413 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:56.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
10:22:56.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1906 which is executed by 5 tests
68623
10:22:57.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:57.614 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (493 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:58.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
10:22:58.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:717 which is executed by 5 tests
68623
10:22:58.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:22:58.906 [pool-152-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:22:59.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
10:22:59.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:715 which is executed by 5 tests
68623
10:22:59.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:00.384 [pool-156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (402 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:01.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
10:23:01.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:714 which is executed by 5 tests
68623
10:23:01.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:01.861 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (512 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:02.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
10:23:02.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:712 which is executed by 5 tests
68623
10:23:02.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:03.260 [pool-164-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (410 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:03.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
10:23:03.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:711 which is executed by 5 tests
68623
10:23:04.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:04.579 [pool-168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (416 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:05.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
10:23:05.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1946 which is executed by 6 tests
68623
10:23:05.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
10:23:05.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1942 which is executed by 6 tests
68623
10:23:05.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:06.157 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (413 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:06.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
10:23:06.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1941 which is executed by 6 tests
68623
10:23:07.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:07.550 [pool-176-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:08.259 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:08.712 [pool-180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (447 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:09.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
10:23:09.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1934 which is executed by 6 tests
68623
10:23:09.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:10.062 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:10.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:11.226 [pool-188-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (450 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:11.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
10:23:11.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1932 which is executed by 6 tests
68623
10:23:12.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:12.579 [pool-192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (454 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:23:13.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
10:23:13.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1931 which is executed by 6 tests
68623
10:23:13.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:23:13.911 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:26:34.174 [pool-195-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:26:34.174 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:26:34.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
10:26:34.174 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1930 which is executed by 6 tests
68623
10:26:34.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:26:34.776 [pool-199-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:26:35.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
10:26:35.554 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1929 which is executed by 6 tests
68623
10:26:35.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:26:36.169 [pool-203-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (441 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:26:36.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
10:26:36.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1928 which is executed by 6 tests
68623
10:26:37.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:26:37.581 [pool-207-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (493 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:26:41.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
10:26:41.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1927 which is executed by 6 tests
68623
10:26:41.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:26:41.896 [pool-211-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (402 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:30:02.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
10:30:02.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1926 which is executed by 6 tests
68623
10:30:02.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:30:02.691 [pool-215-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (402 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:22.944 [pool-214-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:33:22.945 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:33:22.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
10:33:22.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1925 which is executed by 6 tests
68623
10:33:23.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:23.560 [pool-218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (410 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:24.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
10:33:24.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1924 which is executed by 6 tests
68623
10:33:24.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
10:33:24.583 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1923 which is executed by 6 tests
68623
10:33:24.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
10:33:24.744 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1918 which is executed by 6 tests
68623
10:33:24.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
10:33:24.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1904 which is executed by 6 tests
68623
10:33:25.067 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:25.490 [pool-222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:26.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
10:33:26.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1899 which is executed by 6 tests
68623
10:33:26.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:26.740 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:27.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:27.801 [pool-230-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (402 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:28.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
10:33:28.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1896 which is executed by 6 tests
68623
10:33:28.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
10:33:28.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1885 which is executed by 6 tests
68623
10:33:28.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:29.232 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:29.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:30.321 [pool-238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (412 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:31.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
10:33:31.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1865 which is executed by 6 tests
68623
10:33:31.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:31.613 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:32.334 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:32.742 [pool-246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (401 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:33.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
10:33:33.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1860 which is executed by 6 tests
68623
10:33:33.567 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:33.990 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (416 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:34.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:35.128 [pool-254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (421 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:35.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
10:33:35.798 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1297 which is executed by 10 tests
68623
10:33:35.972 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:36.386 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (408 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:37.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
10:33:37.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1295 which is executed by 10 tests
68623
10:33:37.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:37.613 [pool-262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (424 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:38.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:38.720 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (440 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:39.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
10:33:39.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1293 which is executed by 10 tests
68623
10:33:39.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:39.945 [pool-270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (418 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:40.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
10:33:40.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:849 which is executed by 10 tests
68623
10:33:40.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
10:33:40.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1773 which is executed by 12 tests
68623
10:33:40.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:41.323 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (401 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:42.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
10:33:42.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1274 which is executed by 12 tests
68623
10:33:42.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:42.658 [pool-278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:43.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
10:33:43.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2119 which is executed by 13 tests
68623
10:33:43.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:43.902 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (434 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:44.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
10:33:44.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:845 which is executed by 13 tests
68623
10:33:44.786 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:45.219 [pool-286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (425 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:45.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:46.426 [pool-290-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (444 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:33:47.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
10:33:47.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1723 which is executed by 14 tests
68623
10:33:47.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:33:47.680 [pool-294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (413 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:07.922 [pool-293-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:37:07.922 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:37:07.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
10:37:07.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1273 which is executed by 14 tests
68623
10:37:08.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:08.586 [pool-297-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (483 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:09.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:09.795 [pool-301-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (521 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:10.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
10:37:10.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1272 which is executed by 14 tests
68623
10:37:10.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
10:37:10.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1271 which is executed by 14 tests
68623
10:37:10.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:11.237 [pool-305-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (428 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:11.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
10:37:11.895 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1270 which is executed by 14 tests
68623
10:37:12.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:12.499 [pool-309-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (442 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:13.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
10:37:13.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1269 which is executed by 14 tests
68623
10:37:13.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
10:37:13.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1041 which is executed by 15 tests
68623
10:37:13.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
10:37:13.477 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2109 which is executed by 15 tests
68623
10:37:13.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:14.063 [pool-313-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:14.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
10:37:14.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2068 which is executed by 15 tests
68623
10:37:14.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:15.316 [pool-317-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (407 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:15.965 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
10:37:15.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2067 which is executed by 15 tests
68623
10:37:16.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:16.547 [pool-321-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:17.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
10:37:17.412 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2066 which is executed by 15 tests
68623
10:37:17.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:37:17.989 [pool-325-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (406 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:37:18.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
10:37:18.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:593 which is executed by 63 tests
1857420685
10:37:18.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
10:37:18.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:570 which is executed by 63 tests
1857420685
10:37:18.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:28.196 [pool-329-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9273 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:28.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:38.063 [pool-335-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9248 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:38.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
10:37:38.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:562 which is executed by 63 tests
1857420685
10:37:38.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
10:37:38.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:560 which is executed by 63 tests
1857420685
10:37:38.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:48.271 [pool-341-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9270 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:48.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
10:37:48.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:556 which is executed by 63 tests
1857420685
10:37:48.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:37:58.243 [pool-347-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9267 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:37:58.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
10:37:58.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:555 which is executed by 63 tests
1857420685
10:37:58.975 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:08.237 [pool-353-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9253 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:08.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:18.065 [pool-359-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9221 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:18.684 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
10:38:18.685 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:554 which is executed by 63 tests
1857420685
10:38:18.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:28.140 [pool-365-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9316 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:28.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
10:38:28.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:553 which is executed by 63 tests
1857420685
10:38:29.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:38.338 [pool-371-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9303 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:38.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
10:38:38.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:551 which is executed by 63 tests
1857420685
10:38:39.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:48.365 [pool-377-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9279 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:48.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
10:38:48.971 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:547 which is executed by 63 tests
1857420685
10:38:49.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:38:58.411 [pool-383-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9302 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:38:59.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
10:38:59.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:546 which is executed by 63 tests
1857420685
10:38:59.164 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:08.481 [pool-389-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9308 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:09.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:18.326 [pool-395-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9246 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:18.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
10:39:18.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:543 which is executed by 63 tests
1857420685
10:39:19.062 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:28.348 [pool-401-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9277 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:28.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
10:39:28.974 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:542 which is executed by 63 tests
1857420685
10:39:29.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:38.384 [pool-407-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9271 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:38.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
10:39:38.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:541 which is executed by 63 tests
1857420685
10:39:39.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:48.428 [pool-413-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9299 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:39:49.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:39:58.466 [pool-419-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9355 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:39:58.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
10:39:58.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:538 which is executed by 63 tests
1857420685
10:39:58.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:08.202 [pool-425-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9282 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:08.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
10:40:08.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:537 which is executed by 63 tests
1857420685
10:40:08.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:18.253 [pool-431-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9318 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:18.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
10:40:18.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:536 which is executed by 63 tests
1857420685
10:40:18.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:28.418 [pool-437-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9426 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:28.981 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:38.263 [pool-443-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9274 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:38.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
10:40:38.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:533 which is executed by 63 tests
1857420685
10:40:38.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:48.300 [pool-449-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9336 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:48.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
10:40:48.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:532 which is executed by 63 tests
1857420685
10:40:49.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:40:58.391 [pool-455-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9324 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:40:58.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:08.307 [pool-461-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9305 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:08.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
10:41:08.938 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:530 which is executed by 63 tests
1857420685
10:41:09.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:18.362 [pool-467-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9282 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:18.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
10:41:18.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:529 which is executed by 63 tests
1857420685
10:41:19.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:28.384 [pool-473-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9287 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:28.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
10:41:28.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:527 which is executed by 63 tests
1857420685
10:41:29.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
10:41:29.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:525 which is executed by 63 tests
1857420685
10:41:29.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
10:41:29.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:524 which is executed by 63 tests
1857420685
10:41:29.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
10:41:29.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:523 which is executed by 63 tests
1857420685
10:41:29.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
10:41:29.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:522 which is executed by 63 tests
1857420685
10:41:29.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
10:41:29.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:329 which is executed by 63 tests
1857420685
10:41:29.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
10:41:29.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:328 which is executed by 63 tests
1857420685
10:41:29.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:39.281 [pool-479-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9376 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:39.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
10:41:39.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:266 which is executed by 63 tests
1857420685
10:41:40.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
10:41:40.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:248 which is executed by 63 tests
1857420685
10:41:40.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
10:41:40.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1402 which is executed by 63 tests
68623
10:41:40.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
10:41:40.316 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1399 which is executed by 63 tests
68623
10:41:40.473 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:41:49.755 [pool-485-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9274 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:41:50.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
10:41:50.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1398 which is executed by 63 tests
68623
10:41:50.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:00.042 [pool-491-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9311 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:00.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
10:42:00.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1396 which is executed by 63 tests
68623
10:42:00.884 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:10.252 [pool-497-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9360 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:10.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:20.291 [pool-503-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9288 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:20.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
10:42:20.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1390 which is executed by 63 tests
68623
10:42:21.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:30.402 [pool-509-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9273 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:31.117 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:40.487 [pool-515-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9362 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:41.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
10:42:41.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1384 which is executed by 63 tests
68623
10:42:41.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:42:50.739 [pool-521-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9357 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:42:51.429 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:00.801 [pool-527-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9365 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:01.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
10:43:01.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1377 which is executed by 63 tests
68623
10:43:01.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:11.042 [pool-533-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9385 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:11.736 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:21.078 [pool-539-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9334 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:21.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
10:43:21.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1374 which is executed by 63 tests
68623
10:43:21.929 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:31.279 [pool-545-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9342 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:43:32.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
10:43:32.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1373 which is executed by 63 tests
68623
10:43:32.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:43:41.487 [pool-551-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9316 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

10:47:01.734 [pool-550-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:47:01.734 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:47:01.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
10:47:01.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1372 which is executed by 63 tests
68623
10:47:01.896 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
10:47:01.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1371 which is executed by 63 tests
68623
10:47:02.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:47:11.389 [pool-554-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9327 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:33.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
10:48:33.514 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1370 which is executed by 63 tests
68623
10:48:33.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
10:48:33.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1368 which is executed by 63 tests
68623
10:48:33.847 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:43.266 [pool-560-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9410 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:43.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:48:53.295 [pool-566-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9327 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:48:54.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
10:48:54.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1352 which is executed by 63 tests
68623
10:48:54.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:03.516 [pool-572-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9335 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:04.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
10:49:04.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1351 which is executed by 63 tests
68623
10:49:04.405 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:13.837 [pool-578-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9424 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:14.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
10:49:14.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1333 which is executed by 63 tests
68623
10:49:14.695 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
java.lang.AssertionError: FastMath should implement all StrictMath methods
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
10:49:24.035 [pool-584-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (9332 ms)
<> Total tests run: 58
<> Ignored tests: 1
<> Failed tests: 2
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ checkMissingFastMathClasses(org.apache.commons.math.util.FastMathTest)
[FastMath should implement all StrictMath methods]
java.lang.AssertionError: FastMath should implement all StrictMath methods    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
10:49:24.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
10:49:24.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1332 which is executed by 63 tests
68623
10:49:24.875 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
10:49:24.875 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:640 which is executed by 63 tests
68623
10:49:25.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
10:49:25.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1494 which is executed by 16 tests
68623
10:49:25.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:25.596 [pool-590-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (404 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:26.274 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
10:49:26.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:862 which is executed by 17 tests
68623
10:49:26.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:26.881 [pool-594-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (447 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:27.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
10:49:27.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2328 which is executed by 19 tests
68623
10:49:27.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:28.127 [pool-598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (405 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:28.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
10:49:28.770 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1234 which is executed by 19 tests
68623
10:49:28.925 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:29.347 [pool-602-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (416 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:30.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
10:49:30.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:253 which is executed by 20 tests
-1048260553
10:49:30.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
10:49:30.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:250 which is executed by 20 tests
-1048260553
10:49:30.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:30.725 [pool-606-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (433 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:31.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
10:49:31.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:249 which is executed by 20 tests
-1048260553
10:49:31.453 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:31.889 [pool-610-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (430 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:32.469 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:32.891 [pool-614-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (415 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:33.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
10:49:33.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:247 which is executed by 20 tests
-1048260553
10:49:33.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
10:49:33.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:245 which is executed by 20 tests
-1048260553
10:49:33.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:34.169 [pool-618-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (417 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:49:34.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
10:49:34.766 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:244 which is executed by 20 tests
-1048260553
10:49:34.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:49:35.328 [pool-622-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (423 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:52:55.500 [pool-621-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:52:55.501 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:52:55.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
10:52:55.501 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:242 which is executed by 20 tests
-1048260553
10:52:55.645 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:52:56.248 [pool-625-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (597 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:52:56.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
10:52:56.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:241 which is executed by 20 tests
-1048260553
10:52:57.154 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:52:57.678 [pool-629-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (518 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:52:58.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
10:52:58.468 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:239 which is executed by 20 tests
-1048260553
10:52:58.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
10:52:58.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:238 which is executed by 20 tests
-1048260553
10:52:58.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:52:59.253 [pool-633-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (499 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:28.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
10:54:28.222 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:237 which is executed by 20 tests
-1048260553
10:54:28.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:28.883 [pool-637-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (499 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:29.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
10:54:29.760 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:236 which is executed by 20 tests
-1048260553
10:54:29.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:30.493 [pool-641-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (582 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:30.668 [pool-640-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpMath.java:138: error: variable prevtrial might not have been initialized
            trial = prevtrial;
                    ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:54:30.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
10:54:30.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:235 which is executed by 20 tests
-1048260553
10:54:30.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:31.331 [pool-643-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (521 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:31.502 [pool-642-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
DfpMath.java:137: error: variable prevr might not have been initialized
            r = prevr;
                ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
10:54:31.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
10:54:31.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:231 which is executed by 20 tests
-1048260553
10:54:31.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
10:54:31.646 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:229 which is executed by 20 tests
-1048260553
10:54:31.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
10:54:31.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:224 which is executed by 20 tests
-1048260553
10:54:31.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:32.408 [pool-645-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (476 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:33.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
10:54:33.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:223 which is executed by 20 tests
-1048260553
10:54:33.273 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:33.834 [pool-649-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (555 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:34.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
10:54:34.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:222 which is executed by 20 tests
-1048260553
10:54:34.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:35.136 [pool-653-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (530 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:35.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:36.445 [pool-657-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (596 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:37.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
10:54:37.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2382 which is executed by 20 tests
68623
10:54:37.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
10:54:37.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2378 which is executed by 20 tests
68623
10:54:37.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:38.001 [pool-661-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (517 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:38.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:39.311 [pool-665-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (533 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:40.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
10:54:40.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2376 which is executed by 20 tests
68623
10:54:40.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
10:54:40.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2375 which is executed by 20 tests
68623
10:54:40.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
10:54:40.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2370 which is executed by 20 tests
68623
10:54:40.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:41.585 [pool-669-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (629 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:42.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
10:54:42.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2366 which is executed by 20 tests
68623
10:54:42.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:43.073 [pool-673-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (556 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:43.834 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:44.386 [pool-677-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (534 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:45.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
10:54:45.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2359 which is executed by 20 tests
68623
10:54:45.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:45.867 [pool-681-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (560 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:46.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:47.231 [pool-685-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (563 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:48.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
10:54:48.078 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2357 which is executed by 20 tests
68623
10:54:48.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
10:54:48.242 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2356 which is executed by 20 tests
68623
10:54:48.417 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:48.976 [pool-689-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (553 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:49.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
10:54:49.791 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2355 which is executed by 20 tests
68623
10:54:49.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
10:54:49.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2354 which is executed by 20 tests
68623
10:54:50.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:50.613 [pool-693-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (467 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:51.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
10:54:51.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2349 which is executed by 20 tests
68623
10:54:51.496 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:52.041 [pool-697-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (539 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:52.868 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:53.476 [pool-701-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (576 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:54.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
10:54:54.263 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2345 which is executed by 20 tests
68623
10:54:54.438 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:54.981 [pool-705-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (537 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:55.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:56.325 [pool-709-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (593 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:57.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
10:54:57.173 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2342 which is executed by 20 tests
68623
10:54:57.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:57.851 [pool-713-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (497 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:54:58.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
10:54:58.844 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2341 which is executed by 20 tests
68623
10:54:59.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:54:59.578 [pool-717-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (548 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:00.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:00.983 [pool-721-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (585 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:01.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
10:55:01.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2340 which is executed by 20 tests
68623
10:55:02.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:02.566 [pool-725-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (556 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:03.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
10:55:03.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2336 which is executed by 20 tests
68623
10:55:03.528 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:04.014 [pool-729-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (480 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:04.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
10:55:04.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2332 which is executed by 20 tests
68623
10:55:04.988 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:05.489 [pool-733-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (495 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:06.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
10:55:06.303 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2331 which is executed by 20 tests
68623
10:55:06.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
10:55:06.478 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2327 which is executed by 20 tests
68623
10:55:06.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:07.210 [pool-737-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (564 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:08.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:08.550 [pool-741-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (505 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:09.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
10:55:09.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2326 which is executed by 20 tests
68623
10:55:09.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
10:55:09.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2319 which is executed by 20 tests
68623
10:55:09.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:10.197 [pool-745-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (514 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:11.045 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:11.612 [pool-749-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (561 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:12.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
10:55:12.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2318 which is executed by 20 tests
68623
10:55:12.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
10:55:12.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2317 which is executed by 20 tests
68623
10:55:12.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
10:55:12.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2313 which is executed by 20 tests
68623
10:55:13.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:13.512 [pool-753-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (484 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:14.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:14.807 [pool-757-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (546 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:15.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
10:55:15.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2305 which is executed by 20 tests
68623
10:55:15.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:16.487 [pool-761-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (636 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:17.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:17.780 [pool-765-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (490 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:18.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
10:55:18.513 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:801 which is executed by 20 tests
68623
10:55:18.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
10:55:18.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:576 which is executed by 20 tests
68623
10:55:18.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
10:55:18.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1105 which is executed by 20 tests
68623
10:55:19.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
10:55:19.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:217 which is executed by 21 tests
-1048260553
10:55:19.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:19.672 [pool-769-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (511 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:20.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:20.998 [pool-773-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (556 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:21.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
10:55:21.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:215 which is executed by 21 tests
-1048260553
10:55:21.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
10:55:21.940 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpMath:213 which is executed by 21 tests
-1048260553
10:55:22.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
10:55:22.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:414 which is executed by 21 tests
1857420685
10:55:22.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
10:55:22.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:661 which is executed by 21 tests
68623
10:55:22.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
10:55:22.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1230 which is executed by 21 tests
68623
10:55:22.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:23.068 [pool-777-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (505 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:23.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
10:55:23.910 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1102 which is executed by 22 tests
68623
10:55:24.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:24.618 [pool-781-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (532 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:25.451 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:25.990 [pool-785-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (522 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:26.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
10:55:26.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1099 which is executed by 22 tests
68623
10:55:26.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:27.554 [pool-789-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (586 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:28.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:28.923 [pool-793-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (493 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:29.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
10:55:29.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1096 which is executed by 22 tests
68623
10:55:29.854 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:30.422 [pool-797-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (559 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:31.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:31.791 [pool-801-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (602 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:32.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
10:55:32.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:740 which is executed by 23 tests
68623
10:55:32.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:33.222 [pool-805-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (509 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:34.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
10:55:34.025 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:739 which is executed by 23 tests
68623
10:55:34.196 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:34.730 [pool-809-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (528 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:35.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
10:55:35.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:727 which is executed by 23 tests
68623
10:55:35.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:36.168 [pool-813-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (484 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:37.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
10:55:37.005 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1850 which is executed by 24 tests
68623
10:55:37.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
10:55:37.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1847 which is executed by 24 tests
68623
10:55:37.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:37.922 [pool-817-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (576 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:38.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
10:55:38.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1846 which is executed by 24 tests
68623
10:55:38.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:39.498 [pool-821-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (557 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:40.237 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:40.824 [pool-825-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (566 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:41.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
10:55:41.649 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1845 which is executed by 24 tests
68623
10:55:41.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
10:55:41.811 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1842 which is executed by 24 tests
68623
10:55:41.985 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:42.576 [pool-829-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (585 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:43.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
10:55:43.328 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1841 which is executed by 24 tests
68623
10:55:43.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:44.058 [pool-833-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (550 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:44.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
10:55:44.843 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1840 which is executed by 24 tests
68623
10:55:45.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
10:55:45.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1839 which is executed by 24 tests
68623
10:55:45.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
10:55:45.202 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1838 which is executed by 24 tests
68623
10:55:45.360 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:45.957 [pool-837-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (578 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:46.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
10:55:46.788 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1836 which is executed by 24 tests
68623
10:55:46.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:47.481 [pool-841-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (526 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:48.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:49.164 [pool-845-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (597 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:58.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
10:55:58.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1833 which is executed by 24 tests
68623
10:55:58.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:55:58.970 [pool-849-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (543 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:55:59.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
10:55:59.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1832 which is executed by 24 tests
68623
10:56:00.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:00.720 [pool-853-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (599 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:01.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
10:56:01.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1831 which is executed by 24 tests
68623
10:56:01.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
10:56:01.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1830 which is executed by 24 tests
68623
10:56:02.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
10:56:02.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1829 which is executed by 24 tests
68623
10:56:02.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:02.772 [pool-857-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (546 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:03.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
10:56:03.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1828 which is executed by 24 tests
68623
10:56:03.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
10:56:03.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1826 which is executed by 24 tests
68623
10:56:03.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
10:56:03.979 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1818 which is executed by 24 tests
68623
10:56:04.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:04.715 [pool-861-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (556 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:05.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:06.045 [pool-865-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (504 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:06.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
10:56:06.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1808 which is executed by 24 tests
68623
10:56:06.977 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:07.613 [pool-869-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (630 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:08.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:08.934 [pool-873-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (479 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:09.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
10:56:09.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1797 which is executed by 24 tests
68623
10:56:09.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:10.443 [pool-877-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (566 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:11.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:11.750 [pool-881-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (493 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:56:12.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
10:56:12.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1698 which is executed by 24 tests
68623
10:56:12.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:56:13.254 [pool-885-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (545 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

10:59:33.508 [pool-884-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
10:59:33.508 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
10:59:33.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
10:59:33.508 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1697 which is executed by 24 tests
68623
10:59:33.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
10:59:34.441 [pool-888-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (744 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:02:54.715 [pool-887-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
11:02:54.715 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
11:02:54.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
11:02:54.716 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1505 which is executed by 24 tests
68623
11:02:54.897 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:02:55.531 [pool-891-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (626 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:02:56.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
11:02:56.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1241 which is executed by 24 tests
68623
11:02:56.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:02:57.685 [pool-895-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (704 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:02:58.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
11:02:58.589 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:918 which is executed by 25 tests
68623
11:02:58.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
11:02:58.765 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:393 which is executed by 25 tests
1857420685
11:02:58.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
11:02:58.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2154 which is executed by 25 tests
68623
11:02:59.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:02:59.598 [pool-899-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (526 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:00.329 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
11:03:00.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2153 which is executed by 25 tests
68623
11:03:00.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:01.043 [pool-903-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (537 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:01.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
11:03:01.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2086 which is executed by 25 tests
68623
11:03:02.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:02.593 [pool-907-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (515 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:03.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
11:03:03.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:2085 which is executed by 25 tests
68623
11:03:03.632 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:04.122 [pool-911-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (484 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:04.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
11:03:04.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1508 which is executed by 25 tests
68623
11:03:05.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
11:03:05.097 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1504 which is executed by 25 tests
68623
11:03:05.265 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:05.863 [pool-915-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (592 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:06.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:07.235 [pool-919-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (569 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:07.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
11:03:07.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1499 which is executed by 25 tests
68623
11:03:08.160 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:08.658 [pool-923-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (492 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:08.903 [pool-922-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:931: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
11:03:08.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
11:03:08.903 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1498 which is executed by 25 tests
68623
11:03:09.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:09.708 [pool-925-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (630 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:09.952 [pool-924-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:929: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
11:03:09.952 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:10.487 [pool-927-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (529 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:11.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
11:03:11.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1492 which is executed by 25 tests
68623
11:03:11.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:12.010 [pool-931-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (535 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:12.826 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:13.355 [pool-935-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (504 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:14.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
11:03:14.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1490 which is executed by 25 tests
68623
11:03:14.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:15.070 [pool-939-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (602 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:15.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
11:03:15.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1489 which is executed by 25 tests
68623
11:03:15.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:16.531 [pool-943-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (535 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:18.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
11:03:18.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1485 which is executed by 25 tests
68623
11:03:19.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:19.711 [pool-947-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (537 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:20.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
11:03:20.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1484 which is executed by 25 tests
68623
11:03:20.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:20.642 [pool-951-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (445 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:20.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
11:03:20.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1479 which is executed by 25 tests
68623
11:03:21.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:21.583 [pool-955-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (452 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:21.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
11:03:21.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1478 which is executed by 25 tests
68623
11:03:22.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:22.607 [pool-959-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (530 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:23.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
11:03:23.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1477 which is executed by 25 tests
68623
11:03:23.997 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:24.641 [pool-963-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (638 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:26.039 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:26.624 [pool-967-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (579 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:27.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
11:03:27.909 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1476 which is executed by 25 tests
68623
11:03:28.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:28.650 [pool-971-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (565 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:29.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
11:03:29.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1475 which is executed by 25 tests
68623
11:03:29.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
11:03:29.964 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1471 which is executed by 25 tests
68623
11:03:30.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:30.671 [pool-975-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (541 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:31.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
11:03:31.123 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1469 which is executed by 25 tests
68623
11:03:31.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:31.935 [pool-979-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (625 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:03:32.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
11:03:32.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1468 which is executed by 25 tests
68623
11:03:32.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:03:32.954 [pool-983-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (489 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:06:53.204 [pool-982-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
11:06:53.204 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
11:06:53.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
11:06:53.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1466 which is executed by 25 tests
68623
11:06:53.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:06:53.980 [pool-986-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (585 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:06:54.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
11:06:54.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1465 which is executed by 25 tests
68623
11:06:55.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
11:06:55.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1464 which is executed by 25 tests
68623
11:06:55.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:06:55.963 [pool-990-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (762 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:06:56.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
11:06:56.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1463 which is executed by 25 tests
68623
11:06:56.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
11:06:56.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1462 which is executed by 25 tests
68623
11:06:56.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:06:57.352 [pool-994-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (704 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:06:57.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
11:06:57.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1460 which is executed by 25 tests
68623
11:06:57.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
11:06:57.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1423 which is executed by 25 tests
68623
11:06:58.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:06:58.807 [pool-998-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (692 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:06:59.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:07:00.357 [pool-1002-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (752 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:07:01.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
11:07:01.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1420 which is executed by 25 tests
68623
11:07:01.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
11:07:01.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1413 which is executed by 25 tests
68623
11:07:01.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:07:02.601 [pool-1006-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (745 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:07:03.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:07:04.353 [pool-1010-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (729 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:07:05.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
11:07:05.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1251 which is executed by 25 tests
68623
11:07:05.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:07:06.552 [pool-1014-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (763 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:26.827 [pool-1013-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
11:10:26.827 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
11:10:26.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
11:10:26.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.DfpField:383 which is executed by 26 tests
1857420685
11:10:27.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
11:10:27.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1783 which is executed by 26 tests
68623
11:10:27.406 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:28.287 [pool-1017-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (843 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:29.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
11:10:29.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1718 which is executed by 26 tests
68623
11:10:29.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:30.585 [pool-1021-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (733 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:31.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
11:10:31.622 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1000 which is executed by 27 tests
68623
11:10:31.781 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:32.572 [pool-1025-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (784 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:33.538 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:34.300 [pool-1029-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (756 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:35.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
11:10:35.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:997 which is executed by 27 tests
68623
11:10:35.362 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:35.908 [pool-1033-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (540 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:36.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
11:10:36.954 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:996 which is executed by 27 tests
68623
11:10:37.169 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:38.011 [pool-1037-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (831 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:38.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
11:10:38.984 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:995 which is executed by 27 tests
68623
11:10:39.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:39.848 [pool-1041-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (684 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:40.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
11:10:40.833 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:994 which is executed by 27 tests
68623
11:10:41.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
11:10:41.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:987 which is executed by 27 tests
68623
11:10:41.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:41.874 [pool-1045-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (698 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:42.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:43.587 [pool-1049-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (690 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:44.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
11:10:44.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:976 which is executed by 27 tests
68623
11:10:44.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:45.406 [pool-1053-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (545 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:46.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:46.932 [pool-1057-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (668 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:47.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
11:10:47.998 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:969 which is executed by 27 tests
68623
11:10:48.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:48.882 [pool-1061-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (674 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:49.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:50.520 [pool-1065-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (684 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:51.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
11:10:51.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:965 which is executed by 27 tests
68623
11:10:51.615 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:52.351 [pool-1069-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (730 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:53.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:53.973 [pool-1073-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (748 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:54.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
11:10:54.983 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:961 which is executed by 27 tests
68623
11:10:55.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:55.858 [pool-1077-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (691 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:56.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:57.623 [pool-1081-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (734 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:10:58.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
11:10:58.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:959 which is executed by 27 tests
68623
11:10:58.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
11:10:58.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1786 which is executed by 27 tests
68623
11:10:58.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
11:10:58.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1782 which is executed by 27 tests
68623
11:10:59.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:10:59.793 [pool-1085-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (636 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:00.728 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:01.483 [pool-1089-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (735 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:02.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
11:11:02.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1777 which is executed by 27 tests
68623
11:11:02.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:03.105 [pool-1093-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (551 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:03.400 [pool-1092-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:1129: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
11:11:03.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
11:11:03.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1776 which is executed by 27 tests
68623
11:11:03.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:04.374 [pool-1095-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (750 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:04.640 [pool-1094-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
Dfp.java:1127: error: variable excp might not have been initialized
        if (excp != 0) {
            ^
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:99)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:67)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:203)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.dumpedToClassLoader(SpoonedFile.java:130)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:140)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:135)
	at fr.inria.lille.repair.nopol.synth.dynamoth.DynamothSynthesizer.findAngelicValuesAndBuildPatch(DynamothSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
11:11:04.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:05.219 [pool-1097-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (571 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:06.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
11:11:06.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1772 which is executed by 27 tests
68623
11:11:06.262 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:06.906 [pool-1101-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (638 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:07.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:08.595 [pool-1105-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (611 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:09.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
11:11:09.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1770 which is executed by 27 tests
68623
11:11:09.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:10.553 [pool-1109-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (685 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:11.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
11:11:11.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1769 which is executed by 27 tests
68623
11:11:11.734 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:12.489 [pool-1113-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (748 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:11:17.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
11:11:17.425 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1765 which is executed by 27 tests
68623
11:11:17.598 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:11:18.492 [pool-1117-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (887 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:14:20.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
11:14:20.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1764 which is executed by 27 tests
68623
11:14:20.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:14:21.420 [pool-1121-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (770 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:17:18.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
11:17:18.519 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1759 which is executed by 27 tests
68623
11:17:18.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:17:19.420 [pool-1125-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (724 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:17:20.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
11:17:20.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.dfp.Dfp:1758 which is executed by 27 tests
68623
11:17:20.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
11:17:21.201 [pool-1129-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (647 ms)
<> Total tests run: 23
<> Ignored tests: 0
<> Failed tests: 1
~ testIssue567(org.apache.commons.math.dfp.DfpTest)
[expected:<0.0> but was:<-Infinity>]
java.lang.AssertionError: expected:<0.0> but was:<-Infinity>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

11:19:31.798 [main] ERROR fr.inria.lille.repair.Main - Timeout: execution time > 60 MINUTES
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) ~[na:1.8.0_181]
	at fr.inria.lille.repair.Main.main(Main.java:106) ~[nopol.jar:na]
TIMEOUT
Command exited with non-zero status 255
8380.30user 41.41system 1:00:08elapsed 233%CPU (0avgtext+0avgdata 4548200maxresident)k
50872inputs+12080outputs (4major+1322435minor)pagefaults 0swaps


Node: graphene-18.nancy.grid5000.fr



Date: Sat Dec  1 11:19:32 EST 2018

