{"general":{"NR_RIGHT_COMPILATIONS":14,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Math-49","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":null,"NR_GENERATIONS":null,"TOTAL_TIME":125.475,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"15","VALIDATION":"|true|0|2954|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.linear.OpenMapRealVector","PATH":"\\\/tmp\\\/jKali_Defects4J_Math_49\\\/output_astor\\\/AstorMain-Math-49\\\/src\\\/default\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/OpenMapRealVector.java","ORIGINAL_CODE":"if (!(isDefaultValue(value))) {\\n\\tentries.put(index, value);\\n}else \\tif (entries.containsKey(index)) {\\n\\t\\tentries.remove(index);\\n\\t}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"ReplaceIfBooleanOp","MODIFIED_FILE_PATH":"\\\/tmp\\\/jKali_Defects4J_Math_49\\\/.\\\/output_astor\\\/AstorMain-Math-49\\\/\\\/src\\\/\\\/variant-15_f\\\/org\\\/apache\\\/commons\\\/math\\\/linear\\\/OpenMapRealVector.java","LINE":"664","SUSPICIOUNESS":"0.267","MP_RANKING":"12","PATCH_HUNK_CODE":"if (true) {\\n\\tthis.entries.put(index, value);\\n}else \\tif (this.entries.containsKey(index)) {\\n\\t\\tthis.entries.remove(index);\\n\\t}","PATCH_HUNK_TYPE":"CtIfImpl|CtBlockImpl"}],"TIME":"10","GENERATION":"1","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/jKali_Defects4J_Math_49\\\/.\\\/output_astor\\\/AstorMain-Math-49\\\/\\\/bin\\\/\\\/variant-15","PATCH_DIFF_ORIG":"\\\/var\\\/lib\\\/oar\\\/.batch_job_bashrc: line 5: \\\/home\\\/tdurieux\\\/.bashrc: No such file or directory\\n--- org\\\/apache\\\/commons\\\/math\\\/linear\\\/OpenMapRealVector.java\\n+++ org\\\/apache\\\/commons\\\/math\\\/linear\\\/OpenMapRealVector.java\\n@@ -661,10 +661,10 @@\\n \\n \\tpublic void setEntry(int index, double value) {\\n \\t\\tcheckIndex(index);\\n-\\t\\tif (!(isDefaultValue(value))) {\\n-\\t\\t\\tentries.put(index, value);\\n-\\t\\t}else \\t\\t\\tif (entries.containsKey(index)) {\\n-\\t\\t\\t\\tentries.remove(index);\\n+\\t\\tif (true) {\\n+\\t\\t\\tthis.entries.put(index, value);\\n+\\t\\t}else \\t\\t\\tif (this.entries.containsKey(index)) {\\n+\\t\\t\\t\\tthis.entries.remove(index);\\n \\t\\t\\t}\\n \\t}\\n \\n\\n"}]}