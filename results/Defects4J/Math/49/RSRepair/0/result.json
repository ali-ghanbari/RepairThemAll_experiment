{
  "repair_end": "2018-12-02 09:30:32.870052", 
  "repair_begin": "2018-12-02 09:05:26.273819", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return LazyHolder.INSTANCE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double pia=1.5707963267948966 * 2.0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_257/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:23:10.242240243 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +525,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int j=index;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_122/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:21:10.589728118 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double lnzb=0.0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_367/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:24:49.414663436 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double lnzb = 0.0;\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double as[]=new double[2];"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_596/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:28:20.699653124 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double as[] = new double[2];\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double q0=0.0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_313/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:24:00.962454371 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double q0 = 0.0;\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "final double hiPrec[]=new double[2];"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_157/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:21:41.325860790 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        final double hiPrec[] = new double[2];\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double tmp[]=new double[2];"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_626/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:28:46.899770233 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double tmp[] = new double[2];\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 395, 
          "faulty": "states[index]=REMOVED;", 
          "type": "InsertBefore", 
          "seed": "int count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "boolean infinite=false;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_547/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:27:36.991455587 -0500\n@@ -392,8 +392,10 @@\n      */\n     private double doRemove(int index) {\n         keys[index]   = 0;\n-        states[index] = REMOVED;\n-        final double previous = values[index];\n+        int count = 0;\n+\t\tstates[index] = REMOVED;\n+        boolean infinite = false;\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n         ++count;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double p=2.7553817452272217E-6;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_407/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:25:24.470834858 -0500\n@@ -396,7 +396,7 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double p = 2.7553817452272217E-6;\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/MathRuntimeException.java", 
          "line": 132, 
          "faulty": "return new MessageFormat(pattern.getLocalizedString(locale),locale).format(arguments);", 
          "type": "InsertBefore", 
          "seed": "if (pattern != null) {\n  return new MessageFormat(pattern.getLocalizedString(locale),locale).format(arguments);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Replace", 
          "seed": "double z=0.04168701738764507;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "if (shouldGrowTable()) {\n  growTable();\n}"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/MathRuntimeException.java\t2018-12-02 03:05:11.212594069 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_192/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/MathRuntimeException.java\t2018-12-02 03:22:12.161993058 -0500\n@@ -129,7 +129,12 @@\n      */\n     private static String buildMessage(final Locale locale, final Localizable pattern,\n                                        final Object ... arguments) {\n-        return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);\n+        if (pattern != null) {\n+\t\t\t\t\t\t\t\t\t\t\treturn new MessageFormat(\n+\t\t\t\t\t\t\t\t\t\t\t\t\tpattern.getLocalizedString(locale),\n+\t\t\t\t\t\t\t\t\t\t\t\t\tlocale).format(arguments);\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\treturn new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);\n     }\n \n     /** Gets the message in a specified locale.\n\n\n--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_192/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:22:12.161993058 -0500\n@@ -393,10 +393,13 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        if (shouldGrowTable()) {\n+\t\t\tgrowTable();\n+\t\t}\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n+        double z = 0.04168701738764507;\n         return previous;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 663, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double[] res=new double[virtualSize];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "long result=1l;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 03:05:14.756594014 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_728/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 03:30:25.020201826 -0500\n@@ -660,7 +660,8 @@\n \n     /** {@inheritDoc} */\n     public void setEntry(int index, double value) {\n-        checkIndex(index);\n+        double[] res = new double[virtualSize];\n+\t\tcheckIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n\n\n--- /tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:05:11.284594068 -0500\n+++ /tmp/RSRepair_Defects4J_Math_49/patches_mc96/Patch_728/patched/tmp/RSRepair_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 03:30:25.024201843 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n"
    }
  ]
}