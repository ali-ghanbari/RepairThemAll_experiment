{
  "repair_end": "2018-12-02 18:35:57.461523", 
  "repair_begin": "2018-12-02 17:57:36.028534", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_973/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:38.567345817 -0500\n@@ -393,10 +393,10 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        keys[index] = 0;\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -529,9 +529,7 @@\n             if (referenceCount != count) {\n                 throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_973/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:38.567345817 -0500\n@@ -477,7 +477,8 @@\n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n         checkIndex(index);\n-        return entries.get(index);\n+        double tmp = 0;\n+\t\treturn entries.get(index);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "keys[index]=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 480, 
          "faulty": "return entries.get(index);", 
          "type": "InsertBefore", 
          "seed": "double tmp=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_240/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:21:16.436359433 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_240/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:21:16.440359587 -0500\n@@ -664,7 +664,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_940/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:06.590142541 -0500\n@@ -393,10 +393,11 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        final double[] special = { Double.NaN, Double.POSITIVE_INFINITY,\n+\t\t\t\tDouble.NEGATIVE_INFINITY };\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +527,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_940/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:34:06.590142541 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_940/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:06.594142692 -0500\n@@ -664,7 +664,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            int dimension = 0;\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_312/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:22:37.599427135 -0500\n@@ -354,7 +354,8 @@\n         final int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n-            return doRemove(index);\n+            int perturb = perturb(hash);\n+\t\t\treturn doRemove(index);\n         }\n \n         if (states[index] == FREE) {\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +561,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                double bs[] = new double[2];\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_312/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:22:37.603427284 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 357, 
          "faulty": "return doRemove(index);", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "double bs[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_503/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:26:03.623433204 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_503/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:26:03.623433204 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_503/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:26:03.627433359 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_662/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:29:06.346382607 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_147/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:19:35.504415461 -0500\n@@ -210,11 +210,11 @@\n         final int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n-            return true;\n+            int perturb = perturb(hash);\n+\t\t\treturn true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -392,11 +392,11 @@\n      */\n     private double doRemove(int index) {\n         keys[index]   = 0;\n-        states[index] = REMOVED;\n+        double reduceResults[] = new double[3];\n+\t\tstates[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 213, 
          "faulty": "return true;", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 395, 
          "faulty": "states[index]=REMOVED;", 
          "type": "InsertBefore", 
          "seed": "double reduceResults[]=new double[3];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_508/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:26:08.651629659 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_508/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:26:08.655629816 -0500\n@@ -368,7 +368,8 @@\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n-        while (iter.hasNext()) {\n+        int index = 0;\n+\t\twhile (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 371, 
          "faulty": "while (iter.hasNext()) {\n  iter.advance();\n  res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));\n}", 
          "type": "InsertBefore", 
          "seed": "int index=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_356/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:23:29.457351670 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_356/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:23:29.457351670 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_536/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:26:39.700834956 -0500\n@@ -213,10 +213,6 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n-\n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n             j = probe(perturb, j);\n@@ -396,7 +392,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_536/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:26:39.704835109 -0500\n@@ -368,7 +368,8 @@\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n-        while (iter.hasNext()) {\n+        int index = 0;\n+\t\twhile (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 371, 
          "faulty": "while (iter.hasNext()) {\n  iter.advance();\n  res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));\n}", 
          "type": "InsertBefore", 
          "seed": "int index=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return Math.PI * 3.0 / 4.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_474/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:34.074270915 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_474/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:25:34.078271074 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_474/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:34.078271074 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double facts[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_969/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:36.135254544 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -393,10 +393,11 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        final double[] special = { Double.NaN, Double.POSITIVE_INFINITY,\n+\t\t\t\tDouble.NEGATIVE_INFINITY };\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +527,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n+            double z = 0.04168701738764507;\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_969/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:36.139254694 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Replace", 
          "seed": "double z=0.04168701738764507;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1020/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:23.417022503 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1020/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:23.421022651 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_788/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:28.508062519 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_415/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:29.815691050 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_415/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:29.819691212 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -476,7 +477,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        int maxIndex = -1;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "int maxIndex=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_381/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:23:56.458344856 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_381/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:23:56.462345002 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -365,7 +366,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        int maxIndex = -1;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tEntry thisE = null;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry thisE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "int maxIndex=-1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "this.entries=new OpenIntToDoubleHashMap(0.0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_784/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:25.039925984 -0500\n@@ -213,8 +213,9 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +558,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_784/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:31:25.043926141 -0500\n@@ -367,7 +367,8 @@\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        String fullClassName = getClass().getName();\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_476/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:35.394323133 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_476/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:25:35.398323292 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_476/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:35.398323292 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -369,7 +370,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -664,7 +666,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double facts[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_56/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:17:56.148465627 -0500\n@@ -209,12 +209,12 @@\n \n         final int hash  = hashOf(key);\n         int index = hash & mask;\n-        if (containsKey(key, index)) {\n+        final double rln10b = 1.9699272335463627E-8;\n+\t\tif (containsKey(key, index)) {\n             return true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 212, 
          "faulty": "if (containsKey(key,index)) {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double rln10b=1.9699272335463627E-8;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_570/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:27:21.026420262 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_121/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:19:08.059310669 -0500\n@@ -209,12 +209,13 @@\n \n         final int hash  = hashOf(key);\n         int index = hash & mask;\n-        if (containsKey(key, index)) {\n-            return true;\n+        final double rln10b = 1.9699272335463627E-8;\n+\t\tif (containsKey(key, index)) {\n+            int perturb = perturb(hash);\n+\t\t\treturn true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -392,11 +393,11 @@\n      */\n     private double doRemove(int index) {\n         keys[index]   = 0;\n-        states[index] = REMOVED;\n+        double reduceResults[] = new double[3];\n+\t\tstates[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_121/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:19:08.063310830 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tfinal int blockSize = BlockRealMatrix.BLOCK_SIZE;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 212, 
          "faulty": "if (containsKey(key,index)) {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double rln10b=1.9699272335463627E-8;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "final int blockSize=BlockRealMatrix.BLOCK_SIZE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 213, 
          "faulty": "return true;", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 395, 
          "faulty": "states[index]=REMOVED;", 
          "type": "InsertBefore", 
          "seed": "double reduceResults[]=new double[3];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1033/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:34.385430814 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -396,7 +394,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1033/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:34.389430962 -0500\n@@ -217,7 +217,10 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        if (Double.isNaN(value)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -476,7 +479,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(value)) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_223/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:57.319624869 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +560,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                double ys[] = new double[2];\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_223/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:20:57.323625022 -0500\n@@ -419,7 +419,8 @@\n \n     /** {@inheritDoc} */\n     public int getDimension() {\n-        return virtualSize;\n+        double determinant = 1.0;\n+\t\treturn virtualSize;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 422, 
          "faulty": "return virtualSize;", 
          "type": "InsertBefore", 
          "seed": "double determinant=1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "double ys[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_598/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:27:51.807588803 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_598/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:27:51.811588954 -0500\n@@ -61,7 +61,9 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tEntry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_906/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:36.136989655 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_906/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:36.140989806 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_906/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:36.140989806 -0500\n@@ -366,7 +366,8 @@\n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n-        OpenMapRealVector res = new OpenMapRealVector(this);\n+        checkVectorDimensions(v.getDimension());\n+\t\tOpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 369, 
          "faulty": "OpenMapRealVector res=new OpenMapRealVector(this);", 
          "type": "InsertBefore", 
          "seed": "checkVectorDimensions(v.getDimension());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_246/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:21:22.176579019 -0500\n@@ -395,8 +395,8 @@\n         states[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n-        --size;\n-        ++count;\n+        int max = 0;\n+\t\t--size;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 398, 
          "faulty": "--size;", 
          "type": "InsertBefore", 
          "seed": "int max=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_162/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:19:52.165078636 -0500\n@@ -392,11 +392,11 @@\n      */\n     private double doRemove(int index) {\n         keys[index]   = 0;\n-        states[index] = REMOVED;\n+        final byte[] oldStates = states;\n+\t\tstates[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_162/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:19:52.165078636 -0500\n@@ -365,12 +365,12 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n-            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n+            double test = iter.value();\n+\t\t\tres.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 395, 
          "faulty": "states[index]=REMOVED;", 
          "type": "InsertBefore", 
          "seed": "final byte[] oldStates=states;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "char ret=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 373, 
          "faulty": "res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));", 
          "type": "InsertBefore", 
          "seed": "double test=iter.value();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "double u=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_106/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:18:51.450634011 -0500\n@@ -209,12 +209,13 @@\n \n         final int hash  = hashOf(key);\n         int index = hash & mask;\n-        if (containsKey(key, index)) {\n-            return true;\n+        final double rln10b = 1.9699272335463627E-8;\n+\t\tif (containsKey(key, index)) {\n+            int perturb = perturb(hash);\n+\t\t\treturn true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_106/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:18:51.454634175 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tfinal int blockSize = BlockRealMatrix.BLOCK_SIZE;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 212, 
          "faulty": "if (containsKey(key,index)) {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double rln10b=1.9699272335463627E-8;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "final int blockSize=BlockRealMatrix.BLOCK_SIZE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 213, 
          "faulty": "return true;", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_945/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:10.310282895 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_945/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:34:10.310282895 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_945/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:10.314283046 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1003/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:05.836366671 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -529,9 +528,7 @@\n             if (referenceCount != count) {\n                 throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1003/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:05.840366820 -0500\n@@ -365,7 +365,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        double alpha = 0;\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "double alpha=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1014/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:17.304794686 -0500\n@@ -213,10 +213,6 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n-\n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n             j = probe(perturb, j);\n@@ -396,7 +392,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +521,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1014/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:17.308794836 -0500\n@@ -367,7 +367,8 @@\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        int its = 0;\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return changeIndexSign(index);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return Math.random();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_977/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:41.039438555 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -529,9 +528,7 @@\n             if (referenceCount != count) {\n                 throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_187/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:19.170142605 -0500\n@@ -210,11 +210,11 @@\n         final int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n-            return true;\n+            int perturb = perturb(hash);\n+\t\t\treturn true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 213, 
          "faulty": "return true;", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_452/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:11.577376418 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_452/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:11.581376578 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -369,7 +370,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_929/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:56.837774119 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -393,10 +393,10 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        keys[index] = 0;\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_929/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:56.841774271 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_929/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:56.841774271 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "keys[index]=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_588/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:27:40.995179432 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_588/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:27:40.999179585 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_588/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:27:40.999179585 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        double s = 0;\n+\t\treturn entries;\n     }\n \n     /**\n@@ -369,7 +370,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "double s=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_842/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:25.602288285 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            double xs[] = new double[2];\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +525,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +557,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_842/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:32:25.602288285 -0500\n@@ -365,9 +365,9 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        String fullClassName = getClass().getName();\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tdouble invIJ = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return Math.random();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "double xs[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double invIJ=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int columnCount=getColumnDimension();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_994/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:57.572057763 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -396,7 +394,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +523,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_994/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:57.576057913 -0500\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_101/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:18:46.510431488 -0500\n@@ -214,7 +214,6 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +395,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_177/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:08.597727609 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +560,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                char ret = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_177/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:20:08.601727767 -0500\n@@ -419,7 +419,8 @@\n \n     /** {@inheritDoc} */\n     public int getDimension() {\n-        return virtualSize;\n+        double determinant = 1.0;\n+\t\treturn virtualSize;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 422, 
          "faulty": "return virtualSize;", 
          "type": "InsertBefore", 
          "seed": "double determinant=1.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "char ret=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_987/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:51.691837721 -0500\n@@ -213,10 +213,6 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n-\n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n             j = probe(perturb, j);\n@@ -396,7 +392,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +521,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return changeIndexSign(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_608/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:28:02.563994932 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_608/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:28:02.563994932 -0500\n@@ -61,7 +61,9 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tdouble sum2 = 0;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_608/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:28:02.567995083 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "double sum2=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_302/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:22:26.783022548 -0500\n@@ -354,7 +354,8 @@\n         final int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n-            return doRemove(index);\n+            int perturb = perturb(hash);\n+\t\t\treturn doRemove(index);\n         }\n \n         if (states[index] == FREE) {\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_302/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:22:26.787022699 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 357, 
          "faulty": "return doRemove(index);", 
          "type": "InsertBefore", 
          "seed": "int perturb=perturb(hash);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_827/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:09.133650282 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n@@ -561,7 +555,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_716/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:30:09.468905395 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_716/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:30:09.472905557 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tdouble invIJ = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double invIJ=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_478/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:36.630372004 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_478/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:36.634372162 -0500\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        int maxIndex = -1;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "int maxIndex=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_394/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:08.566819629 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_394/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:08.570819795 -0500\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double maxValue = Double.NEGATIVE_INFINITY;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double maxValue=Double.NEGATIVE_INFINITY;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_194/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:26.138415088 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +560,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                double as[] = new double[2];\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_194/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:20:26.138415088 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint regularPos = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int regularPos=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "double as[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_990/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:54.079927110 -0500\n@@ -207,14 +207,15 @@\n      */\n     public boolean containsKey(final int key) {\n \n-        final int hash  = hashOf(key);\n+        long result = 1;\n+\t\tfinal int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n             return true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_990/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:54.083927259 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 210, 
          "faulty": "final int hash=hashOf(key);", 
          "type": "InsertBefore", 
          "seed": "long result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_918/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:47.845433768 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_740/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:30:36.001976562 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_740/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:30:36.005976722 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_934/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:01.697957814 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_934/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:01.697957814 -0500\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_68/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:18:09.908951863 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_899/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:29.892752346 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_899/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:29.896752498 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_899/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:29.900752650 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_289/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:22:12.494486234 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_289/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:22:12.498486384 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1057/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:55.938231346 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1057/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:55.938231346 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n@@ -663,9 +662,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "List<Number> components=new ArrayList<Number>();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1031/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:33.177385874 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -394,9 +392,7 @@\n         keys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n-        values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +522,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1031/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:33.181386023 -0500\n@@ -217,7 +217,10 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        if (Double.isNaN(value)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -476,7 +479,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(value)) {\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 397, 
          "faulty": "values[index]=missingEntries;", 
          "type": "Delete", 
          "seed": "return BigReal.ONE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_379/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:23:55.254300683 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_379/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:23:55.258300830 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -476,7 +477,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        int maxIndex = -1;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +665,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tEntry thisE = null;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry thisE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "int maxIndex=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_952/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:16.914531815 -0500\n@@ -207,14 +207,15 @@\n      */\n     public boolean containsKey(final int key) {\n \n-        final int hash  = hashOf(key);\n+        long result = 1;\n+\t\tfinal int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n             return true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 210, 
          "faulty": "final int hash=hashOf(key);", 
          "type": "InsertBefore", 
          "seed": "long result=1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_455/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:13.965471792 -0500\n@@ -391,12 +391,12 @@\n      * @return removed value\n      */\n     private double doRemove(int index) {\n-        keys[index]   = 0;\n+        boolean negative = false;\n+\t\tkeys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_455/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:13.969471952 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 394, 
          "faulty": "keys[index]=0;", 
          "type": "InsertBefore", 
          "seed": "boolean negative=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_875/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:03.191733762 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_875/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:03.195733916 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_202/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:34.502741104 -0500\n@@ -391,12 +391,12 @@\n      * @return removed value\n      */\n     private double doRemove(int index) {\n-        keys[index]   = 0;\n+        double as[] = new double[2];\n+\t\tkeys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 394, 
          "faulty": "keys[index]=0;", 
          "type": "InsertBefore", 
          "seed": "double as[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_721/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:30:14.545111304 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +558,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_721/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:30:14.549111467 -0500\n@@ -367,7 +367,8 @@\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        String fullClassName = getClass().getName();\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tdouble invIJ = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double invIJ=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1028/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:30.789297014 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1028/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:30.793297162 -0500\n@@ -365,7 +365,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        double alpha = 0;\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "double alpha=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_850/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:33.966611184 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_850/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:32:33.966611184 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_751/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:30:47.762447464 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +525,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +557,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_751/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:30:47.766447624 -0500\n@@ -367,7 +367,8 @@\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        String fullClassName = getClass().getName();\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tdouble invIJ = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double invIJ=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_889/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:19.184344605 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_889/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:19.188344757 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_889/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:19.188344757 -0500\n@@ -365,7 +365,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        double gamma = 0;\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "double gamma=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1047/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:46.333874899 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -396,7 +394,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +523,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1047/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:46.337875047 -0500\n@@ -217,7 +217,10 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        if (Double.isNaN(value)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -476,7 +479,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +667,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(value)) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_915/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:45.469343728 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_915/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:45.473343880 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_915/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:45.477344031 -0500\n@@ -368,7 +368,8 @@\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n-        while (iter.hasNext()) {\n+        iter = entries.iterator();\n+\t\twhile (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 371, 
          "faulty": "while (iter.hasNext()) {\n  iter.advance();\n  res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));\n}", 
          "type": "InsertBefore", 
          "seed": "iter=entries.iterator();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_811/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:52.424999760 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +560,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_811/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:31:52.428999915 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_861/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:46.535095000 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_861/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:32:46.535095000 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n@@ -661,7 +660,8 @@\n     /** {@inheritDoc} */\n     public void setEntry(int index, double value) {\n         checkIndex(index);\n-        if (!isDefaultValue(value)) {\n+        double tmp = 0;\n+\t\tif (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n             entries.remove(index);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "int dataPos=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 664, 
          "faulty": "if (!isDefaultValue(value)) {\n  entries.put(index,value);\n}\n else if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double tmp=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_781/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:22.639831397 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +558,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_781/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:31:22.643831555 -0500\n@@ -365,9 +365,9 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        String fullClassName = getClass().getName();\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tdouble invIJ = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double invIJ=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_713/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:30:06.948802993 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_713/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:30:06.952803156 -0500\n@@ -368,8 +368,10 @@\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n-        while (iter.hasNext()) {\n-            iter.advance();\n+        String fullClassName = getClass().getName();\n+\t\twhile (iter.hasNext()) {\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 371, 
          "faulty": "while (iter.hasNext()) {\n  iter.advance();\n  res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));\n}", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_408/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:22.303384108 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_408/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:22.307384272 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_497/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:57.311186048 -0500\n@@ -391,12 +391,12 @@\n      * @return removed value\n      */\n     private double doRemove(int index) {\n-        keys[index]   = 0;\n+        boolean negative = false;\n+\t\tkeys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_497/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:57.311186048 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 394, 
          "faulty": "keys[index]=0;", 
          "type": "InsertBefore", 
          "seed": "boolean negative=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_386/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:01.498529653 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_386/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:01.502529801 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tEntry thisE = null;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry thisE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_482/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:40.390520517 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_482/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:40.390520517 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_513/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:26:13.527819827 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_513/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:26:13.527819827 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_513/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:26:13.531819983 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            OpenMapRealVector res = new OpenMapRealVector(this, 1);\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "OpenMapRealVector res=new OpenMapRealVector(this,1);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_218/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:20:52.551440834 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_218/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:20:52.551440834 -0500\n@@ -365,7 +365,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        RealVector result = v.copy();\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "RealVector result=v.copy();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_950/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:15.554480579 -0500\n@@ -207,14 +207,15 @@\n      */\n     public boolean containsKey(final int key) {\n \n-        final int hash  = hashOf(key);\n+        final double lns[] = new double[2];\n+\t\tfinal int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n             return true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_950/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:15.558480729 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 210, 
          "faulty": "final int hash=hashOf(key);", 
          "type": "InsertBefore", 
          "seed": "final double lns[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_937/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:04.094048312 -0500\n@@ -393,10 +393,11 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        final double[] special = { Double.NaN, Double.POSITIVE_INFINITY,\n+\t\t\t\tDouble.NEGATIVE_INFINITY };\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_910/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:39.797128605 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_910/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:39.801128758 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_910/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:39.801128758 -0500\n@@ -217,7 +217,8 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        double maxAbsoluteValue = 0.0;\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -365,7 +366,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        double gamma = 0;\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "double gamma=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "double maxAbsoluteValue=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_967/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:34.983211296 -0500\n@@ -207,7 +207,8 @@\n      */\n     public boolean containsKey(final int key) {\n \n-        final int hash  = hashOf(key);\n+        final double lns[] = new double[2];\n+\t\tfinal int hash  = hashOf(key);\n         int index = hash & mask;\n         if (containsKey(key, index)) {\n             return true;\n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 210, 
          "faulty": "final int hash=hashOf(key);", 
          "type": "InsertBefore", 
          "seed": "final double lns[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_971/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:37.415302587 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_971/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:34:37.419302738 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_971/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:37.419302738 -0500\n@@ -476,7 +476,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_389/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:03.778621856 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            double a[] = new double[2];\n         }\n \n         int j = index;\n@@ -394,9 +394,8 @@\n         keys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n-        values[index] = missingEntries;\n+        double y[] = new double[2];\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "double a[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 397, 
          "faulty": "values[index]=missingEntries;", 
          "type": "Replace", 
          "seed": "double y[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1024/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:26.997155847 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -396,7 +394,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +523,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1024/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:27.001155997 -0500\n@@ -217,7 +217,10 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        if (Double.isNaN(value)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -476,7 +479,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(value)) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1050/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:48.709963124 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,8 +396,8 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n-        return previous;\n+        double x2[] = new double[2];\n+\t\treturn previous;\n     }\n \n     /**\n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 400, 
          "faulty": "return previous;", 
          "type": "InsertBefore", 
          "seed": "double x2[]=new double[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_421/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:35.871937623 -0500\n@@ -214,7 +214,6 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +395,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_421/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:35.871937623 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -365,7 +366,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double facts[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "count=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "return getL1Distance(v.getData());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_927/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:55.537724952 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_927/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:33:55.541725103 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1039/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:39.185609308 -0500\n@@ -214,7 +214,6 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +395,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +524,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1039/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:39.189609457 -0500\n@@ -365,7 +365,8 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n+        double alpha = 0;\n+\t\tcheckVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "InsertBefore", 
          "seed": "double alpha=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "double value=Double.NaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_406/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:21.039332343 -0500\n@@ -214,7 +214,6 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +395,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_406/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:21.043332506 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double facts[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "count=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_797/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:37.972434295 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -394,9 +395,7 @@\n         keys[index]   = 0;\n         states[index] = REMOVED;\n         final double previous = values[index];\n-        values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +525,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 397, 
          "faulty": "values[index]=missingEntries;", 
          "type": "Delete", 
          "seed": "final double pi2b=6.123233995736766E-17;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_942/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:08.034197035 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -393,10 +393,10 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        keys[index] = 0;\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +526,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_942/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:34:08.034197035 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_942/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:08.038197186 -0500\n@@ -477,7 +477,8 @@\n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n         checkIndex(index);\n-        return entries.get(index);\n+        double tmp = 0;\n+\t\treturn entries.get(index);\n     }\n \n     /**\n@@ -663,9 +664,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "keys[index]=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 480, 
          "faulty": "return entries.get(index);", 
          "type": "InsertBefore", 
          "seed": "double tmp=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1000/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:03.504279541 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_921/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:50.333528003 -0500\n@@ -393,10 +393,11 @@\n     private double doRemove(int index) {\n         keys[index]   = 0;\n         states[index] = REMOVED;\n-        final double previous = values[index];\n+        final double[] special = { Double.NaN, Double.POSITIVE_INFINITY,\n+\t\t\t\tDouble.NEGATIVE_INFINITY };\n+\t\tfinal double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +527,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_921/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:50.337528154 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 396, 
          "faulty": "final double previous=values[index];", 
          "type": "InsertBefore", 
          "seed": "final double[] special={Double.NaN,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1045/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:45.169831666 -0500\n@@ -213,10 +213,6 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n-\n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n             j = probe(perturb, j);\n@@ -396,7 +392,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +521,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1045/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:45.173831816 -0500\n@@ -367,7 +367,8 @@\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n         checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n-        Iterator iter = res.entries.iterator();\n+        int its = 0;\n+\t\tIterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "return changeIndexSign(index);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return Math.random();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 370, 
          "faulty": "Iterator iter=res.entries.iterator();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_923/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:51.617576616 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_923/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:51.617576616 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_830/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:11.473741125 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_830/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:32:11.473741125 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n@@ -661,11 +660,15 @@\n     /** {@inheritDoc} */\n     public void setEntry(int index, double value) {\n         checkIndex(index);\n-        if (!isDefaultValue(value)) {\n+        double tmp = 0;\n+\t\tif (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "int dataPos=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 664, 
          "faulty": "if (!isDefaultValue(value)) {\n  entries.put(index,value);\n}\n else if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "double tmp=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_131/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:19:19.083756382 -0500\n@@ -214,7 +214,6 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +395,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_131/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:19:19.083756382 -0500\n@@ -370,7 +370,8 @@\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n             iter.advance();\n-            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n+            double test = iter.value();\n+\t\t\tres.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "char ret=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 373, 
          "faulty": "res.setEntry(iter.key(),iter.value() * v.getEntry(iter.key()));", 
          "type": "InsertBefore", 
          "seed": "double test=iter.value();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1035/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:35:35.641477532 -0500\n@@ -213,9 +213,7 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n-        }\n+        double relativeError = Double.MAX_VALUE;\n \n         int j = index;\n         for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {\n@@ -396,7 +394,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_1035/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:35:35.641477532 -0500\n@@ -217,7 +217,10 @@\n      * @since 2.1\n      */\n     protected boolean isDefaultValue(double value) {\n-        return FastMath.abs(value) < epsilon;\n+        if (Double.isNaN(value)) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn FastMath.abs(value) < epsilon;\n     }\n \n     /** {@inheritDoc} */\n@@ -476,7 +479,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        double xNormSqr = 0;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +667,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "double xNormSqr=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "Replace", 
          "seed": "double relativeError=Double.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 220, 
          "faulty": "return FastMath.abs(value) < epsilon;", 
          "type": "InsertBefore", 
          "seed": "if (Double.isNaN(value)) {\n  return false;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_459/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:25:17.477611868 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_459/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:25:17.481612027 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        Entry otherE = null;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_459/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:25:17.481612027 -0500\n@@ -369,7 +369,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -664,7 +665,8 @@\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n+            final int dim = getDimension();\n+\t\t\tentries.remove(index);\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 667, 
          "faulty": "entries.remove(index);", 
          "type": "InsertBefore", 
          "seed": "final int dim=getDimension();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "final double facts[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry otherE=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_904/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:33:34.984945896 -0500\n@@ -213,8 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n-            return false;\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,8 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            double lastScaleFactor = 1d;\n+\t\t\tboolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 11:57:17.173422807 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_904/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/AbstractRealVector.java\t2018-12-02 12:33:34.984945896 -0500\n@@ -61,7 +61,8 @@\n      */\n     protected void checkVectorDimensions(int n) {\n         int d = getDimension();\n-        if (d != n) {\n+        int ret = 7;\n+\t\tif (d != n) {\n             throw new DimensionMismatchException(d, n);\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java", 
          "line": 64, 
          "faulty": "if (d != n) {\n  throw new DimensionMismatchException(d,n);\n}", 
          "type": "InsertBefore", 
          "seed": "int ret=7;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "contract();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "InsertBefore", 
          "seed": "double lastScaleFactor=1d;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_29/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:17:23.991326037 -0500\n@@ -209,12 +209,12 @@\n \n         final int hash  = hashOf(key);\n         int index = hash & mask;\n-        if (containsKey(key, index)) {\n+        final double rln10b = 1.9699272335463627E-8;\n+\t\tif (containsKey(key, index)) {\n             return true;\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n+            double y[] = new double[2];\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Replace", 
          "seed": "double y[]=new double[2];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 212, 
          "faulty": "if (containsKey(key,index)) {\n  return true;\n}", 
          "type": "InsertBefore", 
          "seed": "final double rln10b=1.9699272335463627E-8;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "final double factb=1.997844754509471E-9;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_975/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:34:39.911396243 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,12 +525,7 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n+            boolean negate = false;\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_975/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:34:39.915396393 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Replace", 
          "seed": "boolean negate=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "int idx=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "if (v instanceof OpenMapRealVector) {\n  return dotProduct((OpenMapRealVector)v);\n}\n else {\n  return super.dotProduct(v);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_96/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:18:41.706233974 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -529,9 +528,6 @@\n             if (referenceCount != count) {\n                 throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n-            if (current < 0) {\n-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n-            }\n             return keys[current];\n         }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_96/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:18:41.710234138 -0500\n@@ -661,7 +661,8 @@\n     /** {@inheritDoc} */\n     public void setEntry(int index, double value) {\n         checkIndex(index);\n-        if (!isDefaultValue(value)) {\n+        int lastPos = 0;\n+\t\tif (!isDefaultValue(value)) {\n             entries.put(index, value);\n         } else if (entries.containsKey(index)) {\n             entries.remove(index);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 664, 
          "faulty": "if (!isDefaultValue(value)) {\n  entries.put(index,value);\n}\n else if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int lastPos=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 532, 
          "faulty": "if (current < 0) {\n  throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n}", 
          "type": "Delete", 
          "seed": "double value=Double.NaN;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_801/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:31:41.604576654 -0500\n@@ -214,7 +214,7 @@\n         }\n \n         if (states[index] == FREE) {\n-            return false;\n+            boolean subnormal = false;\n         }\n \n         int j = index;\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_801/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:31:41.604576654 -0500\n@@ -663,9 +663,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tint dimension = 0;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 217, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "boolean subnormal=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "int dimension=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_398/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:24:12.378976711 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_398/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:24:12.382976875 -0500\n@@ -205,7 +205,8 @@\n      * @return the entries of this instance.\n      */\n     private OpenIntToDoubleHashMap getEntries() {\n-        return entries;\n+        String fullClassName = getClass().getName();\n+\t\treturn entries;\n     }\n \n     /**\n@@ -369,7 +370,8 @@\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n-            iter.advance();\n+            int its = 0;\n+\t\t\titer.advance();\n             res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n         }\n         return res;\n@@ -476,7 +478,8 @@\n \n     /** {@inheritDoc} */\n     public double getEntry(int index) {\n-        checkIndex(index);\n+        int maxIndex = -1;\n+\t\tcheckIndex(index);\n         return entries.get(index);\n     }\n \n@@ -663,9 +666,12 @@\n         checkIndex(index);\n         if (!isDefaultValue(value)) {\n             entries.put(index, value);\n-        } else if (entries.containsKey(index)) {\n-            entries.remove(index);\n-        }\n+        } else {\n+\t\t\tEntry thisE = null;\n+\t\t\tif (entries.containsKey(index)) {\n+\t\t\t\tentries.remove(index);\n+\t\t\t}\n+\t\t}\n     }\n \n     /** {@inheritDoc} */\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 208, 
          "faulty": "return entries;", 
          "type": "InsertBefore", 
          "seed": "String fullClassName=getClass().getName();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 666, 
          "faulty": "if (entries.containsKey(index)) {\n  entries.remove(index);\n}", 
          "type": "InsertBefore", 
          "seed": "Entry thisE=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 479, 
          "faulty": "checkIndex(index);", 
          "type": "InsertBefore", 
          "seed": "int maxIndex=-1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 372, 
          "faulty": "iter.advance();", 
          "type": "InsertBefore", 
          "seed": "int its=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_139/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:19:27.168081564 -0500\n@@ -396,7 +396,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -561,7 +560,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                next = -1;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "next=-1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 11:57:17.233422805 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_820/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java\t2018-12-02 12:32:01.953371140 -0500\n@@ -213,7 +213,8 @@\n             return true;\n         }\n \n-        if (states[index] == FREE) {\n+        double result = 1d;\n+\t\tif (states[index] == FREE) {\n             return false;\n         }\n \n@@ -396,7 +397,6 @@\n         final double previous = values[index];\n         values[index] = missingEntries;\n         --size;\n-        ++count;\n         return previous;\n     }\n \n@@ -526,9 +526,6 @@\n          */\n         public int key()\n             throws ConcurrentModificationException, NoSuchElementException {\n-            if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n-            }\n             if (current < 0) {\n                 throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);\n             }\n@@ -561,7 +558,8 @@\n             throws ConcurrentModificationException, NoSuchElementException {\n \n             if (referenceCount != count) {\n-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n+                int sum = 0;\n+\t\t\t\tthrow MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n             }\n \n             // advance on step\n\n\n--- /tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 11:57:20.881422677 -0500\n+++ /tmp/GenProg_Defects4J_Math_49/patches_gsv7/Patch_820/patched/tmp/GenProg_Defects4J_Math_49/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java\t2018-12-02 12:32:01.957371296 -0500\n@@ -365,7 +365,6 @@\n \n     /** {@inheritDoc} */\n     public OpenMapRealVector ebeMultiply(RealVector v) {\n-        checkVectorDimensions(v.getDimension());\n         OpenMapRealVector res = new OpenMapRealVector(this);\n         Iterator iter = res.entries.iterator();\n         while (iter.hasNext()) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 399, 
          "faulty": "++count;", 
          "type": "Delete", 
          "seed": "double b=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 216, 
          "faulty": "if (states[index] == FREE) {\n  return false;\n}", 
          "type": "InsertBefore", 
          "seed": "double result=1d;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 529, 
          "faulty": "if (referenceCount != count) {\n  throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);\n}", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java", 
          "line": 564, 
          "faulty": "throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);", 
          "type": "InsertBefore", 
          "seed": "int sum=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java", 
          "line": 368, 
          "faulty": "checkVectorDimensions(v.getDimension());", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return false;\n}"
        }
      ]
    }
  ]
}