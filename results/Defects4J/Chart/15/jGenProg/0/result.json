{
  "repair_end": "2018-11-28 12:24:29.093330", 
  "repair_begin": "2018-11-28 12:16:31.270058", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "\\/var\\/lib\\/oar\\/.batch_job_bashrc: line 5: \\/home\\/tdurieux\\/.bashrc: No such file or directory\\n--- org\\/jfree\\/chart\\/plot\\/PiePlot3D.java\\n+++ org\\/jfree\\/chart\\/plot\\/PiePlot3D.java\\n@@ -264,78 +264,78 @@\\n \\t\\t}\\n \\n \\t\\tdouble linkX = (plotArea.getX()) + (gapHorizontal \\/ 2);\\n-\\t\\tdouble linkY = (plotArea.getY()) + (gapVertical \\/ 2);\\n-\\t\\tdouble linkW = (plotArea.getWidth()) - gapHorizontal;\\n-\\t\\tdouble linkH = (plotArea.getHeight()) - gapVertical;\\n \\n \\n-\\t\\tif (isCircular()) {\\n-\\t\\t\\tdouble min = (java.lang.Math.min(linkW, linkH)) \\/ 2;\\n-\\t\\t\\tlinkX = (((linkX + linkX) + linkW) \\/ 2) - min;\\n-\\t\\t\\tlinkY = (((linkY + linkY) + linkH) \\/ 2) - min;\\n-\\t\\t\\tlinkW = 2 * min;\\n-\\t\\t\\tlinkH = 2 * min;\\n-\\t\\t}\\n \\n-\\t\\torg.jfree.chart.plot.PiePlotState state = initialise(g2, plotArea, this, null, info);\\n \\n \\n \\n-\\t\\tjava.awt.geom.Rectangle2D linkAreaXX = new java.awt.geom.Rectangle2D.Double(linkX, linkY, linkW, \\n-\\t\\t(linkH * (1 - (this.depthFactor))));\\n-\\t\\tstate.setLinkArea(linkAreaXX);\\n \\n-\\t\\tif (org.jfree.chart.plot.PiePlot.DEBUG_DRAW_LINK_AREA) {\\n-\\t\\t\\tg2.setPaint(java.awt.Color.blue);\\n-\\t\\t\\tg2.draw(linkAreaXX);\\n-\\t\\t\\tg2.setPaint(java.awt.Color.yellow);\\n-\\t\\t\\tg2.draw(new java.awt.geom.Ellipse2D.Double(linkAreaXX.getX(), linkAreaXX.getY(), \\n-\\t\\t\\tlinkAreaXX.getWidth(), linkAreaXX.getHeight()));\\n-\\t\\t}\\n \\n \\n \\n \\n-\\t\\tdouble hh = linkW * (getLabelLinkMargin());\\n-\\t\\tdouble vv = linkH * (getLabelLinkMargin());\\n-\\t\\tjava.awt.geom.Rectangle2D explodeArea = new java.awt.geom.Rectangle2D.Double((linkX + (hh \\/ 2.0)), \\n-\\t\\t(linkY + (vv \\/ 2.0)), (linkW - hh), (linkH - vv));\\n \\n-\\t\\tstate.setExplodedPieArea(explodeArea);\\n \\n \\n \\n \\n-\\t\\tdouble maximumExplodePercent = getMaximumExplodePercent();\\n-\\t\\tdouble percent = maximumExplodePercent \\/ (1.0 + maximumExplodePercent);\\n \\n-\\t\\tdouble h1 = (explodeArea.getWidth()) * percent;\\n-\\t\\tdouble v1 = (explodeArea.getHeight()) * percent;\\n-\\t\\tjava.awt.geom.Rectangle2D pieArea = new java.awt.geom.Rectangle2D.Double(((explodeArea.getX()) + \\n-\\t\\t(h1 \\/ 2.0)), ((explodeArea.getY()) + (v1 \\/ 2.0)), \\n-\\t\\t((explodeArea.getWidth()) - h1), ((explodeArea.getHeight()) - v1));\\n \\n \\n \\n-\\t\\tint depth = ((int) ((pieArea.getHeight()) * (this.depthFactor)));\\n-\\t\\tjava.awt.geom.Rectangle2D linkArea = new java.awt.geom.Rectangle2D.Double(linkX, linkY, linkW, \\n-\\t\\t(linkH - depth));\\n-\\t\\tstate.setLinkArea(linkArea);\\n \\n-\\t\\tstate.setPieArea(pieArea);\\n-\\t\\tstate.setPieCenterX(pieArea.getCenterX());\\n-\\t\\tstate.setPieCenterY(((pieArea.getCenterY()) - (depth \\/ 2.0)));\\n-\\t\\tstate.setPieWRadius(((pieArea.getWidth()) \\/ 2.0));\\n-\\t\\tstate.setPieHRadius((((pieArea.getHeight()) - depth) \\/ 2.0));\\n \\n \\n-\\t\\torg.jfree.data.general.PieDataset dataset = getDataset();\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n \\t\\tif (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\\n \\t\\t\\tdrawNoDataMessage(g2, plotArea);\\n \\t\\t\\tg2.setClip(savedClip);\\n \\t\\t\\tdrawOutline(g2, plotArea);\\n \\t\\t\\treturn;\\n-\\t\\t}\\n+\\t\\t} \\t\\tdouble linkY = (plotArea.getY()) + (gapVertical \\/ 2); \\t\\tdouble linkW = (plotArea.getWidth()) - gapHorizontal; \\t\\tdouble linkH = (plotArea.getHeight()) - gapVertical; \\t\\tif (isCircular()) { \\t\\t\\tdouble min = (java.lang.Math.min(linkW, linkH)) \\/ 2; \\t\\t\\tlinkX = (((linkX + linkX) + linkW) \\/ 2) - min; \\t\\t\\tlinkY = (((linkY + linkY) + linkH) \\/ 2) - min; \\t\\t\\tlinkW = 2 * min; \\t\\t\\tlinkH = 2 * min;} \\t\\torg.jfree.chart.plot.PiePlotState state = initialise(g2, plotArea, this, null, info); \\t\\tjava.awt.geom.Rectangle2D linkAreaXX = new java.awt.geom.Rectangle2D.Double(linkX, linkY, linkW, (linkH * (1 - (this.depthFactor)))); \\t\\tstate.setLinkArea(linkAreaXX); \\t\\tif (org.jfree.chart.plot.PiePlot.DEBUG_DRAW_LINK_AREA) { \\t\\t\\tg2.setPaint(java.awt.Color.blue); \\t\\t\\tg2.draw(linkAreaXX); \\t\\t\\tg2.setPaint(java.awt.Color.yellow); \\t\\t\\tg2.draw(new java.awt.geom.Ellipse2D.Double(linkAreaXX.getX(), linkAreaXX.getY(), linkAreaXX.getWidth(), linkAreaXX.getHeight()));} \\t\\tdouble hh = linkW * (getLabelLinkMargin()); \\t\\tdouble vv = linkH * (getLabelLinkMargin()); \\t\\tjava.awt.geom.Rectangle2D explodeArea = new java.awt.geom.Rectangle2D.Double((linkX + (hh \\/ 2.0)), (linkY + (vv \\/ 2.0)), (linkW - hh), (linkH - vv)); \\t\\tstate.setExplodedPieArea(explodeArea); \\t\\tdouble maximumExplodePercent = getMaximumExplodePercent(); \\t\\tdouble percent = maximumExplodePercent \\/ (1.0 + maximumExplodePercent); \\t\\tdouble h1 = (explodeArea.getWidth()) * percent; \\t\\tdouble v1 = (explodeArea.getHeight()) * percent; \\t\\tjava.awt.geom.Rectangle2D pieArea = new java.awt.geom.Rectangle2D.Double(((explodeArea.getX()) + (h1 \\/ 2.0)), ((explodeArea.getY()) + (v1 \\/ 2.0)), ((explodeArea.getWidth()) - h1), ((explodeArea.getHeight()) - v1)); \\t\\tint depth = ((int) ((pieArea.getHeight()) * (this.depthFactor))); \\t\\tjava.awt.geom.Rectangle2D linkArea = new java.awt.geom.Rectangle2D.Double(linkX, linkY, linkW, (linkH - depth)); \\t\\tstate.setLinkArea(linkArea); \\t\\tstate.setPieArea(pieArea); \\t\\tstate.setPieCenterX(pieArea.getCenterX()); \\t\\tstate.setPieCenterY(((pieArea.getCenterY()) - (depth \\/ 2.0))); \\t\\tstate.setPieWRadius(((pieArea.getWidth()) \\/ 2.0)); \\t\\tstate.setPieHRadius((((pieArea.getHeight()) - depth) \\/ 2.0)); \\t\\torg.jfree.data.general.PieDataset dataset = getDataset(); \\t\\tif (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) { \\t\\t\\tdrawNoDataMessage(g2, plotArea); \\t\\t\\tg2.setClip(savedClip); \\t\\t\\tdrawOutline(g2, plotArea); \\t\\t\\treturn;}\\n \\n \\n \\t\\tif ((dataset.getKeys().size()) > (plotArea.getWidth())) {\\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/tmp\\/jGenProg_Defects4J_Chart_15\\/.\\/output_astor\\/AstorMain-Chart-15\\/\\/src\\/\\/variant-774_f\\/org\\/jfree\\/chart\\/plot\\/PiePlot3D.java", 
          "ORIGINAL_CODE": "double linkY = (plotArea.getY()) + (gapVertical \\/ 2)", 
          "INGREDIENT_SCOPE": "LOCAL", 
          "PATCH_HUNK_CODE": "if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\\n\\tdrawNoDataMessage(g2, plotArea);\\n\\tg2.setClip(savedClip);\\n\\tdrawOutline(g2, plotArea);\\n\\treturn;\\n}", 
          "INGREDIENT_PARENT": "if (org.jfree.data.general.DatasetUtilities.isEmptyOrNull(getDataset())) {\\n\\tdrawNoDataMessage(g2, plotArea);\\n\\tg2.setClip(savedClip);\\n\\tdrawOutline(g2, plotArea);\\n\\treturn;\\n}", 
          "LOCATION": "org.jfree.chart.plot.PiePlot3D", 
          "BUGGY_CODE_TYPE": "CtLocalVariableImpl|CtBlockImpl", 
          "OPERATOR": "InsertBeforeOp", 
          "PATH": "\\/tmp\\/jGenProg_Defects4J_Chart_15\\/output_astor\\/AstorMain-Chart-15\\/src\\/default\\/org\\/jfree\\/chart\\/plot\\/PiePlot3D.java", 
          "LINE": "267", 
          "MP_RANKING": "20", 
          "SUSPICIOUNESS": "0.577", 
          "PATCH_HUNK_TYPE": "CtIfImpl|CtBlockImpl"
        }
      ], 
      "GENERATION": "387", 
      "VARIANT_ID": "774", 
      "TIME": "337", 
      "VALIDATION": "|true|0|3579|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/tmp\\/jGenProg_Defects4J_Chart_15\\/.\\/output_astor\\/AstorMain-Chart-15\\/\\/bin\\/\\/variant-774"
    }
  ]
}