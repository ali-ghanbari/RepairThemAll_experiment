{
  "repair_end": "2018-12-01 14:38:11.112106", 
  "repair_begin": "2018-12-01 14:15:46.698274", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1546/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:52.834247547 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        g2.setClip(savedClip);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1330/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:49.865704535 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.labelLinkMargin;   \n     }\n     \n     /**\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        g2.setStroke(this.labelLinkStroke);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1330/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:49.865704535 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_775/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:55.737478739 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_394/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:22:32.367561961 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_394/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:32.371562236 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_394/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:32.375562510 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1759/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:52.078469465 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1759/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:52.082469740 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1759/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:34:52.082469740 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            throw new IllegalArgumentException(\n+\t\t\t\t\t\"The number of row keys does not match the number of rows in \"\n+\t\t\t\t\t\t\t+ \"the data array.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException(\"The number of row keys does not match the number of rows in \" + \"the data array.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_632/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:48.472884751 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        g2.setPaint(outlinePaint);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_632/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:48.476885025 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "g2.setPaint(outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1038/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:09.998642796 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1038/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:10.002643073 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_170/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:20:17.388067928 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_170/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:17.392068534 -0500\n@@ -249,7 +249,13 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_551/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:03.905836647 -0500\n@@ -691,12 +691,13 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_551/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:03.909836920 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.interiorGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_551/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:03.909836920 -0500\n@@ -240,6 +240,7 @@\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n+\t\tg2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.interiorGap;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1138/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:02.162248233 -0500\n@@ -691,12 +691,13 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1138/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:02.166248510 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1358/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:05.662806856 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.labelLinkMargin;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1358/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:05.662806856 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1911/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:19.312506984 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1911/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:19.316507264 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.labelDistributor = new PieLabelDistributor(0);\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.labelDistributor=new PieLabelDistributor(0);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1474/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:10.995349786 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.minimumArcAngleToDraw;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1474/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:10.999350064 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1087/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:36.240458029 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1087/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:36.244458306 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.legendItemShape = DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1087/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:36.244458306 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\t1.0f));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,15 +269,6 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1917/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:22.188708636 -0500\n@@ -693,10 +693,16 @@\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1917/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:22.188708636 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_684/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:15.082702978 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_684/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:25:15.086703251 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1227/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:51.029616240 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1227/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:51.033616515 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1845/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:42.517934777 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1845/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:42.521935052 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1845/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:42.521935052 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_343/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:02.413503609 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1333/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:30:51.249801184 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.noDataMessageFont = new Font(\"SansSerif\", Font.PLAIN, 12);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1333/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:51.253801462 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.noDataMessageFont=new Font(\"SansSerif\",Font.PLAIN,12);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_219/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:47.191720700 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_219/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:47.195721104 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.sectionOutlineStrokeMap = new StrokeMap();\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_219/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:47.199721506 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1078/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:31.472128416 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            setCircular(false, false);\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1078/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:31.476128693 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_668/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:06.902144133 -0500\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        setInsets(insets, true);\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "setInsets(insets,true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_887/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:54.673498766 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.simpleLabels = false;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_887/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:54.677499040 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.simpleLabels=false;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_914/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:09.118483452 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_914/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:09.118483452 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1767/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:56.826795954 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1767/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:56.830796229 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1767/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:56.830796229 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_419/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:22:48.328657633 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_419/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:48.332657909 -0500\n@@ -263,7 +263,10 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (getLabelGenerator() != null) {\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1419/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:31:39.901190641 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1419/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:39.901190641 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -243,7 +245,11 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +274,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_311/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:21:43.736218644 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_311/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:21:43.740218918 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.labelLinkMargin;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1978/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:57.003144962 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1978/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:57.007145242 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        g2.setPaint(getLabelPaint());\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_713/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:28.283604556 -0500\n@@ -268,16 +268,14 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_622/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:44.416607483 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        g2.clip(area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_622/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:44.420607756 -0500\n@@ -241,7 +241,10 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        if (insets == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'insets' argument.\");\n+\t\t}\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +271,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "g2.clip(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "if (insets == null) {\n  throw new IllegalArgumentException(\"Null 'insets' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1697/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:17.628098846 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(getLabelPaint());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1182/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:29:25.595864358 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.outlineStroke = DEFAULT_OUTLINE_STROKE;\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1182/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:25.599864635 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setPaint(java.awt.Color.lightGray);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "this.outlineStroke=DEFAULT_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_458/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:09.590116044 -0500\n@@ -243,9 +243,10 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            return;   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "return;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_699/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:21.375132764 -0500\n@@ -693,7 +693,10 @@\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_699/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:21.379133037 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_686/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:15.790751342 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.labelGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_686/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:15.794751615 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +283,8 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.labelGap;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_823/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:19.727115584 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_823/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:19.731115857 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1971/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:53.570905128 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1971/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:53.574905408 -0500\n@@ -2046,7 +2046,8 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.labelGenerator = new StandardPieSectionLabelGenerator();\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1971/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:53.574905408 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.labelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1101/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:43.104932370 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1101/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:43.112932923 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "Replace", 
          "seed": "return this.labelGenerator;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1581/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:11.963569906 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1581/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:33:11.963569906 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_754/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:46.712862777 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.labelPaint = Color.black;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_754/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:46.716863050 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.labelPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1856/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:47.966308743 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.labelPadding = new RectangleInsets(2, 2, 2, 2);\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1856/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:47.966308743 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        setInsets(insets, true);\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.labelPadding=new RectangleInsets(2,2,2,2);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1248/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:03.230455890 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n@@ -249,7 +247,10 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (insets == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'insets' argument.\");\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1248/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:30:03.230455890 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (insets == null) {\n  throw new IllegalArgumentException(\"Null 'insets' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1934/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:32.441426980 -0500\n@@ -265,17 +265,19 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_240/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:00.168950679 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -244,9 +246,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,7 +267,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_769/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:52.941287901 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_769/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:52.945288174 -0500\n@@ -929,7 +929,7 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "Replace", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_49/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:19:00.114715279 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_49/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:19:00.118715279 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n@@ -2048,8 +2049,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.interiorGap = DEFAULT_INTERIOR_GAP;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_49/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:00.118715279 -0500\n@@ -247,9 +247,13 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(Color.gray);\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (getLabelGenerator() != null) {\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,7 +272,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        setBackgroundPaint(Color.WHITE);\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +282,7 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1684/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:09.499538993 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.sectionOutlinePaintMap = new PaintMap();\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1684/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:09.503539269 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlinePaintMap=new PaintMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_801/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:09.386410115 -0500\n@@ -228,7 +228,7 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_938/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:19.979223666 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_938/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:19.979223666 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1744/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:43.817901337 -0500\n@@ -692,7 +692,8 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1744/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:43.821901612 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_767/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:52.197237118 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_767/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:52.201237391 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "this.outlineStroke=DEFAULT_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1966/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:51.490759738 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.interiorGap = DEFAULT_INTERIOR_GAP;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1966/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:51.490759738 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1497/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:24.792306256 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1497/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:24.792306256 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1497/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:32:24.796306534 -0500\n@@ -106,7 +106,7 @@\n      * @param passes  the passes.\n      */\n     public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+        return;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1252/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:05.286597347 -0500\n@@ -1395,7 +1395,7 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        return null;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1252/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:05.290597622 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1737/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:40.413667153 -0500\n@@ -693,7 +693,8 @@\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1737/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:40.417667429 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:30.999974667 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:30.999974667 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:31.003974939 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.interiorGap;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_110/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:38.399553566 -0500\n@@ -247,9 +247,16 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1467/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:07.515108371 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1467/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:07.519108649 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.startAngle;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1467/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:07.519108649 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n@@ -268,14 +266,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_832/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:24.527443030 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_832/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:24.531443303 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_991/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:46.721045772 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_991/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:27:46.725046045 -0500\n@@ -150,7 +150,6 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException(\"The number of row keys does not match the number of rows in \" + \"the data array.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_929/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:15.834941226 -0500\n@@ -231,11 +231,6 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n-\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n@@ -268,14 +263,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Delete", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1432/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:31:47.485717778 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1432/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:47.489718056 -0500\n@@ -228,7 +228,11 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +272,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_921/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:12.530716025 -0500\n@@ -266,9 +266,21 @@\n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n-        double linkH = plotArea.getHeight() - gapVertical;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 269, 
          "faulty": "double linkH=plotArea.getHeight() - gapVertical;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_532/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:23:54.365183606 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.labelLinkMargin;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_532/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:54.369183879 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1772/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:59.554983514 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1772/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:59.558983789 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1772/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:59.558983789 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1021/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:28:02.398116447 -0500\n@@ -929,7 +929,7 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1021/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:02.398116447 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "Replace", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1146/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:05.622487001 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1146/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:05.622487001 -0500\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_597/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:29.111561029 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1000/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:51.313358613 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.startAngle = DEFAULT_START_ANGLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1000/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:51.317358885 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.startAngle=DEFAULT_START_ANGLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_203/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:38.142763169 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_203/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:38.146763612 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.sectionOutlineStrokeMap = new StrokeMap();\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_90/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:26.547015405 -0500\n@@ -239,7 +239,8 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tg2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_90/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:19:26.551017193 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_576/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:16.894725406 -0500\n@@ -238,7 +238,11 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,7 +272,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_576/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:24:16.898725679 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_57/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:05.239486123 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1210/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:41.392952719 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.maximumLabelWidth;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1210/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:41.396952995 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_324/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:21:50.596690775 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_324/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:50.600691050 -0500\n@@ -231,11 +231,6 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n-\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n@@ -263,7 +258,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        labelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "labelPercent=getLabelGap() + getMaximumLabelWidth();"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_223/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:49.203921890 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -249,7 +250,10 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (getLabelGenerator() != null) {\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +272,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_284/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:21:28.151145447 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.maximumLabelWidth;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_284/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:28.155145723 -0500\n@@ -228,8 +228,6 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n-\n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n@@ -245,7 +243,13 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\t\tg2.setClip(savedClip);\n+\t\t\t\tdrawOutline(g2, plotArea);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Delete", 
          "seed": "insets.trim(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_628/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:47.112791785 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        drawBackground(g2, plotArea);\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "drawBackground(g2,plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_484/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:23:25.507207084 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_484/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:23:25.511207358 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.labelLinkMargin;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_484/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:25.511207358 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_484/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:23:25.515207633 -0500\n@@ -106,7 +106,7 @@\n      * @param passes  the passes.\n      */\n     public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+        this.total = total;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Replace", 
          "seed": "this.total=total;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_360/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:11.438124058 -0500\n@@ -245,7 +245,9 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1721/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:32.181100687 -0500\n@@ -692,7 +692,8 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1721/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:32.181100687 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1820/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:27.576908920 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1820/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:35:27.580909195 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        g2.setPaint(this.outlinePaint);\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1820/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:27.580909195 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1593/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:18.236003187 -0500\n@@ -692,7 +692,8 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1593/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:18.240003462 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1593/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:18.240003462 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(getLabelPaint());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1593/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:33:18.244003739 -0500\n@@ -150,7 +150,6 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1283/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:23.835884407 -0500\n@@ -2048,9 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n-        state.setLatestAngle(plot.getStartAngle());\n+            state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1283/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:23.835884407 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Delete", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1044/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:13.362875687 -0500\n@@ -691,8 +691,9 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1044/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:13.366875963 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1987/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:01.831482225 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        setDataset(dataset);\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1987/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:01.831482225 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setDataset(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1024/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:03.790212873 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.legendLabelToolTipGenerator = null;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1024/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:03.794213150 -0500\n@@ -244,9 +244,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,14 +265,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelToolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_690/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:17.222849161 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_690/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:17.226849434 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -247,7 +249,8 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(getLabelPaint());\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -268,14 +271,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2027/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:24.933093944 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2027/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:24.937094223 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            notifyListeners(new PlotChangeEvent(this));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1281/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:23.139835668 -0500\n@@ -691,12 +691,13 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1526/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:41.277447915 -0500\n@@ -266,9 +266,17 @@\n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n-        double linkH = plotArea.getHeight() - gapVertical;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tdouble linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 269, 
          "faulty": "double linkH=plotArea.getHeight() - gapVertical;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1730/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:37.029434314 -0500\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setClip(savedClip);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_963/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:31.676020732 -0500\n@@ -249,7 +249,8 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1370/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:11.879240194 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        setCircular(false, false);\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_973/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:37.064387873 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +283,8 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_624/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:45.092653697 -0500\n@@ -241,7 +241,10 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        if (insets == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'insets' argument.\");\n+\t\t}\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +271,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_624/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:24:45.092653697 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "if (insets == null) {\n  throw new IllegalArgumentException(\"Null 'insets' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_694/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:18.598943152 -0500\n@@ -231,10 +231,7 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         drawBackground(g2, plotArea);\n \n@@ -268,14 +265,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:37:59.419494423 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:59.423494701 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.minimumArcAngleToDraw;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2088/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:59.423494701 -0500\n@@ -268,16 +268,16 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1548/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:53.562297902 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1548/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:32:53.566298179 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1548/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:53.566298179 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1548/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:53.570298455 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "this.outlinePaint=outlinePaint;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1317/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:42.273174128 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1317/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:42.277174408 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.labelLinkMargin;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1317/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:42.277174408 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            notifyListeners(new PlotChangeEvent(this));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_958/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:29.623880900 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_958/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:29.627881173 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_958/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:27:29.627881173 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1980/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:36:57.715194708 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1980/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:57.719194987 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1980/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:57.719194987 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1853/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:46.606215394 -0500\n@@ -692,7 +692,6 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1853/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:46.610215669 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setFont(getLabelFont());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Delete", 
          "seed": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_809/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:13.414684951 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_809/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:13.418685223 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.toolTipGenerator = null;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.toolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1650/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:52.354357436 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        g2.setPaint(getLabelPaint());\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1274/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:18.971543718 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1274/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:18.975543998 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.interiorGap = DEFAULT_INTERIOR_GAP;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_788/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:03.193987587 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setBackgroundPaint(Color.WHITE);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_720/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:31.023791670 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_720/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:31.027791943 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.sectionOutlineStrokeMap = new StrokeMap();\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_384/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:26.071129525 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.legendLabelURLGenerator = null;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_384/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:26.075129800 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelURLGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1390/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:23.544052682 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1390/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:23.544052682 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        throw new IllegalArgumentException(\"Null 'anchor' argument.\");   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1390/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:23.548052960 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1126/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:56.661868594 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1126/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:56.665868870 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setPaint(Color.gray);\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_630/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:47.780837449 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        insets.trim(plotArea);\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "insets.trim(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1712/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:26.548713022 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1712/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:26.548713022 -0500\n@@ -239,7 +239,8 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_636/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:50.521024742 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_636/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:50.521024742 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1352/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:02.238568052 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1352/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:02.242568331 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        setDatasetGroup(dataset.getGroup());\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n@@ -2609,7 +2610,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.labelPaint = Color.black;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1352/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:02.242568331 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.labelPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "setDatasetGroup(dataset.getGroup());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_891/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:56.689636216 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_891/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:56.689636216 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1375/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:14.635432247 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1375/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:14.639432525 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1375/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:14.639432525 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_745/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:42.548578513 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_745/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:42.552578786 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_954/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:27.599742973 -0500\n@@ -263,21 +263,23 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        labelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        if (insets == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'insets' argument.\");\n+\t\t}\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "labelPercent=getLabelGap() + getMaximumLabelWidth();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "if (insets == null) {\n  throw new IllegalArgumentException(\"Null 'insets' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_715/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:28.979652088 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_715/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:28.979652088 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setCircular(false, false);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1472/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:10.239297346 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1472/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:10.239297346 -0500\n@@ -249,7 +249,13 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +274,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1132/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:58.746012457 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_348/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:04.469644994 -0500\n@@ -232,13 +232,18 @@\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setPaint(Color.gray);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,7 +273,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1973/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:54.234951535 -0500\n@@ -691,8 +691,9 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setToolTipGenerator(new StandardPieToolTipGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1645/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:49.686173472 -0500\n@@ -929,7 +929,6 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1645/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:49.690173748 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "Delete", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_861/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:41.548603875 -0500\n@@ -691,8 +691,8 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2052/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:38.778058400 -0500\n@@ -696,7 +696,8 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2052/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:38.782058679 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_454/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:23:07.581978349 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_454/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:07.585978623 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,15 +269,6 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_104/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:19:34.950374252 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_104/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:19:34.954375700 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_104/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:19:34.954375700 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.toolTipGenerator = null;\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n@@ -2048,7 +2049,8 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+            g2.setStroke(this.labelLinkStroke);\n+\t\t\tstate.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_104/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:34.958377146 -0500\n@@ -268,15 +268,6 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "InsertBefore", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.toolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1588/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:16.171860619 -0500\n@@ -691,12 +691,15 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1588/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:16.175860895 -0500\n@@ -929,7 +929,7 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "Replace", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1784/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:06.451457555 -0500\n@@ -2048,9 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n-        state.setLatestAngle(plot.getStartAngle());\n+            state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1784/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:06.455457829 -0500\n@@ -263,19 +263,23 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Delete", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1297/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:31.324408542 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1297/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:31.328408822 -0500\n@@ -231,11 +231,6 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n-\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n@@ -245,7 +240,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +264,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Delete", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_904/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:02.858056718 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_904/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:02.858056718 -0500\n@@ -943,7 +943,7 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        g2.clip(area);\n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Replace", 
          "seed": "g2.clip(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1708/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:24.508572581 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.sectionOutlinePaintMap = new PaintMap();\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1708/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:24.512572857 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlinePaintMap=new PaintMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_653/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:59.377630008 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.maximumLabelWidth;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_653/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:59.381630282 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_653/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:24:59.381630282 -0500\n@@ -150,7 +150,6 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_524/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:23:49.484849478 -0500\n@@ -2048,9 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n-        state.setLatestAngle(plot.getStartAngle());\n+            state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_524/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:49.488849753 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Delete", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1625/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:36.633273158 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.minimumArcAngleToDraw;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1625/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:36.633273158 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_792/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:05.202124614 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1889/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:05.651548370 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1889/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:05.651548370 -0500\n@@ -263,19 +263,23 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1179/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:24.239770889 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1179/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:24.239770889 -0500\n@@ -247,7 +247,8 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_431/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:22:54.417075389 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_478/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:22.082972423 -0500\n@@ -247,7 +247,13 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -263,7 +269,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.clip(plotArea);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1952/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:43.314187973 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1952/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:43.314187973 -0500\n@@ -239,8 +239,6 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n-\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Delete", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1493/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:22.756165159 -0500\n@@ -691,8 +691,9 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1493/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:22.760165436 -0500\n@@ -231,16 +231,12 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n \n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n-\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n@@ -263,7 +259,13 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setToolTipGenerator(new StandardPieToolTipGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Delete", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1543/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:51.490154576 -0500\n@@ -268,16 +268,16 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_254/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:08.557679473 -0500\n@@ -231,10 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n \n         drawBackground(g2, plotArea);\n \n@@ -268,7 +266,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1535/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:46.753826905 -0500\n@@ -696,7 +696,8 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1535/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:46.757827182 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_899/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:00.801916556 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_899/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:00.805916828 -0500\n@@ -929,7 +929,7 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_899/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:00.805916828 -0500\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_899/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:00.809917100 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "Replace", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_750/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:44.636721057 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_317/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:47.176455419 -0500\n@@ -231,14 +231,13 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setPaint(Color.gray);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,7 +267,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1661/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:57.162688898 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1661/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:57.162688898 -0500\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1661/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:57.166689174 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2073/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:51.238925561 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2073/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:51.238925561 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2073/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:51.242925840 -0500\n@@ -238,7 +238,8 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        setBackgroundPaint(Color.WHITE);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1858/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:48.706359533 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1858/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:48.710359808 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1858/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:48.714360082 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_673/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:09.586327512 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_673/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:09.590327785 -0500\n@@ -277,7 +277,7 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1412/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:35.884911373 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1412/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:35.888911652 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n@@ -2610,7 +2611,8 @@\n \n         LegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n-            return result;\n+            this.legendLabelGenerator = new StandardPieSectionLabelGenerator();\n+\t\t\treturn result;\n         }\n         List keys = this.dataset.getKeys();\n         int section = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2613, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1034/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:08.586545027 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(getLabelPaint());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_491/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:23:29.651491052 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_491/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:29.651491052 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_491/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:23:29.655491326 -0500\n@@ -150,7 +150,6 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1032/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:07.914498493 -0500\n@@ -693,7 +693,10 @@\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1032/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:07.918498770 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1032/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:07.922499047 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_819/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:26:18.335020620 -0500\n@@ -943,7 +943,7 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.parent = null;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_819/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:18.335020620 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Replace", 
          "seed": "this.parent=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1830/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:32.985280319 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1830/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:32.985280319 -0500\n@@ -264,7 +264,8 @@\n         }\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n-        double linkY = plotArea.getY() + gapVertical / 2;\n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tdouble linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 267, 
          "faulty": "double linkY=plotArea.getY() + gapVertical / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1190/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:30.372193520 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1190/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:30.376193795 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +283,8 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_520/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:47.472711704 -0500\n@@ -247,7 +247,13 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -263,20 +269,12 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.clip(plotArea);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_756/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:47.408910289 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_756/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:47.412910562 -0500\n@@ -266,16 +266,16 @@\n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n-        double linkH = plotArea.getHeight() - gapVertical;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tdouble linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 269, 
          "faulty": "double linkH=plotArea.getHeight() - gapVertical;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1726/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:34.917288980 -0500\n@@ -2047,7 +2047,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.simpleLabelOffset = new RectangleInsets(UnitType.RELATIVE, 0.18,\n+\t\t\t\t0.18, 0.18, 0.18);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1726/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:34.921289255 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1063/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:22.375499331 -0500\n@@ -691,8 +691,8 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1063/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:22.379499608 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1063/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:28:22.379499608 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1740/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:41.769760445 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1740/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:41.769760445 -0500\n@@ -249,7 +249,10 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (getLabelGenerator() != null) {\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +271,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1083/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:34.200317016 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return this.circular;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_743/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:41.852530997 -0500\n@@ -228,7 +228,11 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +272,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_781/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:59.165712698 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_781/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:59.165712698 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_29/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:18:46.102714628 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_29/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:18:46.102714628 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_29/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:18:46.106714628 -0500\n@@ -2048,7 +2048,8 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+            g2.setStroke(this.labelLinkStroke);\n+\t\t\tstate.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.outlineStroke=outlineStroke;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "InsertBefore", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_711/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:27.611558665 -0500\n@@ -239,7 +239,7 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -247,7 +247,8 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        notifyListeners(new PlotChangeEvent(this));\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1897/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:10.419883132 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        throw new IllegalArgumentException(\"Null 'anchor' argument.\");   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1897/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:10.423883412 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setCircular(false, false);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_807/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:12.718637463 -0500\n@@ -263,19 +263,23 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_735/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:38.484301051 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        setCircular(false, false);\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -265,17 +266,17 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_288/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:21:30.187285709 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.interiorGap = DEFAULT_INTERIOR_GAP;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_288/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:30.191285985 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1338/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:54.057997235 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1338/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:54.061997514 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1393/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:24.960151262 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1393/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:24.960151262 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1393/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:31:24.964151540 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1968/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:52.170807273 -0500\n@@ -236,10 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1111/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:48.513305954 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1111/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:48.513305954 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setCircular(false, false);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_162/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:12.695321094 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_162/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:12.699321761 -0500\n@@ -263,7 +263,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setClip(savedClip);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_508/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:23:40.592240519 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_508/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:40.596240792 -0500\n@@ -263,19 +263,23 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2045/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:35.237811883 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2045/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:35.241812161 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2045/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:37:35.241812161 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1490/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:21.400071175 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1490/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:32:21.404071452 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return this.circular;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1599/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:21.644238554 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.legendLabelURLGenerator = null;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n@@ -2048,8 +2049,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            setCircular(false, false);\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1599/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:21.648238830 -0500\n@@ -240,6 +240,7 @@\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n+\t\tg2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelURLGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1170/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:19.435439693 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1170/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:19.435439693 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1170/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:19.439439969 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_980/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:40.432617357 -0500\n@@ -691,14 +691,11 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n-            plot.setURLGenerator(new StandardPieURLGenerator());\n-        }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n                 legend);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_980/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:40.436617629 -0500\n@@ -277,7 +277,7 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "Delete", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_875/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:47.697023114 -0500\n@@ -2047,7 +2047,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n+\t\tstate.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_875/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:47.697023114 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "InsertBefore", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_351/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:22:05.865740985 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_351/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:05.869741260 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.labelLinkMargin;\n     }\n \n     /**\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.toolTipGenerator = null;\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_351/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:05.873741535 -0500\n@@ -226,7 +226,9 @@\n                      PlotState parentState,\n                      PlotRenderingInfo info) {\n \n-        // adjust for insets...\n+        g2.setComposite(AlphaComposite.getInstance(\n+\t\t\t\t\t\t\t\tAlphaComposite.SRC_OVER, getForegroundAlpha()));\n+\t\t// adjust for insets...\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "this.toolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 230, 
          "faulty": "RectangleInsets insets=getInsets();", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2018/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:20.260768224 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2018/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:20.264768503 -0500\n@@ -2048,9 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n-        state.setLatestAngle(plot.getStartAngle());\n+            state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n     }\n@@ -2610,7 +2608,8 @@\n \n         LegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n-            return result;\n+            this.legendLabelGenerator = new StandardPieSectionLabelGenerator();\n+\t\t\treturn result;\n         }\n         List keys = this.dataset.getKeys();\n         int section = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Delete", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2613, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_883/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:52.573355586 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_883/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:52.577355859 -0500\n@@ -239,7 +239,7 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1447/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:55.870300156 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1447/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:31:55.870300156 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1567/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:03.875010946 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1567/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:03.879011223 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.simpleLabelOffset=new RectangleInsets(UnitType.RELATIVE,0.18,0.18,0.18,0.18);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_644/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:54.645306615 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_644/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:54.649306889 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_741/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:41.180485118 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        setCircular(false, false);\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -244,9 +245,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_940/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:20.675271100 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            setCircular(false, false);\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_940/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:20.679271373 -0500\n@@ -228,8 +228,6 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n-\n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Delete", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1672/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:03.243107942 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1672/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:03.243107942 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.sectionOutlineStrokeMap = new StrokeMap();\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1672/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:03.247108218 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\t1.0f));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1682/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:08.807491319 -0500\n@@ -249,7 +249,10 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (insets == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'insets' argument.\");\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +271,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (insets == null) {\n  throw new IllegalArgumentException(\"Null 'insets' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1027/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:05.182309289 -0500\n@@ -247,7 +247,8 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        notifyListeners(new PlotChangeEvent(this));\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1870/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:35:54.202743887 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1870/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:54.206744168 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.startAngle = DEFAULT_START_ANGLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1870/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:54.206744168 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.startAngle=DEFAULT_START_ANGLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1050/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:16.203072260 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1050/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:16.203072260 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_797/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:07.942311585 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_797/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:26:07.942311585 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_797/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:07.946311857 -0500\n@@ -238,7 +238,9 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_409/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:42.108230712 -0500\n@@ -226,7 +226,8 @@\n                      PlotState parentState,\n                      PlotRenderingInfo info) {\n \n-        // adjust for insets...\n+        setBackgroundPaint(Color.WHITE);\n+\t\t// adjust for insets...\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 230, 
          "faulty": "RectangleInsets insets=getInsets();", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.interiorGap;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_923/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:13.218762921 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_923/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:13.222763193 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.labelPaint = Color.black;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.labelPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1349/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:00.854471505 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.pieIndex = 0;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1349/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:00.854471505 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.pieIndex=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_864/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:42.908696618 -0500\n@@ -228,13 +228,12 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         drawBackground(g2, plotArea);\n \n@@ -268,7 +267,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1883/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:02.259310112 -0500\n@@ -691,9 +691,10 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1883/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:02.259310112 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.startAngle = DEFAULT_START_ANGLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.startAngle=DEFAULT_START_ANGLE;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_799/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:08.710363989 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_799/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:08.714364262 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1565/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:03.186963387 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1565/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:03.190963663 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setBackgroundPaint(Color.WHITE);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1008/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:55.417638192 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -265,17 +266,17 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_259/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:21:11.349913398 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_259/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:11.353913733 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        insets.trim(plotArea);\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -263,7 +264,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "insets.trim(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_592/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:26.335371165 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n@@ -943,7 +941,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.outlinePaint = outlinePaint;\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_592/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:26.339371438 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_592/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:24:26.343371712 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "this.outlinePaint=outlinePaint;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1501/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:26.208404376 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1501/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:26.212404652 -0500\n@@ -238,7 +238,8 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        setBackgroundPaint(Color.WHITE);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1094/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:39.628692184 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1094/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:39.632692461 -0500\n@@ -231,10 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n \n         drawBackground(g2, plotArea);\n \n@@ -268,7 +266,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_252/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:07.885622931 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setFont(getLabelFont());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return this.circular;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1157/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:12.502961643 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.legendLabelToolTipGenerator = null;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1157/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:12.506961918 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelToolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1058/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:20.235351274 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setCircular(false, false);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1561/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:01.178824568 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1459/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:03.358819981 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1459/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:03.362820258 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1459/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:03.362820258 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1242/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:59.846223037 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1242/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:59.850223312 -0500\n@@ -238,7 +238,9 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1851/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:45.906167346 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1851/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:45.910167621 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_363/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:12.862221941 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,7 +270,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1130/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:58.073966070 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,7 +270,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1932/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:31.769379917 -0500\n@@ -247,7 +247,8 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(getLabelPaint());\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_210/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:41.623143233 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_210/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:41.627143660 -0500\n@@ -2048,7 +2048,8 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+            this.baseSectionOutlinePaint = DEFAULT_OUTLINE_PAINT;\n+\t\t\tstate.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n@@ -2609,7 +2610,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_210/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:41.631144087 -0500\n@@ -263,7 +263,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setClip(savedClip);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "InsertBefore", 
          "seed": "this.baseSectionOutlinePaint=DEFAULT_OUTLINE_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1240/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:59.138174315 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1240/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:59.142174590 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        setInsets(insets, true);\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1036/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:09.294594051 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1036/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:09.298594327 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +283,8 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1036/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:28:09.302594605 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_703/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:23.499277834 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_703/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:23.503278107 -0500\n@@ -1395,7 +1395,7 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        return null;   \n     }\n     \n     /**\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_703/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:23.503278107 -0500\n@@ -231,10 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n \n         drawBackground(g2, plotArea);\n \n@@ -244,7 +242,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(Color.gray);\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_647/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:56.037401751 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_647/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:56.037401751 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.labelOutlinePaint = DEFAULT_LABEL_OUTLINE_PAINT;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlinePaint=DEFAULT_LABEL_OUTLINE_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1385/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:31:20.755858551 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1385/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:20.755858551 -0500\n@@ -228,7 +228,7 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setPaint(Color.gray);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Replace", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:00.245123909 -0500\n@@ -696,9 +696,6 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n-            plot.setURLGenerator(new StandardPieURLGenerator());\n-        }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n                 legend);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:00.249124692 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.maximumLabelWidth;\n     }\n \n     /**\n@@ -2610,7 +2610,8 @@\n \n         LegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n-            return result;\n+            this.labelDistributor = new PieLabelDistributor(0);\n+\t\t\treturn result;\n         }\n         List keys = this.dataset.getKeys();\n         int section = 0;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_143/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:00.253125476 -0500\n@@ -247,9 +247,16 @@\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n-        double gapHorizontal = plotArea.getWidth() * (gapPercent \n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tdouble gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "Delete", 
          "seed": "ToolTipManager.sharedInstance().registerComponent(this);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2613, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "this.labelDistributor=new PieLabelDistributor(0);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 250, 
          "faulty": "double gapHorizontal=plotArea.getWidth() * (gapPercent + labelPercent) * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_294/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:21:33.463511363 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_294/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:21:33.467511638 -0500\n@@ -1395,7 +1395,7 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        return null;   \n     }\n     \n     /**\n@@ -2046,7 +2046,8 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.labelGenerator = new StandardPieSectionLabelGenerator();\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_294/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:33.471511914 -0500\n@@ -236,7 +236,7 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            notifyListeners(new PlotChangeEvent(this));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.labelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return this.circular;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_140/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:19:58.832840935 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.sectionOutlinePaintMap = new PaintMap();\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_140/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:58.836841754 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlinePaintMap=new PaintMap();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2006/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:13.444292804 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2006/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:13.448293083 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.labelGap;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1070/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:26.639794277 -0500\n@@ -1420,7 +1420,7 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        return this.maximumLabelWidth;   \n     }\n     \n     /**\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.legendLabelURLGenerator = null;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1070/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:26.643794554 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelURLGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1787/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:07.895556802 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        g2.setPaint(getLabelPaint());\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1019/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:01.654064905 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1019/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:01.658065183 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1019/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:01.662065459 -0500\n@@ -231,14 +231,17 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        setBackgroundPaint(Color.WHITE);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,7 +271,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_816/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:16.970927563 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_816/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:16.970927563 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_816/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:16.974927837 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1794/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:11.999838845 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1571/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:05.883149743 -0500\n@@ -263,19 +263,19 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1289/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:26.596077646 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1289/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:26.600077926 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1289/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:26.600077926 -0500\n@@ -240,6 +240,7 @@\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n+\t\tg2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1208/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:40.700905058 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.toolTipGenerator = null;\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n@@ -1420,7 +1421,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.startAngle = DEFAULT_START_ANGLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1208/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:40.704905333 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.startAngle=DEFAULT_START_ANGLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.toolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1809/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:21.408485245 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n@@ -699,7 +699,10 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n+        if (urls) {\n+\t\t\tplot.setURLGenerator(new StandardPieURLGenerator());\n+\t\t}\n+\t\treturn new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n                 legend);\n \n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1809/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:21.408485245 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "InsertBefore", 
          "seed": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_205/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:38.854842047 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_205/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:38.858842490 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_205/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:38.862842933 -0500\n@@ -263,7 +263,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setClip(savedClip);\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_448/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:04.185745452 -0500\n@@ -231,10 +231,7 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setPaint(getLabelPaint());\n \n         drawBackground(g2, plotArea);\n \n@@ -268,14 +265,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setPaint(getLabelPaint());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_537/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:23:56.433325183 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        g2.setPaint(this.outlinePaint);\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_537/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:56.433325183 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_821/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:19.047069195 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_821/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:19.047069195 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_707/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:25.563418799 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_707/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:25.567419073 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1499/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:25.528357257 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1499/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:25.532357534 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.labelLinkMargin;\n     }\n \n     /**\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        setDataset(dataset);\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1499/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:25.532357534 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setDataset(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.labelLinkMargin;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1775/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:00.979081412 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1775/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:00.983081687 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1060/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:28:20.983403027 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1060/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:20.983403027 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_571/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:14.822583644 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_571/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:14.826583918 -0500\n@@ -239,8 +239,6 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n-\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Delete", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_868/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:44.308792087 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_902/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:02.178010361 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_902/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:02.182010634 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.legendItemShape = DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_902/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:02.182010634 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1676/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:05.351253202 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1676/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:34:05.355253477 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        setBackgroundPaint(Color.WHITE);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1676/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:05.359253752 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_657/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:01.425769960 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        g2.setPaint(this.outlinePaint);\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_657/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:01.429770234 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_543/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:59.769553549 -0500\n@@ -241,7 +241,8 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        g2.setPaint(getLabelPaint());\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1142/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:29:03.586346507 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1142/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:03.590346783 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "this.noDataMessageFont=new Font(\"SansSerif\",Font.PLAIN,12);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_534/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:23:55.057230982 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_534/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:23:55.061231255 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.legendLabelURLGenerator = null;\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelURLGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1828/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:32.297233073 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1828/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:32.301233349 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1313/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:40.169027064 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.legendLabelToolTipGenerator = null;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1313/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:40.169027064 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelToolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_931/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:16.522988119 -0500\n@@ -236,7 +236,9 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1991/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:03.895626362 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1991/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:03.899626643 -0500\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.labelPaint = DEFAULT_LABEL_PAINT;\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1991/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:03.899626643 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "this.labelPaint=DEFAULT_LABEL_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_180/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:23.536957646 -0500\n@@ -244,9 +244,7 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n+        g2.setPaint(getLabelPaint());\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,7 +266,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Replace", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_321/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:21:49.236597188 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_321/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:21:49.236597188 -0500\n@@ -106,7 +106,7 @@\n      * @param passes  the passes.\n      */\n     public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+        return;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_587/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:23.643187032 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_587/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:23.647187305 -0500\n@@ -226,7 +226,11 @@\n                      PlotState parentState,\n                      PlotRenderingInfo info) {\n \n-        // adjust for insets...\n+        if (info != null) {\n+\t\t\t\t\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\t\t\t\t\tinfo.setDataArea(plotArea);\n+\t\t\t\t\t\t}\n+\t\t// adjust for insets...\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n@@ -268,16 +272,10 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 230, 
          "faulty": "RectangleInsets insets=getInsets();", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_738/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:39.828392813 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_988/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:45.344952025 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_988/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:45.348952298 -0500\n@@ -2048,8 +2048,9 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            if (dataset != null) {\n+\t\t\t\tdataset.addChangeListener(this);\n+\t\t\t}\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_988/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:45.352952570 -0500\n@@ -244,9 +244,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "if (dataset != null) {\n  dataset.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_933/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:17.223035829 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.legendItemShape = Plot.DEFAULT_LEGEND_ITEM_CIRCLE;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_933/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:17.223035829 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.legendItemShape=Plot.DEFAULT_LEGEND_ITEM_CIRCLE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1753/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:49.266276074 -0500\n@@ -238,7 +238,8 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setPaint(Color.gray);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_729/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:35.792117246 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.insets = insets;\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_729/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:35.796117519 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "this.insets=insets;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1510/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:31.716785954 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.interiorGap = DEFAULT_INTERIOR_GAP;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1510/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:31.720786230 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1510/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:32:31.720786230 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_74/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:19:15.897533252 -0500\n@@ -691,8 +691,11 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_74/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:19:15.897533252 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.interiorGap = DEFAULT_INTERIOR_GAP;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_74/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:15.901535523 -0500\n@@ -249,7 +249,10 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (getLabelGenerator() != null) {\n+\t\t\tlabelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -277,7 +280,7 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1863/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:50.714498567 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1445/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:55.138249324 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1445/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:31:55.138249324 -0500\n@@ -150,7 +150,6 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:48.766569292 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1961/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:48.770569572 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,16 +270,15 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1405/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:31.688619490 -0500\n@@ -249,7 +249,8 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        g2.setPaint(java.awt.Color.lightGray);\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1659/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:56.470641196 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.labelPaint = Color.black;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1659/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:56.474641472 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        g2.setPaint(getLabelPaint());\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.labelPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_99/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:19:32.033291755 -0500\n@@ -244,9 +244,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,7 +265,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n@@ -277,7 +280,9 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2078/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:53.955114478 -0500\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        labelPercent = getLabelGap() + getMaximumLabelWidth();\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.maximumLabelWidth;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "labelPercent=getLabelGap() + getMaximumLabelWidth();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1366/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:09.831097448 -0500\n@@ -699,8 +699,8 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n-                legend);\n+        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot,\n+\t\t\t\tlegend);\n \n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1366/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:09.831097448 -0500\n@@ -2047,7 +2047,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n+\t\tstate.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1366/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:09.835097727 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1366/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:31:09.835097727 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "Replace", 
          "seed": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "InsertBefore", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_692/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:17.926897250 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_692/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:17.930897523 -0500\n@@ -268,16 +268,14 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1265/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:13.507162773 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1265/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:13.511163048 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.minimumArcAngleToDraw;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1265/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:13.515163323 -0500\n@@ -231,7 +231,9 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -243,7 +245,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,7 +271,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2012/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:16.896533617 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n@@ -2047,7 +2048,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        g2.setStroke(this.labelLinkStroke);\n+\t\tstate.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2012/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:16.900533896 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "InsertBefore", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_184/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:20:25.589235459 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_184/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:20:25.593235990 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.sectionPaintMap = new PaintMap();\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_184/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:20:25.597236521 -0500\n@@ -263,7 +263,8 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setFont(getLabelFont());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.sectionPaintMap=new PaintMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1813/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:35:23.444625106 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1813/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:23.448625381 -0500\n@@ -238,7 +238,8 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        g2.setPaint(Color.gray);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n@@ -268,15 +269,6 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_305/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:21:40.291981549 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_305/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:40.295981825 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1162/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:14.575104552 -0500\n@@ -2046,7 +2046,8 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.simpleLabels = false;\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1162/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:14.575104552 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.simpleLabels=false;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1097/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:41.032789205 -0500\n@@ -691,8 +691,9 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1654/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:54.418499737 -0500\n@@ -2609,7 +2609,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        setDataset(dataset);\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1654/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:54.418499737 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setDataset(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1119/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:53.273634677 -0500\n@@ -265,17 +265,17 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1360/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:06.354855109 -0500\n@@ -268,16 +268,14 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1360/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:31:06.354855109 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_616/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:40.948370387 -0500\n@@ -703,7 +703,7 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        return true;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_616/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:40.952370660 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1735/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:39.689617340 -0500\n@@ -238,12 +238,14 @@\n \n         drawBackground(g2, plotArea);\n \n-        Shape savedClip = g2.getClip();\n+        setBackgroundPaint(Color.WHITE);\n+\t\tShape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        g2.setClip(savedClip);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,7 +270,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 241, 
          "faulty": "Shape savedClip=g2.getClip();", 
          "type": "InsertBefore", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1913/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:36:20.012556071 -0500\n@@ -691,12 +691,13 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1913/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:36:20.016556351 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.startAngle;   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1944/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:36:38.513852092 -0500\n@@ -239,12 +239,13 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setFont(getLabelFont());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1867/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:35:52.822646840 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.interiorGap = DEFAULT_INTERIOR_GAP;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n@@ -1445,7 +1446,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.minimumArcAngleToDraw;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1867/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:52.826647121 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.interiorGap=DEFAULT_INTERIOR_GAP;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1464/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:32:06.135012621 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1464/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:06.135012621 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_554/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:05.321933559 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.outlineVisible = true;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_554/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:05.325933833 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_554/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:05.329934107 -0500\n@@ -244,9 +244,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,14 +265,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.outlineVisible=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_665/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:05.506048749 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        g2.clip(area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_665/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:05.506048749 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "g2.clip(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_422/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:49.728753711 -0500\n@@ -2047,7 +2047,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n+\t\tstate.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_422/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:49.732753985 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "InsertBefore", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1128/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:57.401919680 -0500\n@@ -268,16 +268,15 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        setCircular(false, false);\n+\t\tPiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "InsertBefore", 
          "seed": "setCircular(false,false);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1300/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:32.688503973 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1300/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:32.692504253 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1439/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:51.710011237 -0500\n@@ -1395,7 +1395,10 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        if (direction == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'direction' argument.\");\n+\t\t}\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1439/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:51.710011237 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "if (direction == null) {\n  throw new IllegalArgumentException(\"Null 'direction' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_762/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:50.145097053 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_762/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:50.149097326 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        setCircular(false, false);\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_731/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:36.476163949 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_731/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:36.476163949 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_676/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:10.986423160 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        insets.trim(plotArea);\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "insets.trim(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1603/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:23.700380525 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1603/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:23.704380802 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1603/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:23.704380802 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setToolTipGenerator(new StandardPieToolTipGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1052/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:16.875118767 -0500\n@@ -228,7 +228,8 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setPaint(Color.gray);\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(Color.gray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_943/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:22.107368696 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_943/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:22.107368696 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        setInsets(insets, true);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_574/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:16.202678061 -0500\n@@ -943,7 +943,7 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.noDataMessageFont = new Font(\"SansSerif\", Font.PLAIN, 12);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_574/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:16.202678061 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Replace", 
          "seed": "this.noDataMessageFont=new Font(\"SansSerif\",Font.PLAIN,12);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_437/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:57.221267764 -0500\n@@ -2046,7 +2046,8 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.labelGenerator = new StandardPieSectionLabelGenerator();\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_437/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:57.225268038 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        g2.clip(plotArea);\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.labelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1006/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:54.737591869 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1006/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:54.741592141 -0500\n@@ -2048,8 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.minimumArcAngleToDraw = DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n@@ -2609,7 +2608,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        setDataset(dataset);\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1006/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:54.741592141 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setDataset(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.minimumArcAngleToDraw=DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1200/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:35.880573034 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1200/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:35.884573309 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_858/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:40.224513584 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.toolTipGenerator = null;\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_858/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:40.228513856 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.toolTipGenerator=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1590/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:16.847907315 -0500\n@@ -228,7 +228,11 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        if (info != null) {\n+\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\tinfo.setDataArea(plotArea);\n+\t\t}\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,7 +272,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1106/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:45.809119177 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1106/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:45.813119454 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.circular = circular;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1106/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:45.813119454 -0500\n@@ -268,14 +268,7 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setFont(getLabelFont());\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.circular=circular;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_718/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:30.339744961 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_718/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:25:30.343745234 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1046/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:28:14.054923588 -0500\n@@ -943,7 +943,8 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        this.outlinePaint = outlinePaint;\n+\t\tfillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1046/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:14.058923865 -0500\n@@ -239,7 +239,7 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "InsertBefore", 
          "seed": "this.outlinePaint=outlinePaint;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_563/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:24:10.766306115 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_563/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:10.766306115 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_896/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:59.417822202 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_896/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:26:59.421822474 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_896/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:59.421822474 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1517/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:35.813069623 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1517/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:32:35.817069899 -0500\n@@ -943,7 +943,7 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n+        g2.clip(area);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1517/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:35.817069899 -0500\n@@ -277,7 +277,7 @@\n             linkH = 2 * min;\n         }\n         \n-        PiePlotState state = initialise(g2, plotArea, this, null, info);\n+        PiePlotState state = new PiePlotState(info);\n \n         // the link area defines the dog leg points for the linking lines to \n         // the labels\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Replace", 
          "seed": "g2.clip(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 280, 
          "faulty": "PiePlotState state=initialise(g2,plotArea,this,null,info);", 
          "type": "Replace", 
          "seed": "PiePlotState state=new PiePlotState(info);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_760/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:49.465050636 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_760/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:49.465050636 -0500\n@@ -1445,7 +1445,8 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        this.labelDistributor = new PieLabelDistributor(0);\n+\t\treturn this.maximumLabelWidth;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_760/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:49.469050909 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        insets.trim(plotArea);\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "insets.trim(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "InsertBefore", 
          "seed": "this.labelDistributor=new PieLabelDistributor(0);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_461/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:23:10.966210394 -0500\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_925/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:13.934811723 -0500\n@@ -231,10 +231,7 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         drawBackground(g2, plotArea);\n \n@@ -265,17 +262,17 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1090/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:28:37.604552306 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1090/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:37.608552582 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(getLabelPaint());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1218/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:46.213284655 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1218/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:29:46.217284930 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1218/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:46.217284930 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "this.noDataMessageFont=new Font(\"SansSerif\",Font.PLAIN,12);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2084/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:57.375352309 -0500\n@@ -692,11 +692,16 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        if (urls) {\n+\t\t\tplot.setURLGenerator(new StandardPieURLGenerator());\n+\t\t}\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2084/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:57.379352586 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1323/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:30:45.713414509 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1323/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:45.717414788 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1159/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:29:13.203009924 -0500\n@@ -692,7 +692,8 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n+\t\tplot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1159/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:13.207010201 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        g2.clip(plotArea);\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "InsertBefore", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1657/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:55.782593769 -0500\n@@ -699,7 +699,10 @@\n         if (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n-        return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n+        if (urls) {\n+\t\t\tplot.setURLGenerator(new StandardPieURLGenerator());\n+\t\t}\n+\t\treturn new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n                 legend);\n \n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1657/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:55.782593769 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 702, 
          "faulty": "return new JFreeChart(title,JFreeChart.DEFAULT_TITLE_FONT,plot,legend);", 
          "type": "InsertBefore", 
          "seed": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_977/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:27:39.096526328 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_977/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:39.100526600 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_998/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:50.621311470 -0500\n@@ -236,8 +236,6 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n-\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n@@ -268,14 +266,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Delete", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_968/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:34.360203624 -0500\n@@ -236,7 +236,7 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_968/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:27:34.364203897 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_680/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:13.034563072 -0500\n@@ -696,7 +696,10 @@\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n-        if (urls) {\n+        if (tooltips) {\n+\t\t\tplot.setToolTipGenerator(new StandardPieToolTipGenerator());\n+\t\t}\n+\t\tif (urls) {\n             plot.setURLGenerator(new StandardPieURLGenerator());\n         }\n         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_680/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:13.034563072 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_680/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:13.038563345 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 699, 
          "faulty": "if (urls) {\n  plot.setURLGenerator(new StandardPieURLGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_20/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:18:39.894714340 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2098/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:38:05.607924534 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2098/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:38:05.611924812 -0500\n@@ -226,7 +226,11 @@\n                      PlotState parentState,\n                      PlotRenderingInfo info) {\n \n-        // adjust for insets...\n+        if (info != null) {\n+\t\t\t\t\t\t\tinfo.setPlotArea(plotArea);\n+\t\t\t\t\t\t\tinfo.setDataArea(plotArea);\n+\t\t\t\t\t\t}\n+\t\t// adjust for insets...\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n@@ -268,7 +272,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 230, 
          "faulty": "RectangleInsets insets=getInsets();", 
          "type": "InsertBefore", 
          "seed": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1755/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:34:49.970324493 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1755/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:34:49.970324493 -0500\n@@ -1395,7 +1395,8 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        this.sectionOutlinePaintMap = new PaintMap();\n+\t\treturn this.labelGenerator;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1755/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:34:49.974324768 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlinePaintMap=new PaintMap();"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_814/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:16.190874348 -0500\n@@ -693,7 +693,10 @@\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_814/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:26:16.194874622 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_814/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:16.194874622 -0500\n@@ -236,7 +236,7 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Replace", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_549/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:24:03.205788736 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_549/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:03.205788736 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_345/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:03.089550097 -0500\n@@ -231,16 +231,12 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n \n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n-\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n@@ -268,14 +264,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Delete", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_688/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:16.526801618 -0500\n@@ -2047,7 +2047,8 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        this.circular = true;\n+\t\tstate.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n@@ -2609,7 +2610,8 @@\n     public LegendItemCollection getLegendItems() {\n \n         LegendItemCollection result = new LegendItemCollection();\n-        if (this.dataset == null) {\n+        this.labelPaint = Color.black;\n+\t\tif (this.dataset == null) {\n             return result;\n         }\n         List keys = this.dataset.getKeys();\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_688/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:16.530801892 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2612, 
          "faulty": "if (this.dataset == null) {\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.labelPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "InsertBefore", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_516/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:23:45.424571456 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_516/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:23:45.428571730 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.sectionOutlineStrokeMap = new StrokeMap();\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n@@ -2048,7 +2049,8 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+            this.baseSectionOutlineStroke = DEFAULT_OUTLINE_STROKE;\n+\t\t\tstate.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "InsertBefore", 
          "seed": "this.baseSectionOutlineStroke=DEFAULT_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_765/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:51.509190158 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.fill(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_765/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:51.509190158 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.fill(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1428/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:31:45.457576850 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1428/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:45.461577128 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.legendLabelToolTipGenerator = null;\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.legendLabelToolTipGenerator=null;"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_434/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:55.817171443 -0500\n@@ -228,7 +228,7 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -249,7 +249,13 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1286/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:30:25.223981594 -0500\n@@ -1395,7 +1395,7 @@\n      * @see #setLabelGenerator(PieSectionLabelGenerator)\n      */\n     public PieSectionLabelGenerator getLabelGenerator() {\n-        return this.labelGenerator;   \n+        return null;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1286/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:25.223981594 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1398, 
          "faulty": "return this.labelGenerator;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2023/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:37:22.888951457 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2023/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:22.892951736 -0500\n@@ -2048,8 +2048,9 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            if (dataset != null) {\n+\t\t\t\tdataset.addChangeListener(this);\n+\t\t\t}\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2023/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:22.892951736 -0500\n@@ -268,14 +268,8 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t1.0f));\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "if (dataset != null) {\n  dataset.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,1.0f));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_919/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:11.854669948 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_919/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:11.858670221 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setPaint(java.awt.Color.lightGray);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setPaint(java.awt.Color.lightGray);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_843/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:31.299904953 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_843/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:31.299904953 -0500\n@@ -268,15 +268,6 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n-        \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n         // the link area defines the dog leg points for the linking lines to \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Delete", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1195/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:33.136383979 -0500\n@@ -266,9 +266,16 @@\n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n-        double linkH = plotArea.getHeight() - gapVertical;\n+        g2.setClip(savedClip);\n+\t\tdouble linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 269, 
          "faulty": "double linkH=plotArea.getHeight() - gapVertical;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_379/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:22:23.270937169 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.minimumArcAngleToDraw;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_379/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:23.274937444 -0500\n@@ -228,7 +228,7 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -249,7 +249,13 @@\n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n-        double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n \n         if (DEBUG_DRAW_INTERIOR) {\n             double hGap = plotArea.getWidth() * getInteriorGap();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 252, 
          "faulty": "double gapVertical=plotArea.getHeight() * gapPercent * 2.0;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.minimumArcAngleToDraw;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_330/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:21:54.096931594 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_330/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:21:54.096931594 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2048/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:36.645909941 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            return;   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2048/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:37:36.649910219 -0500\n@@ -150,7 +150,7 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            return -1;\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "return -1;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1555/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:32:57.762588373 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1555/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:32:57.766588649 -0500\n@@ -1445,7 +1445,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        throw new IllegalArgumentException(\"Null 'anchor' argument.\");   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1555/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:32:57.766588649 -0500\n@@ -239,7 +239,8 @@\n         drawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n-        g2.clip(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 242, 
          "faulty": "g2.clip(plotArea);", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1174/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:21.539584757 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1174/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:21.543585032 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_951/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:26.235650020 -0500\n@@ -244,9 +244,6 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n-        }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;\n@@ -268,14 +265,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "Delete", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1222/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:29:48.317429526 -0500\n@@ -929,7 +929,8 @@\n         // some subclasses override this method completely, so don't put \n         // anything here that *must* be done\n         fillBackground(g2, area);\n-        drawBackgroundImage(g2, area);\n+        g2.draw(area);\n+\t\tdrawBackgroundImage(g2, area);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1222/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:29:48.321429801 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1222/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:48.321429801 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 932, 
          "faulty": "drawBackgroundImage(g2,area);", 
          "type": "InsertBefore", 
          "seed": "g2.draw(area);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_67/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:19:11.691146646 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_67/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:19:11.695148917 -0500\n@@ -926,9 +926,6 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_67/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:19:11.695148917 -0500\n@@ -2048,9 +2048,7 @@\n      \n         PiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n-        state.setLatestAngle(plot.getStartAngle());\n+            state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Delete", 
          "seed": "this.outlineStroke=outlineStroke;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Delete", 
          "seed": "if (direction == null) {\n  throw new IllegalArgumentException(\"Null 'direction' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_660/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:02.765861527 -0500\n@@ -236,7 +236,7 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        setCircular(false, false);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1612/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:29.136755821 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1612/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:29.140756097 -0500\n@@ -2608,7 +2608,8 @@\n      */\n     public LegendItemCollection getLegendItems() {\n \n-        LegendItemCollection result = new LegendItemCollection();\n+        this.labelShadowPaint = DEFAULT_LABEL_SHADOW_PAINT;\n+\t\tLegendItemCollection result = new LegendItemCollection();\n         if (this.dataset == null) {\n             return result;\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1612/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:29.140756097 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2611, 
          "faulty": "LegendItemCollection result=new LegendItemCollection();", 
          "type": "InsertBefore", 
          "seed": "this.labelShadowPaint=DEFAULT_LABEL_SHADOW_PAINT;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1017/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:28:00.930014747 -0500\n@@ -692,7 +692,7 @@\n                                               boolean urls) {\n \n         PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1017/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:00.934015024 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1017/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:28:00.934015024 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_748/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:25:43.964675182 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        setBackgroundPaint(Color.WHITE);\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_748/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:43.968675455 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "setBackgroundPaint(Color.WHITE);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_726/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:25:34.380020833 -0500\n@@ -691,9 +691,10 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n-        if (tooltips) {\n+        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+\t\tif (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n         if (urls) {\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_726/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:34.380020833 -0500\n@@ -228,7 +228,9 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\tgetForegroundAlpha()));\n+\t\tinsets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "InsertBefore", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 696, 
          "faulty": "if (tooltips) {\n  plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n}", 
          "type": "InsertBefore", 
          "seed": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1397/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:31:27.012294097 -0500\n@@ -703,7 +703,8 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        this.labelGenerator = new StandardPieSectionLabelGenerator();\n+\t\treturn this.circular;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1397/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:31:27.016294375 -0500\n@@ -228,7 +228,7 @@\n \n         // adjust for insets...\n         RectangleInsets insets = getInsets();\n-        insets.trim(plotArea);\n+        this.notifyListeners(new PlotChangeEvent(this));\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 231, 
          "faulty": "insets.trim(plotArea);", 
          "type": "Replace", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "InsertBefore", 
          "seed": "this.labelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_830/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:23.799393369 -0500\n@@ -1420,7 +1420,8 @@\n      * @see #setLabelGap(double)\n      */\n     public double getLabelGap() {\n-        return this.labelGap;   \n+        this.labelOutlineStroke = DEFAULT_LABEL_OUTLINE_STROKE;\n+\t\treturn this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_830/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:23.803393642 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1423, 
          "faulty": "return this.labelGap;", 
          "type": "InsertBefore", 
          "seed": "this.labelOutlineStroke=DEFAULT_LABEL_OUTLINE_STROKE;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2055/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:37:40.146153648 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2055/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:40.146153648 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2055/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:40.150153926 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_947/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:27:24.223512903 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_947/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:27:24.223512903 -0500\n@@ -703,7 +703,7 @@\n      * @see #setCircular(boolean)\n      */\n     public boolean isCircular() {\n-        return this.circular;\n+        return true;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_947/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:27:24.227513176 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 706, 
          "faulty": "return this.circular;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_639/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:51.865116607 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setFont(getLabelFont());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1307/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:30:36.716785709 -0500\n@@ -231,7 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n+        this.notifyListeners(new PlotChangeEvent(this));\n+\t\tif (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n         }\n@@ -268,7 +269,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notifyListeners(new PlotChangeEvent(this));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2033/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:28.401335645 -0500\n@@ -667,7 +667,8 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        this.ignoreZeroValues = false;\n+\t\treturn this.interiorGap;\n     }\n \n     /**\n@@ -1445,7 +1446,7 @@\n      * @see #setMaximumLabelWidth(double)\n      */\n     public double getMaximumLabelWidth() {\n-        return this.maximumLabelWidth;   \n+        return this.labelGap;   \n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2033/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:28.405335923 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 1448, 
          "faulty": "return this.maximumLabelWidth;", 
          "type": "Replace", 
          "seed": "return this.labelGap;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "InsertBefore", 
          "seed": "this.ignoreZeroValues=false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_569/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:14.142537117 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_569/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:24:14.142537117 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "return;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2040/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:37:32.481619914 -0500\n@@ -2047,8 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n+        state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2040/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:32.485620192 -0500\n@@ -245,7 +245,8 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Delete", 
          "seed": "this.circular=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_613/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:24:39.496271111 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_613/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:24:39.500271385 -0500\n@@ -236,7 +236,8 @@\n             info.setDataArea(plotArea);\n         }\n \n-        drawBackground(g2, plotArea);\n+        notifyListeners(new PlotChangeEvent(this));\n+\t\tdrawBackground(g2, plotArea);\n \n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 239, 
          "faulty": "drawBackground(g2,plotArea);", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new PlotChangeEvent(this));"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1123/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:28:55.301774702 -0500\n@@ -2046,7 +2046,8 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.labelGenerator = new StandardPieSectionLabelGenerator();\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1123/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:28:55.301774702 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.labelGenerator=new StandardPieSectionLabelGenerator();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1664/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:33:58.526782918 -0500\n@@ -2047,7 +2047,7 @@\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n         PiePlotState state = new PiePlotState(info);\n-        state.setPassesRequired(2);\n+        g2.setStroke(this.labelLinkStroke);\n             state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n                     plot.getDataset()));\n         state.setLatestAngle(plot.getStartAngle());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1664/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:33:58.530783193 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2050, 
          "faulty": "state.setPassesRequired(2);", 
          "type": "Replace", 
          "seed": "g2.setStroke(this.labelLinkStroke);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1140/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:29:02.842295163 -0500\n@@ -245,7 +245,7 @@\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            setCircular(false, false);   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -263,19 +263,18 @@\n                     igy2 - igy1));\n         }\n \n-        double linkX = plotArea.getX() + gapHorizontal / 2;\n+        g2.setPaint(getLabelPaint());\n+\t\tdouble linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "setCircular(false,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 266, 
          "faulty": "double linkX=plotArea.getX() + gapHorizontal / 2;", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1860/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:35:49.378405656 -0500\n@@ -266,7 +266,13 @@\n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n         double linkW = plotArea.getWidth() - gapHorizontal;\n-        double linkH = plotArea.getHeight() - gapVertical;\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\tdouble linkH = plotArea.getHeight() - gapVertical;\n         \n         // make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 269, 
          "faulty": "double linkH=plotArea.getHeight() - gapVertical;", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_772/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:25:54.345383730 -0500\n@@ -667,7 +667,7 @@\n      * @see #setInteriorGap(double)\n      */\n     public double getInteriorGap() {\n-        return this.interiorGap;\n+        return this.startAngle;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_772/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:25:54.349384003 -0500\n@@ -244,7 +244,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setPaint(getLabelPaint());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 670, 
          "faulty": "return this.interiorGap;", 
          "type": "Replace", 
          "seed": "return this.startAngle;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_852/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:36.820281436 -0500\n@@ -268,7 +268,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:15:32.262705625 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_852/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/data/general/DatasetUtilities.java\t2018-12-01 08:26:36.824281709 -0500\n@@ -150,7 +150,9 @@\n      */\n     public static double calculatePieDatasetTotal(PieDataset dataset) {\n         if (dataset == null) {\n-            throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n+            if (dataset == null) {\n+\t\t\t\tthrow new IllegalArgumentException(\"Null 'dataset' argument.\");\n+\t\t\t}\n         }\n         List keys = dataset.getKeys();\n         double totalValue = 0;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/general/DatasetUtilities.java", 
          "line": 153, 
          "faulty": "throw new IllegalArgumentException(\"Null 'dataset' argument.\");", 
          "type": "Replace", 
          "seed": "if (dataset == null) {\n  throw new IllegalArgumentException(\"Null 'dataset' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2102/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:38:07.692069346 -0500\n@@ -926,9 +926,7 @@\n      * @param area  the area within which the plot should be drawn.\n      */\n     public void drawBackground(Graphics2D g2, Rectangle2D area) {\n-        // some subclasses override this method completely, so don't put \n-        // anything here that *must* be done\n-        fillBackground(g2, area);\n+        this.backgroundImage = null;\n         drawBackgroundImage(g2, area);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2102/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:38:07.692069346 -0500\n@@ -230,7 +230,8 @@\n         RectangleInsets insets = getInsets();\n         insets.trim(plotArea);\n \n-        Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n+        g2.clip(plotArea);\n+\t\tRectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n         if (info != null) {\n             info.setPlotArea(plotArea);\n             info.setDataArea(plotArea);\n@@ -268,14 +269,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 233, 
          "faulty": "Rectangle2D originalPlotArea=(Rectangle2D)plotArea.clone();", 
          "type": "InsertBefore", 
          "seed": "g2.clip(plotArea);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 931, 
          "faulty": "fillBackground(g2,area);", 
          "type": "Replace", 
          "seed": "this.backgroundImage=null;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_866/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:26:43.628745717 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:15:36.482705821 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_866/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot.java\t2018-12-01 08:26:43.632745990 -0500\n@@ -2046,10 +2046,10 @@\n     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,\n             PiePlot plot, Integer index, PlotRenderingInfo info) {\n      \n-        PiePlotState state = new PiePlotState(info);\n+        this.simpleLabels = false;\n+\t\tPiePlotState state = new PiePlotState(info);\n         state.setPassesRequired(2);\n-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(\n-                    plot.getDataset()));\n+            this.sectionOutlineStrokeMap = new StrokeMap();\n         state.setLatestAngle(plot.getStartAngle());\n         return state;\n         \n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_866/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:43.632745990 -0500\n@@ -241,11 +241,13 @@\n         Shape savedClip = g2.getClip();\n         g2.clip(plotArea);\n \n-        // adjust the plot area by the interior spacing value\n+        g2.setPaint(getLabelPaint());\n+\t\t// adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n-            labelPercent = getLabelGap() + getMaximumLabelWidth();   \n+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t\tgetForegroundAlpha()));   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n                 + labelPercent) * 2.0;\n@@ -268,14 +270,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2049, 
          "faulty": "PiePlotState state=new PiePlotState(info);", 
          "type": "InsertBefore", 
          "seed": "this.simpleLabels=false;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 248, 
          "faulty": "labelPercent=getLabelGap() + getMaximumLabelWidth();", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,getForegroundAlpha()));"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot.java", 
          "line": 2051, 
          "faulty": "state.setTotal(DatasetUtilities.calculatePieDatasetTotal(plot.getDataset()));", 
          "type": "Replace", 
          "seed": "this.sectionOutlineStrokeMap=new StrokeMap();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 245, 
          "faulty": "double gapPercent=getInteriorGap();", 
          "type": "InsertBefore", 
          "seed": "g2.setPaint(getLabelPaint());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.setPaint(this.outlinePaint);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_427/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:22:52.388936240 -0500\n@@ -231,10 +231,8 @@\n         insets.trim(plotArea);\n \n         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();\n-        if (info != null) {\n-            info.setPlotArea(plotArea);\n-            info.setDataArea(plotArea);\n-        }\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\n+\t\t\t\t0.1f));\n \n         drawBackground(g2, plotArea);\n \n@@ -244,7 +242,8 @@\n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n         double labelPercent = 0.0;\n-        if (getLabelGenerator() != null) {\n+        g2.setFont(getLabelFont());\n+\t\tif (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n         double gapHorizontal = plotArea.getWidth() * (gapPercent \n@@ -268,7 +267,13 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n+\t\t// make the link area a square if the pie chart is to be circular...\n         if (isCircular()) { // is circular?\n             double min = Math.min(linkW, linkH) / 2;\n             linkX = (linkX + linkX + linkW) / 2 - min;\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_427/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlotState.java\t2018-12-01 08:22:52.392936515 -0500\n@@ -105,8 +105,7 @@\n      * \n      * @param passes  the passes.\n      */\n-    public void setPassesRequired(int passes) {\n-        this.passesRequired = passes;   \n+    public void setPassesRequired(int passes) {   \n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlotState.java", 
          "line": 109, 
          "faulty": "this.passesRequired=passes;", 
          "type": "Delete", 
          "seed": "throw new IllegalArgumentException(\"Null 'anchor' argument.\");"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 247, 
          "faulty": "if (getLabelGenerator() != null) {\n  labelPercent=getLabelGap() + getMaximumLabelWidth();\n}", 
          "type": "InsertBefore", 
          "seed": "g2.setFont(getLabelFont());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "InsertBefore", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 234, 
          "faulty": "if (info != null) {\n  info.setPlotArea(plotArea);\n  info.setDataArea(plotArea);\n}", 
          "type": "Replace", 
          "seed": "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,0.1f));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_2061/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:37:43.526388936 -0500\n@@ -243,7 +243,8 @@\n \n         // adjust the plot area by the interior spacing value\n         double gapPercent = getInteriorGap();\n-        double labelPercent = 0.0;\n+        g2.setClip(savedClip);\n+\t\tdouble labelPercent = 0.0;\n         if (getLabelGenerator() != null) {\n             labelPercent = getLabelGap() + getMaximumLabelWidth();   \n         }\n@@ -265,17 +266,16 @@\n \n         double linkX = plotArea.getX() + gapHorizontal / 2;\n         double linkY = plotArea.getY() + gapVertical / 2;\n-        double linkW = plotArea.getWidth() - gapHorizontal;\n+        setInsets(insets, true);\n+\t\tdouble linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 246, 
          "faulty": "double labelPercent=0.0;", 
          "type": "InsertBefore", 
          "seed": "g2.setClip(savedClip);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 268, 
          "faulty": "double linkW=plotArea.getWidth() - gapHorizontal;", 
          "type": "InsertBefore", 
          "seed": "setInsets(insets,true);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1620/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:33:33.861081872 -0500\n@@ -691,7 +691,7 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n+        PiePlot plot = new PiePlot(dataset);\n         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:15:31.190705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_1620/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/Plot.java\t2018-12-01 08:33:33.865082148 -0500\n@@ -943,7 +943,6 @@\n      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)\n      */\n     protected void fillBackground(Graphics2D g2, Rectangle2D area) {\n-        fillBackground(g2, area, PlotOrientation.VERTICAL);\n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/Plot.java", 
          "line": 946, 
          "faulty": "fillBackground(g2,area,PlotOrientation.VERTICAL);", 
          "type": "Delete", 
          "seed": "g2.clip(area);"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:15:31.762705602 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_872/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/ChartFactory.java\t2018-12-01 08:26:46.328929833 -0500\n@@ -691,8 +691,8 @@\n                                               boolean tooltips,\n                                               boolean urls) {\n \n-        PiePlot3D plot = new PiePlot3D(dataset);\n-        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));\n+        PiePlot plot = new PiePlot(dataset);\n+        plot.setURLGenerator(new StandardPieURLGenerator());\n         if (tooltips) {\n             plot.setToolTipGenerator(new StandardPieToolTipGenerator());\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:15:31.186705575 -0500\n+++ /tmp/Arja_Defects4J_Chart_15/patches_66bc/Patch_872/patched/tmp/Arja_Defects4J_Chart_15/source/org/jfree/chart/plot/PiePlot3D.java\t2018-12-01 08:26:46.332930105 -0500\n@@ -268,14 +268,12 @@\n         double linkW = plotArea.getWidth() - gapHorizontal;\n         double linkH = plotArea.getHeight() - gapVertical;\n         \n-        // make the link area a square if the pie chart is to be circular...\n-        if (isCircular()) { // is circular?\n-            double min = Math.min(linkW, linkH) / 2;\n-            linkX = (linkX + linkX + linkW) / 2 - min;\n-            linkY = (linkY + linkY + linkH) / 2 - min;\n-            linkW = 2 * min;\n-            linkH = 2 * min;\n-        }\n+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n+\t\t\tdrawNoDataMessage(g2, plotArea);\n+\t\t\tg2.setClip(savedClip);\n+\t\t\tdrawOutline(g2, plotArea);\n+\t\t\treturn;\n+\t\t}\n         \n         PiePlotState state = initialise(g2, plotArea, this, null, info);\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 695, 
          "faulty": "plot.setInsets(new RectangleInsets(0.0,5.0,5.0,5.0));", 
          "type": "Replace", 
          "seed": "plot.setURLGenerator(new StandardPieURLGenerator());"
        }, 
        {
          "path": "source/org/jfree/chart/plot/PiePlot3D.java", 
          "line": 272, 
          "faulty": "if (isCircular()) {\n  double min=Math.min(linkW,linkH) / 2;\n  linkX=(linkX + linkX + linkW) / 2 - min;\n  linkY=(linkY + linkY + linkH) / 2 - min;\n  linkW=2 * min;\n  linkH=2 * min;\n}", 
          "type": "Replace", 
          "seed": "if (DatasetUtilities.isEmptyOrNull(getDataset())) {\n  drawNoDataMessage(g2,plotArea);\n  g2.setClip(savedClip);\n  drawOutline(g2,plotArea);\n  return;\n}"
        }, 
        {
          "path": "source/org/jfree/chart/ChartFactory.java", 
          "line": 694, 
          "faulty": "PiePlot3D plot=new PiePlot3D(dataset);", 
          "type": "Replace", 
          "seed": "PiePlot plot=new PiePlot(dataset);"
        }
      ]
    }
  ]
}