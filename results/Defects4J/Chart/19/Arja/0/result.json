{
  "repair_end": "2018-12-01 15:10:05.210154", 
  "repair_begin": "2018-12-01 14:14:20.108593", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1411/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:03:17.701171352 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1411/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:03:17.705171644 -0500\n@@ -1131,7 +1131,11 @@\n         for (int i = 0; i < this.rangeAxes.size(); i++) {\n             ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);\n             if (axis != null) {\n-                axis.configure();\n+                if (axis != null) {\n+\t\t\t\t\taxis.configure();\n+\t\t\t\t\taxis.addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\taxis.configure();\n             }\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1134, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1614/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:29.715324555 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1614/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:29.719324828 -0500\n@@ -971,7 +971,10 @@\n      */\n     public int getRangeAxisIndex(ValueAxis axis) {\n         int result = this.rangeAxes.indexOf(axis);\n-        if (result < 0) { // try the parent plot\n+        if (axis != null) {\n+\t\t\taxis.setPlot(this);\n+\t\t}\n+\t\tif (result < 0) { // try the parent plot\n             Plot parent = getParent();\n             if (parent instanceof CategoryPlot) {\n                 CategoryPlot p = (CategoryPlot) parent;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 974, 
          "faulty": "if (result < 0) {\n  Plot parent=getParent();\n  if (parent instanceof CategoryPlot) {\n    CategoryPlot p=(CategoryPlot)parent;\n    result=p.getRangeAxisIndex(axis);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.setPlot(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1215/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:57:03.937419892 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1215/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:57:03.941420188 -0500\n@@ -659,7 +659,8 @@\n         this.domainAxes.set(index, axis);\n         if (axis != null) {\n             axis.configure();\n-            axis.addChangeListener(this);\n+            this.foregroundDomainMarkers = new HashMap();\n+\t\t\taxis.addChangeListener(this);\n         }\n         if (notify) {\n             notifyListeners(new PlotChangeEvent(this));\n@@ -923,7 +924,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -936,7 +937,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 662, 
          "faulty": "axis.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.foregroundDomainMarkers=new HashMap();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryDataset existing=(CategoryDataset)this.datasets.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1497/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:05:59.028722284 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1497/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:05:59.028722284 -0500\n@@ -971,13 +971,7 @@\n      */\n     public int getRangeAxisIndex(ValueAxis axis) {\n         int result = this.rangeAxes.indexOf(axis);\n-        if (result < 0) { // try the parent plot\n-            Plot parent = getParent();\n-            if (parent instanceof CategoryPlot) {\n-                CategoryPlot p = (CategoryPlot) parent;\n-                result = p.getRangeAxisIndex(axis);\n-            }\n-        }\n+        this.weight = weight;\n         return result;\n     }\n     \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 974, 
          "faulty": "if (result < 0) {\n  Plot parent=getParent();\n  if (parent instanceof CategoryPlot) {\n    CategoryPlot p=(CategoryPlot)parent;\n    result=p.getRangeAxisIndex(axis);\n  }\n}", 
          "type": "Replace", 
          "seed": "this.weight=weight;"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1595/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:00.209305711 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1595/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:00.209305711 -0500\n@@ -923,7 +923,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -3144,7 +3144,7 @@\n         Range result = null;\n         List mappedDatasets = new ArrayList();\n         \n-        int rangeIndex = this.rangeAxes.indexOf(axis);\n+        int rangeIndex = getRangeAxisIndex(axis);\n         if (rangeIndex >= 0) {\n             mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 3147, 
          "faulty": "int rangeIndex=this.rangeAxes.indexOf(axis);", 
          "type": "Replace", 
          "seed": "int rangeIndex=getRangeAxisIndex(axis);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryDataset existing=(CategoryDataset)this.datasets.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1446/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:04:22.277841592 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1446/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:04:22.281841880 -0500\n@@ -662,7 +662,7 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n+            this.backgroundDomainMarkers = new HashMap();\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 665, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Replace", 
          "seed": "this.backgroundDomainMarkers=new HashMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1026/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:50:57.098999746 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1026/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:50:57.123001477 -0500\n@@ -650,9 +650,6 @@\n      */\n     public void setDomainAxis(int index, CategoryAxis axis, boolean notify) {\n         CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);\n-        if (existing != null) {\n-            existing.removeChangeListener(this);\n-        }\n         if (axis != null) {\n             axis.setPlot(this);\n         }\n@@ -936,7 +933,8 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n+            this.annotations = new java.util.ArrayList();\n+\t\t\tnotifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 653, 
          "faulty": "if (existing != null) {\n  existing.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "this.anchorValue=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "InsertBefore", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1549/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:07:36.687547822 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1549/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:07:36.691548100 -0500\n@@ -637,7 +637,8 @@\n      * @see #getDomainAxis(int)\n      */\n     public void setDomainAxis(int index, CategoryAxis axis) {\n-        setDomainAxis(index, axis, true);\n+        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);\n+\t\tsetDomainAxis(index, axis, true);\n     }\n  \n     /**\n@@ -936,7 +937,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 640, 
          "faulty": "setDomainAxis(index,axis,true);", 
          "type": "InsertBefore", 
          "seed": "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "if (this.foregroundRangeMarkers != null) {\n  Set keys=this.foregroundRangeMarkers.keySet();\n  Iterator iterator=keys.iterator();\n  while (iterator.hasNext()) {\n    Integer key=(Integer)iterator.next();\n    clearRangeMarkers(key.intValue());\n  }\n  this.foregroundRangeMarkers.clear();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1602/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:11.854103358 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1602/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:11.858103633 -0500\n@@ -662,7 +662,15 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n+            if (this.backgroundRangeMarkers != null) {\n+\t\t\t\tSet keys = this.backgroundRangeMarkers.keySet();\n+\t\t\t\tIterator iterator = keys.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tInteger key = (Integer) iterator.next();\n+\t\t\t\t\tclearRangeMarkers(key.intValue());\n+\t\t\t\t}\n+\t\t\t\tthis.backgroundRangeMarkers.clear();\n+\t\t\t}\n         }\n     }\n \n@@ -1131,7 +1139,11 @@\n         for (int i = 0; i < this.rangeAxes.size(); i++) {\n             ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);\n             if (axis != null) {\n-                axis.configure();\n+                if (axis != null) {\n+\t\t\t\t\taxis.configure();\n+\t\t\t\t\taxis.addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\taxis.configure();\n             }\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1134, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 665, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Replace", 
          "seed": "if (this.backgroundRangeMarkers != null) {\n  Set keys=this.backgroundRangeMarkers.keySet();\n  Iterator iterator=keys.iterator();\n  while (iterator.hasNext()) {\n    Integer key=(Integer)iterator.next();\n    clearRangeMarkers(key.intValue());\n  }\n  this.backgroundRangeMarkers.clear();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1633/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:10:03.781766136 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1633/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:10:03.785766432 -0500\n@@ -3147,10 +3147,12 @@\n         int rangeIndex = this.rangeAxes.indexOf(axis);\n         if (rangeIndex >= 0) {\n             mappedDatasets.addAll(datasetsMappedToRangeAxis(rangeIndex));\n-        }\n-        else if (axis == getRangeAxis()) {\n-            mappedDatasets.addAll(datasetsMappedToRangeAxis(0));\n-        }\n+        } else {\n+\t\t\tmappedDatasets.addAll(datasetsMappedToRangeAxis(0));\n+\t\t\tif (axis == getRangeAxis()) {\n+\t\t\t\tmappedDatasets.addAll(datasetsMappedToRangeAxis(0));\n+\t\t\t}\n+\t\t}\n \n         // iterate through the datasets that map to the axis and get the union \n         // of the ranges.\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 3151, 
          "faulty": "if (axis == getRangeAxis()) {\n  mappedDatasets.addAll(datasetsMappedToRangeAxis(0));\n}", 
          "type": "InsertBefore", 
          "seed": "mappedDatasets.addAll(datasetsMappedToRangeAxis(0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1293/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:59:32.828434743 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1293/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:59:32.832435046 -0500\n@@ -936,7 +936,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n@@ -1842,7 +1841,8 @@\n         for (int axisIndex = 0; axisIndex < count; axisIndex++) {\n             ValueAxis yAxis = getRangeAxis(axisIndex);\n             if (yAxis != null) {\n-                yAxis.configure();\n+                yAxis.addChangeListener(this);\n+\t\t\t\tyAxis.configure();\n             }\n         }\n         if (getParent() != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1845, 
          "faulty": "yAxis.configure();", 
          "type": "InsertBefore", 
          "seed": "yAxis.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1290/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:59:28.860133686 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1290/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:59:28.864133990 -0500\n@@ -933,7 +933,6 @@\n         this.rangeAxes.set(index, axis);\n         if (axis != null) {\n             axis.configure();\n-            axis.addChangeListener(this);\n         }\n         if (notify) {\n             notifyListeners(new PlotChangeEvent(this));\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 936, 
          "faulty": "axis.addChangeListener(this);", 
          "type": "Delete", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1137/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:54:32.569992570 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1137/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:54:32.573992879 -0500\n@@ -923,7 +923,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -936,7 +936,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryDataset existing=(CategoryDataset)this.datasets.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1444/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:04:20.277697935 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1444/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:04:20.281698222 -0500\n@@ -661,7 +661,8 @@\n             axis.configure();\n             axis.addChangeListener(this);\n         }\n-        if (notify) {\n+        this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;\n+\t\tif (notify) {\n             notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n@@ -923,7 +924,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 664, 
          "faulty": "if (notify) {\n  notifyListeners(new PlotChangeEvent(this));\n}", 
          "type": "InsertBefore", 
          "seed": "this.rangeCrosshairPaint=DEFAULT_CROSSHAIR_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryDataset existing=(CategoryDataset)this.datasets.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1590/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:08:52.240759192 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1590/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:08:52.244759467 -0500\n@@ -650,9 +650,6 @@\n      */\n     public void setDomainAxis(int index, CategoryAxis axis, boolean notify) {\n         CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);\n-        if (existing != null) {\n-            existing.removeChangeListener(this);\n-        }\n         if (axis != null) {\n             axis.setPlot(this);\n         }\n@@ -936,7 +933,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 653, 
          "faulty": "if (existing != null) {\n  existing.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "if (this.backgroundDomainMarkers != null) {\n  Set keys=this.backgroundDomainMarkers.keySet();\n  Iterator iterator=keys.iterator();\n  while (iterator.hasNext()) {\n    Integer key=(Integer)iterator.next();\n    clearDomainMarkers(key.intValue());\n  }\n  this.backgroundDomainMarkers.clear();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "if (this.foregroundRangeMarkers != null) {\n  Set keys=this.foregroundRangeMarkers.keySet();\n  Iterator iterator=keys.iterator();\n  while (iterator.hasNext()) {\n    Integer key=(Integer)iterator.next();\n    clearRangeMarkers(key.intValue());\n  }\n  this.foregroundRangeMarkers.clear();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1628/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:55.817178772 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1628/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:55.821179067 -0500\n@@ -936,7 +936,8 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n+            this.annotations = new java.util.ArrayList();\n+\t\t\tnotifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "InsertBefore", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1580/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:08:34.395533207 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1580/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:08:34.395533207 -0500\n@@ -637,7 +637,8 @@\n      * @see #getDomainAxis(int)\n      */\n     public void setDomainAxis(int index, CategoryAxis axis) {\n-        setDomainAxis(index, axis, true);\n+        setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT, false);\n+\t\tsetDomainAxis(index, axis, true);\n     }\n  \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 640, 
          "faulty": "setDomainAxis(index,axis,true);", 
          "type": "InsertBefore", 
          "seed": "setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT,false);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1219/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:57:09.933862039 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1219/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:57:09.937862335 -0500\n@@ -654,8 +654,9 @@\n             existing.removeChangeListener(this);\n         }\n         if (axis != null) {\n-            axis.setPlot(this);\n-        }\n+\t\t\taxis.configure();\n+\t\t\taxis.addChangeListener(this);\n+\t\t}\n         this.domainAxes.set(index, axis);\n         if (axis != null) {\n             axis.configure();\n@@ -923,7 +924,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        ValueAxis existing = getRangeAxis(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -936,7 +937,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 656, 
          "faulty": "if (axis != null) {\n  axis.setPlot(this);\n}", 
          "type": "Replace", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "if (this.foregroundRangeMarkers != null) {\n  Set keys=this.foregroundRangeMarkers.keySet();\n  Iterator iterator=keys.iterator();\n  while (iterator.hasNext()) {\n    Integer key=(Integer)iterator.next();\n    clearRangeMarkers(key.intValue());\n  }\n  this.foregroundRangeMarkers.clear();\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "ValueAxis existing=getRangeAxis(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1606/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:15.850376825 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1606/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:15.850376825 -0500\n@@ -932,7 +932,8 @@\n         }\n         this.rangeAxes.set(index, axis);\n         if (axis != null) {\n-            axis.configure();\n+            this.backgroundDomainMarkers = new HashMap();\n+\t\t\taxis.configure();\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 935, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "this.backgroundDomainMarkers=new HashMap();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1504/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:06:11.161576352 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1504/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:06:11.165576633 -0500\n@@ -923,7 +923,8 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryItemRenderer existing = (CategoryItemRenderer) this.renderers\n+\t\t\t\t.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -932,7 +933,8 @@\n         }\n         this.rangeAxes.set(index, axis);\n         if (axis != null) {\n-            axis.configure();\n+            axis.setPlot(this);\n+\t\t\taxis.configure();\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 935, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "axis.setPlot(this);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1408/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:03:13.708880357 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1408/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:03:13.712880648 -0500\n@@ -923,7 +923,8 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryItemRenderer existing = (CategoryItemRenderer) this.renderers\n+\t\t\t\t.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -1131,7 +1132,11 @@\n         for (int i = 0; i < this.rangeAxes.size(); i++) {\n             ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);\n             if (axis != null) {\n-                axis.configure();\n+                if (axis != null) {\n+\t\t\t\t\taxis.configure();\n+\t\t\t\t\taxis.addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\taxis.configure();\n             }\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1134, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1604/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:09:13.858240520 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1604/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:09:13.862240794 -0500\n@@ -971,13 +971,7 @@\n      */\n     public int getRangeAxisIndex(ValueAxis axis) {\n         int result = this.rangeAxes.indexOf(axis);\n-        if (result < 0) { // try the parent plot\n-            Plot parent = getParent();\n-            if (parent instanceof CategoryPlot) {\n-                CategoryPlot p = (CategoryPlot) parent;\n-                result = p.getRangeAxisIndex(axis);\n-            }\n-        }\n+        this.weight = weight;\n         return result;\n     }\n     \n@@ -1131,7 +1125,10 @@\n         for (int i = 0; i < this.rangeAxes.size(); i++) {\n             ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);\n             if (axis != null) {\n-                axis.configure();\n+                if (axis != null) {\n+\t\t\t\t\taxis.configure();\n+\t\t\t\t\taxis.addChangeListener(this);\n+\t\t\t\t}\n             }\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 974, 
          "faulty": "if (result < 0) {\n  Plot parent=getParent();\n  if (parent instanceof CategoryPlot) {\n    CategoryPlot p=(CategoryPlot)parent;\n    result=p.getRangeAxisIndex(axis);\n  }\n}", 
          "type": "Replace", 
          "seed": "this.weight=weight;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1134, 
          "faulty": "axis.configure();", 
          "type": "Replace", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1462/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:04:52.279989299 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1462/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:04:52.279989299 -0500\n@@ -659,7 +659,8 @@\n         this.domainAxes.set(index, axis);\n         if (axis != null) {\n             axis.configure();\n-            axis.addChangeListener(this);\n+            this.orientation = orientation;\n+\t\t\taxis.addChangeListener(this);\n         }\n         if (notify) {\n             notifyListeners(new PlotChangeEvent(this));\n@@ -1131,7 +1132,11 @@\n         for (int i = 0; i < this.rangeAxes.size(); i++) {\n             ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);\n             if (axis != null) {\n-                axis.configure();\n+                if (axis != null) {\n+\t\t\t\t\taxis.configure();\n+\t\t\t\t\taxis.addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\taxis.configure();\n             }\n         }\n     }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 1134, 
          "faulty": "axis.configure();", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.configure();\n  axis.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 662, 
          "faulty": "axis.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.orientation=orientation;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1519/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:06:38.879520783 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1519/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:06:38.883521062 -0500\n@@ -649,7 +649,8 @@\n      * @param notify  notify listeners?\n      */\n     public void setDomainAxis(int index, CategoryAxis axis, boolean notify) {\n-        CategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);\n+        this.orientation = orientation;\n+\t\tCategoryAxis existing = (CategoryAxis) this.domainAxes.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n@@ -661,9 +662,13 @@\n             axis.configure();\n             axis.addChangeListener(this);\n         }\n-        if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n-        }\n+        for (int i = 0; i < this.domainAxes.size(); i++) {\n+\t\t\tCategoryAxis xAxis = (CategoryAxis) this.domainAxes.get(i);\n+\t\t\tif (xAxis != null) {\n+\t\t\t\txAxis.setPlot(this);\n+\t\t\t\txAxis.addChangeListener(this);\n+\t\t\t}\n+\t\t}\n     }\n \n     /**\n@@ -936,7 +941,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n@@ -971,13 +975,6 @@\n      */\n     public int getRangeAxisIndex(ValueAxis axis) {\n         int result = this.rangeAxes.indexOf(axis);\n-        if (result < 0) { // try the parent plot\n-            Plot parent = getParent();\n-            if (parent instanceof CategoryPlot) {\n-                CategoryPlot p = (CategoryPlot) parent;\n-                result = p.getRangeAxisIndex(axis);\n-            }\n-        }\n         return result;\n     }\n     \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 974, 
          "faulty": "if (result < 0) {\n  Plot parent=getParent();\n  if (parent instanceof CategoryPlot) {\n    CategoryPlot p=(CategoryPlot)parent;\n    result=p.getRangeAxisIndex(axis);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.rangeCrosshairVisible=DEFAULT_CROSSHAIR_VISIBLE;"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 664, 
          "faulty": "if (notify) {\n  notifyListeners(new PlotChangeEvent(this));\n}", 
          "type": "Replace", 
          "seed": "for (int i=0; i < this.domainAxes.size(); i++) {\n  CategoryAxis xAxis=(CategoryAxis)this.domainAxes.get(i);\n  if (xAxis != null) {\n    xAxis.setPlot(this);\n    xAxis.addChangeListener(this);\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 652, 
          "faulty": "CategoryAxis existing=(CategoryAxis)this.domainAxes.get(index);", 
          "type": "InsertBefore", 
          "seed": "this.orientation=orientation;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.axisOffset=new RectangleInsets(4.0,4.0,4.0,4.0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1401/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:03:01.587995164 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1401/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:03:01.631998382 -0500\n@@ -923,7 +923,7 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryDataset existing = (CategoryDataset) this.datasets.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryDataset existing=(CategoryDataset)this.datasets.get(index);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1103/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:53:27.353490961 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1103/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:53:27.357491233 -0500\n@@ -936,7 +936,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1553/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:07:42.691964043 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1553/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:07:42.695964319 -0500\n@@ -653,9 +653,7 @@\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n-        if (axis != null) {\n-            axis.setPlot(this);\n-        }\n+        this.mapDatasetToDomainAxis(0, 0);\n         this.domainAxes.set(index, axis);\n         if (axis != null) {\n             axis.configure();\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 656, 
          "faulty": "if (axis != null) {\n  axis.setPlot(this);\n}", 
          "type": "Replace", 
          "seed": "this.mapDatasetToDomainAxis(0,0);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1311/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:00:06.826999246 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1311/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 09:00:06.826999246 -0500\n@@ -936,7 +936,6 @@\n             axis.addChangeListener(this);\n         }\n         if (notify) {\n-            notifyListeners(new PlotChangeEvent(this));\n         }\n     }\n \n@@ -971,7 +970,10 @@\n      */\n     public int getRangeAxisIndex(ValueAxis axis) {\n         int result = this.rangeAxes.indexOf(axis);\n-        if (result < 0) { // try the parent plot\n+        if (axis != null) {\n+\t\t\taxis.setPlot(this);\n+\t\t}\n+\t\tif (result < 0) { // try the parent plot\n             Plot parent = getParent();\n             if (parent instanceof CategoryPlot) {\n                 CategoryPlot p = (CategoryPlot) parent;\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 974, 
          "faulty": "if (result < 0) {\n  Plot parent=getParent();\n  if (parent instanceof CategoryPlot) {\n    CategoryPlot p=(CategoryPlot)parent;\n    result=p.getRangeAxisIndex(axis);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (axis != null) {\n  axis.setPlot(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 939, 
          "faulty": "notifyListeners(new PlotChangeEvent(this));", 
          "type": "Delete", 
          "seed": "this.annotations=new java.util.ArrayList();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1361/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 09:01:44.198278995 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:14:04.945381176 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1159/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/util/AbstractObjectList.java\t2018-12-01 08:55:14.621222536 -0500\n@@ -161,7 +161,10 @@\n                 return (index);\n             }\n         }\n-        return -1;\n+        if (object == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'object' argument.\");\n+\t\t}\n+\t\treturn -1;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:14:09.741381399 -0500\n+++ /tmp/Arja_Defects4J_Chart_19/patches_pitz/Patch_1159/patched/tmp/Arja_Defects4J_Chart_19/source/org/jfree/chart/plot/CategoryPlot.java\t2018-12-01 08:55:14.625222841 -0500\n@@ -923,7 +923,8 @@\n      * @param notify  notify listeners?\n      */\n     public void setRangeAxis(int index, ValueAxis axis, boolean notify) {\n-        ValueAxis existing = (ValueAxis) this.rangeAxes.get(index);\n+        CategoryItemRenderer existing = (CategoryItemRenderer) this.renderers\n+\t\t\t\t.get(index);\n         if (existing != null) {\n             existing.removeChangeListener(this);\n         }\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/util/AbstractObjectList.java", 
          "line": 164, 
          "faulty": "return -1;", 
          "type": "InsertBefore", 
          "seed": "if (object == null) {\n  throw new IllegalArgumentException(\"Null 'object' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/CategoryPlot.java", 
          "line": 926, 
          "faulty": "ValueAxis existing=(ValueAxis)this.rangeAxes.get(index);", 
          "type": "Replace", 
          "seed": "CategoryItemRenderer existing=(CategoryItemRenderer)this.renderers.get(index);"
        }
      ]
    }
  ]
}