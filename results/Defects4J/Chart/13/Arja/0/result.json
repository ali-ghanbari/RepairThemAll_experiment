{
  "repair_end": "2018-12-01 14:28:22.050680", 
  "repair_begin": "2018-12-01 14:16:37.626999", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_622/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:28.736345297 -0500\n@@ -276,7 +276,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        w[1] = w[0];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_454/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:17.244670657 -0500\n@@ -149,7 +149,15 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -309,9 +317,11 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        h[4] = h[2];\n+\t\th[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1234/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:24.445192780 -0500\n@@ -311,12 +311,12 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.centerBlock.arrange(g2, c4);\n-            w[4] = size.width;\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 319, 
          "faulty": "w[4]=size.width;", 
          "type": "Delete", 
          "seed": "if (this.topBlock != null) {\n  Size2D size=this.topBlock.arrange(g2,RectangleConstraint.NONE);\n  w[0]=size.width;\n  h[0]=size.height;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1578/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:45.739179113 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -311,7 +318,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +448,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.centerBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_457/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:18.376680578 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +422,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1607/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:53.331364621 -0500\n@@ -289,7 +289,8 @@\n             w[1] = size.width;\n             h[1] = size.height;\n         }\n-        RectangleConstraint c2 = new RectangleConstraint(0.0,\n+        h[4] = h[2];\n+\t\tRectangleConstraint c2 = new RectangleConstraint(0.0,\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,7 +426,8 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n                     new Range(0.0, constraint.getHeight()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 292, 
          "faulty": "RectangleConstraint c2=new RectangleConstraint(0.0,new Range(0.0,width),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1936/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:11.293269537 -0500\n@@ -149,7 +149,15 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +431,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_889/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:06.889995388 -0500\n@@ -421,7 +421,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_620/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:28.100339297 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -298,13 +299,13 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[1] = w[0];\n             h[3] = size.height;\n         }\n \n@@ -440,7 +441,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "Replace", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1706/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:18.143970890 -0500\n@@ -304,14 +304,15 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[1] = w[0];\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "Replace", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_331/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:49.128725662 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -433,13 +434,6 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n         h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Delete", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1685/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:13.259851552 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +423,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1629/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:58.611493635 -0500\n@@ -421,7 +421,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_987/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:27.539802659 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +434,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1296/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:37.853520398 -0500\n@@ -299,7 +299,8 @@\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n+            h[3] = h[2];\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +434,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 302, 
          "faulty": "RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_547/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:56.452430215 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -312,7 +313,8 @@\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n-            RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n+            this.leftBlock = null;\n+\t\t\tRectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.centerBlock.arrange(g2, c4);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 315, 
          "faulty": "RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1386/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:59.062038606 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_607/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:20.368289528 -0500\n@@ -292,7 +292,8 @@\n         RectangleConstraint c2 = new RectangleConstraint(0.0,\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n-        if (this.leftBlock != null) {\n+        h[2] = Math.max(h[2], h[3]);\n+\t\tif (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 295, 
          "faulty": "if (this.leftBlock != null) {\n  Size2D size=this.leftBlock.arrange(g2,c2);\n  w[2]=size.width;\n  h[2]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1460/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:15.094430341 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,14 +426,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        this.bottomBlock = null;\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1788/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:36.976431042 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +425,8 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n+        w[4] = constraint.getWidth() - w[3] - w[2];\n+\t\tw[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n@@ -440,7 +443,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "InsertBefore", 
          "seed": "w[4]=constraint.getWidth() - w[3] - w[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_505/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:34.344873269 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Delete", 
          "seed": "if (w == LengthConstraintType.NONE) {\n  if (h == LengthConstraintType.NONE) {\n    return arrangeNN(container,g2);\n  }\n else   if (h == LengthConstraintType.FIXED) {\n    throw new RuntimeException(\"Not yet implemented.\");\n  }\n else   if (h == LengthConstraintType.RANGE) {\n    throw new RuntimeException(\"Not yet implemented.\");\n  }\n}\n else if (w == LengthConstraintType.FIXED) {\n  if (h == LengthConstraintType.NONE) {\n    return arrangeFN(container,g2,constraint);\n  }\n else   if (h == LengthConstraintType.FIXED) {\n    return arrangeFF(container,g2,constraint);\n  }\n else   if (h == LengthConstraintType.RANGE) {\n    return arrangeFR(container,g2,constraint);\n  }\n}\n else if (w == LengthConstraintType.RANGE) {\n  if (h == LengthConstraintType.NONE) {\n    throw new RuntimeException(\"Not yet implemented.\");\n  }\n else   if (h == LengthConstraintType.FIXED) {\n    throw new RuntimeException(\"Not yet implemented.\");\n  }\n else   if (h == LengthConstraintType.RANGE) {\n    throw new RuntimeException(\"Not yet implemented.\");\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1891/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:02.041043469 -0500\n@@ -297,7 +297,8 @@\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n-        if (this.rightBlock != null) {\n+        w[1] = w[0];\n+\t\tif (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 300, 
          "faulty": "if (this.rightBlock != null) {\n  double maxW=Math.max(width - w[2],0.0);\n  RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.rightBlock.arrange(g2,c3);\n  w[3]=size.width;\n  h[3]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1040/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:39.124085580 -0500\n@@ -309,9 +309,11 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        this.topBlock = null;\n+\t\th[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_559/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:02.108344042 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.centerBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1187/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:10.860860861 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,15 +424,7 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[3] = h[2];\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "w[4]=constraint.getWidth() - w[3] - w[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1557/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:40.335047069 -0500\n@@ -308,10 +308,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        w[1] = w[0];\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1427/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:08.142260472 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.topBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1082/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:47.976301776 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -308,7 +309,8 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.leftBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n@@ -433,7 +435,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1324/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:25:43.669662510 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1324/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:43.669662510 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "this.id=id;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_105/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:39.495759594 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -433,13 +434,6 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n         h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1553/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:39.623029672 -0500\n@@ -421,7 +421,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n@@ -433,7 +434,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_508/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:21:35.584892407 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_508/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:35.612892840 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1592/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:26:49.139262191 -0500\n@@ -435,7 +435,7 @@\n \n     private Range trimToContentWidth(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.id = null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1592/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:49.139262191 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -320,7 +327,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n@@ -422,7 +429,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n@@ -433,14 +441,15 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        h[2] = constraint.getHeight() - h[1] - h[0];\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        h[2] = Math.max(h[2], h[3]);\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 438, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "this.id=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1140/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:00.480607231 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -293,7 +294,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +313,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_242/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:29.008949996 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,14 +425,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[2] = Math.max(h[2], h[3]);\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1349/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:50.553830717 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -284,7 +291,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -433,7 +442,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        h[2] = constraint.getHeight() - h[1] - h[0];\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_692/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:00.986805578 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +423,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_730/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:19.097046995 -0500\n@@ -294,7 +294,7 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n+            h[3] = size.height;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Replace", 
          "seed": "h[3]=size.height;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1453/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:13.714396621 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.leftBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1536/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:35.850937504 -0500\n@@ -292,7 +292,8 @@\n         RectangleConstraint c2 = new RectangleConstraint(0.0,\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n-        if (this.leftBlock != null) {\n+        this.bottomBlock = null;\n+\t\tif (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -320,7 +322,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 295, 
          "faulty": "if (this.leftBlock != null) {\n  Size2D size=this.leftBlock.arrange(g2,c2);\n  w[2]=size.width;\n  h[2]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_474/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:23.968736300 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,13 +312,15 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.centerBlock.arrange(g2, c4);\n             w[4] = size.width;\n-            h[4] = size.height;\n+            w[1] = size.width;\n+\t\t\th[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 320, 
          "faulty": "h[4]=size.height;", 
          "type": "InsertBefore", 
          "seed": "w[1]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1308/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:25:40.433583440 -0500\n@@ -435,7 +435,8 @@\n \n     private Range trimToContentWidth(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.id = null;\n+\t\t\treturn null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1308/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:40.433583440 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 438, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "this.id=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_528/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:44.352772937 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1484/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:22.638614675 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,14 +426,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[3] = h[2];\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_639/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:37.116435690 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -276,7 +277,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        w[1] = w[0];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -311,7 +313,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +425,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_85/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:29.237576190 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -315,9 +316,11 @@\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n-            Size2D size = this.centerBlock.arrange(g2, c4);\n+            h[2] = Math.max(h[2], h[3]);\n+\t\t\tSize2D size = this.centerBlock.arrange(g2, c4);\n             w[4] = size.width;\n-            h[4] = size.height;\n+            w[3] = size.width;\n+\t\t\th[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n@@ -424,14 +427,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        this.topBlock = null;\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 320, 
          "faulty": "h[4]=size.height;", 
          "type": "InsertBefore", 
          "seed": "w[3]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 318, 
          "faulty": "Size2D size=this.centerBlock.arrange(g2,c4);", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_964/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:22.676128331 -0500\n@@ -293,7 +293,7 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            Size2D size = this.leftBlock.arrange(g2, RectangleConstraint.NONE);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "Replace", 
          "seed": "Size2D size=this.leftBlock.arrange(g2,RectangleConstraint.NONE);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_169/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:04.639135792 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -316,7 +317,6 @@\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.centerBlock.arrange(g2, c4);\n-            w[4] = size.width;\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n@@ -423,7 +423,8 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n+        h[2] = Math.max(h[2], h[3]);\n+\t\tw[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n@@ -432,7 +433,6 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 319, 
          "faulty": "w[4]=size.width;", 
          "type": "Delete", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Delete", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_836/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:55.327514949 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_335/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:49.780716164 -0500\n@@ -298,7 +298,8 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            h[4] = h[2];\n+\t\t\tdouble maxW = Math.max(width - w[2], 0.0);\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1409/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:03.994159117 -0500\n@@ -284,7 +284,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +434,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_549/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:56.908421749 -0500\n@@ -308,10 +308,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_690/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:00.650752680 -0500\n@@ -311,11 +311,13 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n-            Size2D size = this.centerBlock.arrange(g2, c4);\n+            Size2D size = this.centerBlock\n+\t\t\t\t\t.arrange(g2, RectangleConstraint.NONE);\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n@@ -422,7 +424,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 318, 
          "faulty": "Size2D size=this.centerBlock.arrange(g2,c4);", 
          "type": "Replace", 
          "seed": "Size2D size=this.centerBlock.arrange(g2,RectangleConstraint.NONE);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_333/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:49.500720242 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        w[0] = constraint.getWidth();\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "w[0]=constraint.getWidth();"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_363/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:56.348644906 -0500\n@@ -294,7 +294,6 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -311,7 +310,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Delete", 
          "seed": "h[3]=size.height;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_71/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:22.976972268 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -433,14 +434,6 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1636/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:00.007527746 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n@@ -440,7 +442,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_310/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:20:43.636830966 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_310/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:43.644830778 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -440,7 +441,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "if (bounds == null) {\n  throw new IllegalArgumentException(\"Null 'bounds' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1367/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:54.289922005 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_954/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:20.572316058 -0500\n@@ -308,7 +308,8 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.leftBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1106/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:52.868421255 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.topBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.centerBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n@@ -424,14 +426,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[3] = h[2];\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n@@ -440,7 +435,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_801/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:46.011035072 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -440,7 +441,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "w[4]=constraint.getWidth() - w[3] - w[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1950/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:16.697401582 -0500\n@@ -304,14 +304,16 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[0] = size.width;\n+\t\t\tw[3] = size.width;\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,7 +426,8 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n                     new Range(0.0, constraint.getHeight()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "InsertBefore", 
          "seed": "w[0]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_384/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:00.888621978 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1609/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:53.711373905 -0500\n@@ -299,7 +299,8 @@\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n+            h[3] = h[2];\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +442,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 302, 
          "faulty": "RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1747/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:27.668203605 -0500\n@@ -422,7 +422,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.leftBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1501/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:26.370705865 -0500\n@@ -304,14 +304,16 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[1] = w[0];\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "Replace", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_382/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:00.656622573 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        h[2] = Math.max(h[2], h[3]);\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_500/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:32.592847639 -0500\n@@ -149,7 +149,15 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +430,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_269/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:34.661104771 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +424,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "w[4]=constraint.getWidth() - w[3] - w[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_484/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:27.880783748 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -320,7 +321,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1421/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:06.890229880 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,9 +422,9 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1157/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:04.176697541 -0500\n@@ -308,10 +308,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +424,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_442/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:12.920641439 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_143/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:58.642514478 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -304,14 +305,16 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[0] = size.width;\n+\t\t\tw[3] = size.width;\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "InsertBefore", 
          "seed": "w[0]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1443/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:11.618345407 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -320,7 +321,8 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        h[2] = Math.max(h[2], h[3]);\n+\t\treturn arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1273/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:33.021402331 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -293,12 +294,12 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            Size2D size = this.leftBlock.arrange(g2, RectangleConstraint.NONE);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -432,7 +433,8 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n+\t\tw[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "Replace", 
          "seed": "Size2D size=this.leftBlock.arrange(g2,RectangleConstraint.NONE);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1780/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:35.316390480 -0500\n@@ -147,13 +147,21 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tif (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +328,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.bottomBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_651/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:22:43.700525951 -0500\n@@ -450,7 +450,8 @@\n     \n     private Range trimToContentHeight(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.height = 0.0;\n+\t\t\treturn null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_651/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:43.708526067 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 453, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "this.height=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_7/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:18:44.612971393 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_611/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:21.936296482 -0500\n@@ -440,7 +440,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_967/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:23.136089038 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        h[2] = Math.max(h[2], h[3]);\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_230/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:26.324790811 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +433,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1957/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:28:18.069435106 -0500\n@@ -440,7 +440,7 @@\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n         if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+            return new Range(lowerBound, upperBound);   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1957/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:18.069435106 -0500\n@@ -299,7 +299,8 @@\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n+            h[3] = h[2];\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Replace", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 302, 
          "faulty": "RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1794/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:38.424466423 -0500\n@@ -294,7 +294,6 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -309,9 +308,11 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        h[4] = h[2];\n+\t\th[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -320,7 +321,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Delete", 
          "seed": "h[3]=size.height;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1218/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:20.969107846 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.rightBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1959/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:18.301440775 -0500\n@@ -284,7 +284,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -294,7 +295,6 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Delete", 
          "seed": "w[1]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_402/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:04.692616283 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,8 +312,10 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n-            RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n+            this.leftBlock = null;\n+\t\t\tRectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.centerBlock.arrange(g2, c4);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 315, 
          "faulty": "RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_770/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:36.346444437 -0500\n@@ -284,7 +284,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        this.topBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_605/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:19.900287557 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return arrange(container,g2,new RectangleConstraint(width,height));"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_308/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:43.320838412 -0500\n@@ -309,9 +309,8 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n-\n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "Delete", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1970/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:20.585496583 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -298,7 +299,8 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            h[4] = h[2];\n+\t\t\tdouble maxW = Math.max(width - w[2], 0.0);\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -308,7 +310,8 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.leftBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1604/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:52.227337645 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.bottomBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1518/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:29.958793536 -0500\n@@ -308,10 +308,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.bottomBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_284/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:37.273010261 -0500\n@@ -276,7 +276,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        w[1] = w[0];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -293,7 +294,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +313,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +425,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1648/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:03.579615025 -0500\n@@ -319,7 +319,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.leftBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_2/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:18:41.932971332 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1615/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:54.991405182 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -294,7 +295,7 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n+            w[3] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Replace", 
          "seed": "w[3]=size.width;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_356/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:54.952655571 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -433,7 +434,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        h[2] = constraint.getHeight() - h[1] - h[0];\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_723/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:16.108743681 -0500\n@@ -298,7 +298,7 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_891/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:24:07.125958594 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_891/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:07.129957979 -0500\n@@ -304,14 +304,16 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[0] = size.width;\n+\t\t\tw[3] = size.width;\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "InsertBefore", 
          "seed": "w[0]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1064/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:44.032205450 -0500\n@@ -279,7 +279,8 @@\n         RectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n-        if (this.topBlock != null) {\n+        h[2] = Math.max(h[2], h[3]);\n+\t\tif (this.topBlock != null) {\n             Size2D size = this.topBlock.arrange(g2, c1);\n             w[0] = size.width;\n             h[0] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +425,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 282, 
          "faulty": "if (this.topBlock != null) {\n  Size2D size=this.topBlock.arrange(g2,c1);\n  w[0]=size.width;\n  h[0]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1920/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:28:08.069190761 -0500\n@@ -440,7 +440,7 @@\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n         if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+            return new Range(lowerBound, upperBound);   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1920/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:08.073190858 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +424,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Replace", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_424/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:09.376624434 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -423,7 +424,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n@@ -433,7 +433,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1904/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:04.789110615 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -299,7 +306,8 @@\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n+            h[3] = h[2];\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 302, 
          "faulty": "RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_429/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:10.116627089 -0500\n@@ -293,12 +293,13 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_790/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:43.634899248 -0500\n@@ -289,7 +289,8 @@\n             w[1] = size.width;\n             h[1] = size.height;\n         }\n-        RectangleConstraint c2 = new RectangleConstraint(0.0,\n+        h[4] = h[2];\n+\t\tRectangleConstraint c2 = new RectangleConstraint(0.0,\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 292, 
          "faulty": "RectangleConstraint c2=new RectangleConstraint(0.0,new Range(0.0,width),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1046/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:40.076108831 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        h[2] = Math.max(h[2], h[3]);\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1338/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:46.793738843 -0500\n@@ -293,7 +293,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +434,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1764/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:31.776303982 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_465/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:20.120696150 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +434,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_415/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:21:07.504619507 -0500\n@@ -435,7 +435,8 @@\n \n     private Range trimToContentWidth(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.margin = RectangleInsets.ZERO_INSETS;\n+\t\t\treturn null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_415/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:07.504619507 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 438, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "this.margin=RectangleInsets.ZERO_INSETS;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_257/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:32.313133845 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,14 +425,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[3] = h[2];\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1365/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:54.061916433 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -308,10 +315,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_778/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:23:38.206567066 -0500\n@@ -440,7 +440,7 @@\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n         if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+            return new Range(lowerBound, upperBound);   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_778/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:38.206567066 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Replace", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1403/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:02.674126864 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -293,7 +294,8 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            this.topBlock = null;\n+\t\t\tSize2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -311,7 +313,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_343/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:51.540692600 -0500\n@@ -309,9 +309,11 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        h[4] = h[2];\n+\t\th[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_426/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:09.636625328 -0500\n@@ -149,7 +149,15 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1505/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:27.054722578 -0500\n@@ -276,7 +276,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        h[3] = h[2];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1284/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:35.321458530 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +422,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n@@ -432,7 +434,8 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n+\t\tw[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_728/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:23:18.356973689 -0500\n@@ -435,7 +435,8 @@\n \n     private Range trimToContentWidth(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.width = 0.0;\n+\t\t\treturn null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_728/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:18.364974485 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 438, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "this.width=0.0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_279/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:36.333043141 -0500\n@@ -299,7 +299,8 @@\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n-            RectangleConstraint c3 = new RectangleConstraint(0.0,\n+            h[3] = h[2];\n+\t\t\tRectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 302, 
          "faulty": "RectangleConstraint c3=new RectangleConstraint(0.0,new Range(Math.min(w[2],maxW),maxW),LengthConstraintType.RANGE,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_928/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:15.032892289 -0500\n@@ -294,7 +294,6 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -320,7 +319,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Delete", 
          "seed": "w[4]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_659/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:47.516584546 -0500\n@@ -308,10 +308,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.leftBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_80/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:27.433121103 -0500\n@@ -440,7 +440,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1879/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:27:59.712986585 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1879/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:59.712986585 -0500\n@@ -298,7 +298,7 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.topBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "this.height=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_313/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:44.508811424 -0500\n@@ -320,7 +320,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_65/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:20.500972212 -0500\n@@ -423,7 +423,7 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n+        this.rightBlock = null;\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n@@ -432,7 +432,8 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.centerBlock = null;\n+\t\tw[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Replace", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1042/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:39.384091930 -0500\n@@ -147,13 +147,21 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tif (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -294,11 +302,12 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n+            w[3] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            h[4] = h[2];\n+\t\t\tdouble maxW = Math.max(width - w[2], 0.0);\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -308,7 +317,8 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.leftBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Replace", 
          "seed": "w[3]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_904/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:09.737570496 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.rightBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1533/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:35.394926362 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +433,7 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n@@ -440,7 +441,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "Replace", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1883/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:00.397003299 -0500\n@@ -298,7 +298,7 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -309,9 +309,10 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        this.bottomBlock = null;\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "Replace", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1914/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:28:06.901162221 -0500\n@@ -440,7 +440,7 @@\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n         if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+            this.height = height;   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1914/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:06.901162221 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Replace", 
          "seed": "this.height=height;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_895/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:07.833849837 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -422,7 +423,8 @@\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n-        double[] h = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 425, 
          "faulty": "double[] h=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_277/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:36.101051383 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1088/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:49.128329911 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.topBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_271/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:34.893095621 -0500\n@@ -276,7 +276,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        w[1] = w[0];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +425,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_511/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:36.376904631 -0500\n@@ -149,7 +149,14 @@\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n             }\n             else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n+                if (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n             }\n             else if (h == LengthConstraintType.RANGE) {\n                 contentSize = arrangeFR(container, g2, constraint);\n@@ -311,7 +318,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 152, 
          "faulty": "contentSize=arrangeFF(container,g2,constraint);", 
          "type": "Replace", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1246/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:27.017255626 -0500\n@@ -292,7 +292,8 @@\n         RectangleConstraint c2 = new RectangleConstraint(0.0,\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n-        if (this.leftBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n             h[2] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 295, 
          "faulty": "if (this.leftBlock != null) {\n  Size2D size=this.leftBlock.arrange(g2,c2);\n  w[2]=size.width;\n  h[2]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1621/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:26:56.779448871 -0500\n@@ -435,7 +435,9 @@\n \n     private Range trimToContentWidth(Range r) {\n         if (r == null) {\n-            return null;   \n+            if (r == null) {\n+\t\t\t\treturn null;\n+\t\t\t}   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1621/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:56.787449066 -0500\n@@ -308,7 +308,8 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        h[4] = h[2];\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n         if (this.centerBlock != null) {\n@@ -440,7 +441,7 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.leftBlock = null;\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 438, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "if (r == null) {\n  return null;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1860/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:55.544884742 -0500\n@@ -303,7 +303,7 @@\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n-            Size2D size = this.rightBlock.arrange(g2, c3);\n+            Size2D size = this.rightBlock.arrange(g2, RectangleConstraint.NONE);\n             w[3] = size.width;\n             h[3] = size.height;\n         }\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 306, 
          "faulty": "Size2D size=this.rightBlock.arrange(g2,c3);", 
          "type": "Replace", 
          "seed": "Size2D size=this.rightBlock.arrange(g2,RectangleConstraint.NONE);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_576/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:07.760295350 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        w[1] = w[0];\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -320,7 +321,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_869/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:02.522739093 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +424,8 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n+        h[4] = h[2];\n+\t\tw[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_513/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:36.620908398 -0500\n@@ -294,7 +294,6 @@\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n-            w[2] = size.width;\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n@@ -311,7 +310,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -423,7 +423,6 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 297, 
          "faulty": "w[2]=size.width;", 
          "type": "Delete", 
          "seed": "h[3]=size.height;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "Delete", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1462/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:15.346436498 -0500\n@@ -304,14 +304,15 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[1] = w[0];\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "Replace", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_134/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:56.354252604 -0500\n@@ -293,7 +293,7 @@\n                 new Range(0.0, width), LengthConstraintType.RANGE,\n                 0.0, null, LengthConstraintType.NONE);\n         if (this.leftBlock != null) {\n-            Size2D size = this.leftBlock.arrange(g2, c2);\n+            Size2D size = this.leftBlock.arrange(g2, RectangleConstraint.NONE);\n             w[2] = size.width;\n             h[2] = size.height;\n         }\n@@ -423,7 +423,8 @@\n                                RectangleConstraint constraint) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        w[0] = constraint.getWidth();\n+        this.leftBlock = null;\n+\t\tw[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 426, 
          "faulty": "w[0]=constraint.getWidth();", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 296, 
          "faulty": "Size2D size=this.leftBlock.arrange(g2,c2);", 
          "type": "Replace", 
          "seed": "Size2D size=this.leftBlock.arrange(g2,RectangleConstraint.NONE);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1336/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:46.561733174 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_772/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:36.578460082 -0500\n@@ -309,9 +309,8 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n-\n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +318,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.centerBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "Delete", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_857/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:59.971230142 -0500\n@@ -147,13 +147,8 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else\n+\t\t\t\t;\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -320,7 +315,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "Delete", 
          "seed": "return arrangeFF(container,g2,constraint);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_564/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:03.308331362 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.topBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_674/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:53.993611790 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.bottomBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,14 +426,7 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n-            RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0,\n-                    new Range(0.0, constraint.getHeight()),\n-                    LengthConstraintType.RANGE);\n-            Size2D size = this.topBlock.arrange(g2, c1);\n-            h[0] = size.height;\n-        }\n+        h[3] = h[2];\n         w[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "Replace", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_820/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:51.835343619 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -424,7 +425,8 @@\n         double[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n-        if (this.topBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.topBlock != null) {\n             RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0,\n                     new Range(0.0, constraint.getHeight()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 427, 
          "faulty": "if (this.topBlock != null) {\n  RectangleConstraint c1=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight()),LengthConstraintType.RANGE);\n  Size2D size=this.topBlock.arrange(g2,c1);\n  h[0]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1321/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:43.201651074 -0500\n@@ -284,7 +284,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        h[3] = h[2];\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "h[3]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1090/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:49.356335480 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.centerBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n@@ -433,13 +435,6 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n         h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Delete", 
          "seed": "h[2]=constraint.getHeight() - h[1] - h[0];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1001/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:30.563876515 -0500\n@@ -309,9 +309,10 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        this.leftBlock = null;\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "Replace", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_537/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:21:51.208548940 -0500\n@@ -439,8 +439,7 @@\n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n-        if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+        if (r.getLowerBound() > 0.0) {   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_537/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:51.224548515 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Delete", 
          "seed": "return new Range(lowerBound,upperBound);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1203/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:16.260992808 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,8 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        this.centerBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_657/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:46.984576334 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -309,7 +310,8 @@\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        this.topBlock = null;\n+\t\th[3] = h[2];\n \n         if (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_266/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:20:34.189123386 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -276,7 +277,8 @@\n                                double width) {\n         double[] w = new double[5];\n         double[] h = new double[5];\n-        RectangleConstraint c1 = new RectangleConstraint(width, null,\n+        w[1] = w[0];\n+\t\tRectangleConstraint c1 = new RectangleConstraint(width, null,\n                 LengthConstraintType.FIXED, 0.0, null,\n                 LengthConstraintType.NONE);\n         if (this.topBlock != null) {\n@@ -433,13 +435,6 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n         h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 279, 
          "faulty": "RectangleConstraint c1=new RectangleConstraint(width,null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);", 
          "type": "InsertBefore", 
          "seed": "w[1]=w[0];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Delete", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_661/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:48.124594049 -0500\n@@ -147,13 +147,21 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tif (h == LengthConstraintType.NONE) {\n+\t\t\t\t\tcontentSize = arrangeFN(container, g2,\n+\t\t\t\t\t\t\tconstraint.getWidth());\n+\t\t\t\t} else if (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -311,7 +319,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "if (h == LengthConstraintType.NONE) {\n  contentSize=arrangeFN(container,g2,constraint.getWidth());\n}\n else if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_395/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:21:03.256617155 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -440,7 +441,6 @@\n             Size2D size = this.bottomBlock.arrange(g2, c2);\n             h[1] = size.height;\n         }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "Delete", 
          "seed": "h[2]=Math.max(h[2],h[3]);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1569/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:26:43.331120275 -0500\n@@ -450,7 +450,8 @@\n     \n     private Range trimToContentHeight(Range r) {\n         if (r == null) {\n-            return null;   \n+            this.height = 0.0;\n+\t\t\treturn null;   \n         }\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1569/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:43.331120275 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -421,7 +422,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 453, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "this.height=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1395/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:00.926084153 -0500\n@@ -304,14 +304,14 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "Delete", 
          "seed": "w[0]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_580/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:22:09.352287593 -0500\n@@ -304,14 +304,16 @@\n                     LengthConstraintType.RANGE, 0.0, null,\n                     LengthConstraintType.NONE);\n             Size2D size = this.rightBlock.arrange(g2, c3);\n-            w[3] = size.width;\n+            w[0] = size.width;\n+\t\t\tw[3] = size.width;\n             h[3] = size.height;\n         }\n \n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 307, 
          "faulty": "w[3]=size.width;", 
          "type": "InsertBefore", 
          "seed": "w[0]=size.width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1020/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:34.755978898 -0500\n@@ -284,7 +284,8 @@\n             w[0] = size.width;\n             h[0] = size.height;\n         }\n-        if (this.bottomBlock != null) {\n+        this.topBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             Size2D size = this.bottomBlock.arrange(g2, c1);\n             w[1] = size.width;\n             h[1] = size.height;\n@@ -308,10 +309,12 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 287, 
          "faulty": "if (this.bottomBlock != null) {\n  Size2D size=this.bottomBlock.arrange(g2,c1);\n  w[1]=size.width;\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1469/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:26:17.770495728 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -298,7 +299,7 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_934/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:24:16.180762612 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -433,7 +434,8 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n+        this.rightBlock = null;\n+\t\tif (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_139/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:19:57.790418888 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -432,7 +433,8 @@\n             Size2D size = this.topBlock.arrange(g2, c1);\n             h[0] = size.height;\n         }\n-        w[1] = w[0];\n+        this.topBlock = null;\n+\t\tw[1] = w[0];\n         if (this.bottomBlock != null) {\n             RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                     LengthConstraintType.FIXED, 0.0, new Range(0.0,\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 435, 
          "faulty": "w[1]=w[0];", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:16:10.924967886 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1777/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/AbstractBlock.java\t2018-12-01 08:27:34.860379337 -0500\n@@ -440,7 +440,7 @@\n         double lowerBound = 0.0;\n         double upperBound = Double.POSITIVE_INFINITY;\n         if (r.getLowerBound() > 0.0) {\n-            lowerBound = trimToContentWidth(r.getLowerBound());   \n+            this.width = width;   \n         }\n         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {\n             upperBound = trimToContentWidth(r.getUpperBound());\n\n\n--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1777/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:27:34.860379337 -0500\n@@ -320,7 +320,7 @@\n             h[4] = size.height;\n         }\n         double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n-        return arrange(container, g2, new RectangleConstraint(width, height));\n+        return new Size2D(width, height);\n     }\n \n     /**\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/AbstractBlock.java", 
          "line": 443, 
          "faulty": "lowerBound=trimToContentWidth(r.getLowerBound());", 
          "type": "Replace", 
          "seed": "this.width=width;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 323, 
          "faulty": "return arrange(container,g2,new RectangleConstraint(width,height));", 
          "type": "Replace", 
          "seed": "return new Size2D(width,height);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1162/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:25:05.092719923 -0500\n@@ -311,7 +311,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n@@ -319,7 +320,8 @@\n             w[4] = size.width;\n             h[4] = size.height;\n         }\n-        double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n+        this.centerBlock = null;\n+\t\tdouble height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));\n         return arrange(container, g2, new RectangleConstraint(width, height));\n     }\n \n@@ -421,7 +423,8 @@\n      */\n     protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                                RectangleConstraint constraint) {\n-        double[] w = new double[5];\n+        this.bottomBlock = null;\n+\t\tdouble[] w = new double[5];\n         double[] h = new double[5];\n         w[0] = constraint.getWidth();\n         if (this.topBlock != null) {\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 424, 
          "faulty": "double[] w=new double[5];", 
          "type": "InsertBefore", 
          "seed": "this.bottomBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 322, 
          "faulty": "double height=h[0] + h[1] + Math.max(h[2],Math.max(h[3],h[4]));", 
          "type": "InsertBefore", 
          "seed": "this.centerBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_733/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:23:20.725203270 -0500\n@@ -147,13 +147,14 @@\n         else if (w == LengthConstraintType.FIXED) {\n             if (h == LengthConstraintType.NONE) {\n                 contentSize = arrangeFN(container, g2, constraint.getWidth());\n-            }\n-            else if (h == LengthConstraintType.FIXED) {\n-                contentSize = arrangeFF(container, g2, constraint);\n-            }\n-            else if (h == LengthConstraintType.RANGE) {\n-                contentSize = arrangeFR(container, g2, constraint);\n-            }\n+            } else {\n+\t\t\t\tthis.rightBlock = null;\n+\t\t\t\tif (h == LengthConstraintType.FIXED) {\n+\t\t\t\t\tcontentSize = arrangeFF(container, g2, constraint);\n+\t\t\t\t} else if (h == LengthConstraintType.RANGE) {\n+\t\t\t\t\tcontentSize = arrangeFR(container, g2, constraint);\n+\t\t\t\t}\n+\t\t\t}\n         }\n         else if (w == LengthConstraintType.RANGE) {\n             if (h == LengthConstraintType.NONE) {\n@@ -298,7 +299,7 @@\n             h[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n-            double maxW = Math.max(width - w[2], 0.0);\n+            double maxW = 0.0;\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(Math.min(w[2], maxW), maxW),\n                     LengthConstraintType.RANGE, 0.0, null,\n@@ -311,7 +312,8 @@\n         h[2] = Math.max(h[2], h[3]);\n         h[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 301, 
          "faulty": "double maxW=Math.max(width - w[2],0.0);", 
          "type": "Replace", 
          "seed": "double maxW=0.0;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 151, 
          "faulty": "if (h == LengthConstraintType.FIXED) {\n  contentSize=arrangeFF(container,g2,constraint);\n}\n else if (h == LengthConstraintType.RANGE) {\n  contentSize=arrangeFR(container,g2,constraint);\n}", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:16:25.168968211 -0500\n+++ /tmp/Arja_Defects4J_Chart_13/patches_4hrp/Patch_1926/patched/tmp/Arja_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2018-12-01 08:28:09.217218811 -0500\n@@ -308,10 +308,13 @@\n             h[3] = size.height;\n         }\n \n-        h[2] = Math.max(h[2], h[3]);\n-        h[3] = h[2];\n+        this.rightBlock = null;\n+\t\th[2] = Math.max(h[2], h[3]);\n+        h[4] = h[2];\n+\t\th[3] = h[2];\n \n-        if (this.centerBlock != null) {\n+        this.leftBlock = null;\n+\t\tif (this.centerBlock != null) {\n             RectangleConstraint c4 = new RectangleConstraint(width - w[2]\n                     - w[3], null, LengthConstraintType.FIXED, 0.0, null,\n                     LengthConstraintType.NONE);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 312, 
          "faulty": "h[3]=h[2];", 
          "type": "InsertBefore", 
          "seed": "h[4]=h[2];"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 314, 
          "faulty": "if (this.centerBlock != null) {\n  RectangleConstraint c4=new RectangleConstraint(width - w[2] - w[3],null,LengthConstraintType.FIXED,0.0,null,LengthConstraintType.NONE);\n  Size2D size=this.centerBlock.arrange(g2,c4);\n  w[4]=size.width;\n  h[4]=size.height;\n}", 
          "type": "InsertBefore", 
          "seed": "this.leftBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 311, 
          "faulty": "h[2]=Math.max(h[2],h[3]);", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }
      ]
    }
  ]
}