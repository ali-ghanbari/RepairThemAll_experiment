{
  "repair_end": "2018-12-01 14:58:22.800243", 
  "repair_begin": "2018-12-01 14:17:23.980531", 
  "patches": [
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1475/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:15.629613232 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n@@ -959,7 +960,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1475/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:15.629613232 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles.remove(title);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1063/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:40:24.685350447 -0500\n@@ -792,7 +792,10 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        if (this.title != null) {\n+\t\t\tthis.title.removeChangeListener(this);\n+\t\t}\n+\t\tthis.subtitles.remove(title);\n         fireChartChanged();\n     }\n     \n@@ -1496,7 +1499,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.subtitles.remove(title);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1063/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:40:24.689350478 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.title.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1109/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:18.733785017 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -661,7 +660,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1109/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:18.733785017 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_465/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:29:47.163957835 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_465/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:47.167957877 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1979/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:57:42.966794634 -0500\n@@ -642,7 +642,10 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            if (this.title != null) {\n+\t\t\t\tthis.title.addChangeListener(this);\n+\t\t\t}\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n@@ -957,7 +960,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1979/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:57:42.966794634 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.subtitles=new ArrayList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_638/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:55.965790053 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.subtitles = new ArrayList();\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_638/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:55.965790053 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1938/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:55.706344377 -0500\n@@ -568,7 +568,8 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\tif (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n@@ -957,6 +958,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1938/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:55.706344377 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_871/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:00.215843995 -0500\n@@ -1496,7 +1496,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_871/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:00.219844022 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_679/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:37.278108416 -0500\n@@ -573,7 +573,10 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            if (this.title != null) {\n+\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t}\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_679/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:37.278108416 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_531/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:01.292730389 -0500\n@@ -792,7 +792,8 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n+\t\tthis.subtitles.remove(title);\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_531/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:01.296730432 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_976/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:53.196679633 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_976/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:53.200679665 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_891/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:19.575976092 -0500\n@@ -793,7 +793,10 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.renderingHints = new RenderingHints(\n+\t\t\t\tRenderingHints.KEY_ANTIALIASING,\n+\t\t\t\tRenderingHints.VALUE_ANTIALIAS_ON);\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_891/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:19.575976092 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_476/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:58.244072375 -0500\n@@ -625,7 +625,8 @@\n      * @see #getLegend(int)\n      */\n     public LegendTitle getLegend() {\n-        return getLegend(0);\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\treturn getLegend(0);\n     }\n     \n     /**\n@@ -638,7 +639,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.notify = true;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_476/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:58.248072417 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_978/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:54.420689444 -0500\n@@ -793,7 +793,10 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_978/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:54.424689476 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 647, 
          "faulty": "return (LegendTitle)subtitle;", 
          "type": "InsertBefore", 
          "seed": "plot.addChangeListener(this);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1617/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:53.738979440 -0500\n@@ -644,7 +644,8 @@\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n-                    return (LegendTitle) subtitle;\n+                    plot.addChangeListener(this);\n+\t\t\t\t\treturn (LegendTitle) subtitle;\n                 }\n                 else {\n                     seen++;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1617/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:53.742979475 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1097/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:04.089664792 -0500\n@@ -792,7 +792,9 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        if (this.title != null) {\n+\t\t\tthis.title.removeChangeListener(this);\n+\t\t}\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1097/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:04.089664792 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1696/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:28.923846816 -0500\n@@ -571,7 +571,8 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.borderPaint = Color.black;\n+\t\tthis.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -642,7 +643,8 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1696/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:28.927846852 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles=new ArrayList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_406/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:28:42.739299652 -0500\n@@ -643,7 +643,10 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (this.title != null) {\n+\t\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -957,7 +960,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.subtitles = new ArrayList();\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_406/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:28:42.743299693 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1669/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:51:59.343575660 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n@@ -956,7 +957,10 @@\n      */\n     public void setBackgroundPaint(Paint paint) {\n \n-        if (this.backgroundPaint != null) {\n+        if (plot == null) {\n+\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1669/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:51:59.347575696 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1903/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:20.478010056 -0500\n@@ -642,7 +642,10 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            if (this.title != null) {\n+\t\t\t\tthis.title.addChangeListener(this);\n+\t\t\t}\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1903/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:20.478010056 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_695/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:33:55.194252294 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_695/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:55.194252294 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_FINISHED,100));"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1094/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:01.593644477 -0500\n@@ -640,10 +640,15 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\tChartProgressEvent.DRAWING_FINISHED, 100));\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -793,7 +798,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1094/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:01.597644509 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_506/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:30:33.096434878 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_506/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:30:33.100434921 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot=plot;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1497/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:41.677818728 -0500\n@@ -793,7 +793,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.plot = plot;\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1497/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:41.681818759 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles.add(subtitle);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_821/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:07.939404224 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.subtitles.add(subtitle);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -1484,7 +1485,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n@@ -1496,7 +1498,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_821/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:07.939404224 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1677/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:07.031646002 -0500\n@@ -573,7 +573,8 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n@@ -1483,7 +1484,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1677/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:07.031646002 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1029/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:46.385059350 -0500\n@@ -625,7 +625,8 @@\n      * @see #getLegend(int)\n      */\n     public LegendTitle getLegend() {\n-        return getLegend(0);\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\treturn getLegend(0);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1029/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:46.389059379 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.borderVisible=false;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1116/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:26.169846717 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.borderVisible = false;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1116/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:41:26.173846750 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1116/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:26.173846750 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1000/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:13.904825364 -0500\n@@ -643,7 +643,10 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1000/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:39:13.904825364 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1000/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:13.904825364 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_593/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:07.385429718 -0500\n@@ -573,7 +573,8 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_593/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:07.385429718 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles=new ArrayList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.borderPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1425/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:47:16.925078817 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -957,7 +956,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.subtitles = new ArrayList();\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1425/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:47:16.929078856 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_STARTED,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_805/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:35:53.375271661 -0500\n@@ -792,7 +792,9 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\tChartProgressEvent.DRAWING_STARTED, 0));\n+\t\tthis.subtitles.remove(title);\n         fireChartChanged();\n     }\n     \n@@ -959,7 +961,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_805/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:53.379271696 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_947/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:22.888441344 -0500\n@@ -643,7 +643,14 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (subtitle instanceof LegendTitle) {\n+\t\t\t\t\tif (seen == index) {\n+\t\t\t\t\t\treturn (LegendTitle) subtitle;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tseen++;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -1484,7 +1491,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_947/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:22.888441344 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1828/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:54:56.905221909 -0500\n@@ -793,7 +793,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.borderPaint = Color.black;\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1828/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:54:56.905221909 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.progressListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1589/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:25.478724985 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.progressListeners = new EventListenerList();\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1589/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:25.482725021 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_921/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:49.996193682 -0500\n@@ -957,6 +957,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_921/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:49.996193682 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1709/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:43.995985496 -0500\n@@ -639,7 +639,10 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.renderingHints = new RenderingHints(\n+\t\t\t\tRenderingHints.KEY_ANTIALIASING,\n+\t\t\t\tRenderingHints.VALUE_ANTIALIAS_ON);\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n@@ -661,7 +664,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1709/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:52:43.995985496 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1709/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:43.999985532 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1226/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:30.918936119 -0500\n@@ -1484,7 +1484,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1226/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:30.918936119 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1323/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:45:27.152018672 -0500\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1323/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:45:27.152018672 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_989/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:05.276765409 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.notify = true;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_989/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:05.276765409 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_585/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:58.845338887 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "if (title != null) {\n  title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_676/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:34.810088858 -0500\n@@ -571,7 +571,9 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        if (title != null) {\n+\t\t\ttitle.addChangeListener(this);\n+\t\t}\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_676/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:34.810088858 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.itemLabelPadding=new RectangleInsets(2.0,2.0,2.0,2.0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_762/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:35:06.254852224 -0500\n@@ -793,7 +793,7 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.borderPaint = Color.black;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_762/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:35:06.254852224 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_762/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:06.258852260 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "this.plot=plot;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_788/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:35:35.335109299 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_788/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:35.335109299 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Delete", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_980/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:55.648699259 -0500\n@@ -661,7 +661,6 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_980/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:55.648699259 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 575, 
          "faulty": "if (title != null) {\n  title.addChangeListener(this);\n}", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1863/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:55:35.705586908 -0500\n@@ -572,7 +572,8 @@\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n-        if (title != null) {\n+        this.notify = true;\n+\t\tif (title != null) {\n             title.addChangeListener(this);\n         }\n         fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1863/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:55:35.709586945 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.borderStroke=new BasicStroke(1.0f);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_847/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:34.751651487 -0500\n@@ -571,9 +571,10 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.renderingHints = renderingHints;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            this.borderStroke = new BasicStroke(1.0f);\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_847/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:34.755651525 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1981/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:57:44.202806436 -0500\n@@ -957,6 +957,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1981/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:57:44.202806436 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1981/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:57:44.202806436 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1293/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:44:53.763702691 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                plot.addChangeListener(this);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -1496,7 +1497,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1293/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:44:53.767702728 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 575, 
          "faulty": "if (title != null) {\n  title.addChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.title.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1438/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:47:30.337210167 -0500\n@@ -572,9 +572,7 @@\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n-        if (title != null) {\n-            title.addChangeListener(this);\n-        }\n+        this.title.addChangeListener(this);\n         fireChartChanged();\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1438/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:47:30.341210206 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1916/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:32.594124908 -0500\n@@ -639,7 +639,8 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.plot.addChangeListener(this);\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1916/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:32.594124908 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1124/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:32.309897980 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.title = title;\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1124/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:32.309897980 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=padding;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1120/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:28.689867722 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n     }\n     \n     /**\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1120/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:28.689867722 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1753/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:53:32.224431462 -0500\n@@ -642,7 +642,8 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1753/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:53:32.224431462 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.borderVisible=false;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1200/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:03.970693227 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.borderVisible = false;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1200/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:03.970693227 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_973/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:50.788660375 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_973/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:50.788660375 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1747/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:53:26.168375285 -0500\n@@ -792,7 +792,8 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.borderPaint = Color.black;\n+\t\tthis.subtitles.remove(title);\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1747/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:53:26.172375321 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1148/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:42:00.318135287 -0500\n@@ -639,7 +639,10 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.renderingHints = new RenderingHints(\n+\t\t\t\tRenderingHints.KEY_ANTIALIASING,\n+\t\t\t\tRenderingHints.VALUE_ANTIALIAS_ON);\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1148/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:42:00.318135287 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_833/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:21.331527225 -0500\n@@ -959,7 +959,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_833/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:21.335527262 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_491/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:30:15.928255905 -0500\n@@ -571,7 +571,8 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.renderingHints = renderingHints;\n+\t\tthis.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -959,7 +960,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_491/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:30:15.932255947 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles=new ArrayList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1930/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:48.286273864 -0500\n@@ -639,7 +639,8 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.plot.addChangeListener(this);\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n@@ -957,7 +958,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.subtitles = new ArrayList();\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1930/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:48.286273864 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1169/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:42:26.266359826 -0500\n@@ -568,7 +568,8 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\tif (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1169/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:42:26.266359826 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1044/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:40:02.413179295 -0500\n@@ -573,7 +573,10 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t}\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1044/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:40:02.417179325 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_818/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:05.503381963 -0500\n@@ -568,12 +568,13 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.notify = true;\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            if (this.title != null) {\n+\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t}\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n@@ -957,9 +958,13 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.padding = RectangleInsets.ZERO_INSETS;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_818/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:05.503381963 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1619/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:55.538995697 -0500\n@@ -571,7 +571,8 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.renderingHints = renderingHints;\n+\t\tthis.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1619/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:55.542995733 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "this.itemLabelPadding=new RectangleInsets(2.0,2.0,2.0,2.0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_777/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:35:23.235001606 -0500\n@@ -538,9 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n+        this.itemLabelPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_777/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:23.235001606 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new DatasetChangeEvent(this,this));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1603/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:39.302849268 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        notifyListeners(new DatasetChangeEvent(this, this));\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_FINISHED,100));"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1572/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:07.730565967 -0500\n@@ -639,8 +639,13 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        if (this.title != null) {\n+\t\t\tthis.title.addChangeListener(this);\n+\t\t}\n+\t\tIterator iterator = this.subtitles.iterator();\n+        notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\tChartProgressEvent.DRAWING_FINISHED, 100));\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1572/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:07.754566182 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 578, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "title.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1217/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:22.374858724 -0500\n@@ -575,7 +575,8 @@\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n-        fireChartChanged();\n+        title.addChangeListener(this);\n+\t\tfireChartChanged();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1217/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:22.378858760 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1010/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:24.876902979 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n@@ -959,7 +960,7 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1010/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:24.876902979 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1286/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:44:46.503634465 -0500\n@@ -569,8 +569,8 @@\n      */\n     public void setTitle(TextTitle title) {\n         if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+\t\t\tthis.title.addChangeListener(this);\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -1496,7 +1496,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1286/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:44:46.507634503 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_656/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:15.397937351 -0500\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_656/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:15.397937351 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1503/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:46.745859339 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.notify = true;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1503/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:46.749859371 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1540/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:49:30.058230559 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n@@ -793,7 +794,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.borderPaint = Color.black;\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1540/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:49:30.058230559 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1540/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:49:30.062230594 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1118/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:41:27.425857181 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.notify = true;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1118/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:41:27.425857181 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_575/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:49.117235580 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.notify = true;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -640,7 +638,10 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t}\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_575/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:49.117235580 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1795/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:54:18.352860945 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -959,7 +957,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1795/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:54:18.352860945 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1795/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:54:18.352860945 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1605/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:40.674861623 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.renderingHints = renderingHints;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n@@ -1483,7 +1482,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1605/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:40.678861660 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.title.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1461/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:47:59.433488367 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -642,7 +641,8 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            this.renderingHints = renderingHints;\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n@@ -957,6 +957,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1461/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:47:59.437488397 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1840/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:55:09.045335934 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -959,7 +958,7 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1840/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:55:09.049335971 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_746/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:49.490706863 -0500\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n@@ -1484,7 +1483,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_746/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:49.494706897 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.borderVisible=false;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_905/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:34.048078146 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.borderVisible = false;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_905/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:37:34.048078146 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_905/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:34.048078146 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1399/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:47.684793688 -0500\n@@ -957,7 +957,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1399/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:46:47.688793726 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1399/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:47.688793726 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1526/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:49:14.070089126 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.notify = true;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1526/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:49:14.070089126 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1970/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:57:33.314702522 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -642,7 +639,8 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            this.renderingHints = renderingHints;\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1970/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:57:33.314702522 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.plot=plot;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1659/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:51:49.283483759 -0500\n@@ -793,7 +793,7 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.plot = plot;\n     }\n     \n     /**\n@@ -959,7 +959,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n@@ -1496,7 +1497,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1659/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:51:49.283483759 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1431/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:47:22.977138045 -0500\n@@ -568,9 +568,9 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        if (padding == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'padding' argument.\");\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -959,7 +959,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1431/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:47:22.977138045 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1431/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:47:22.981138084 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1040/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:58.569150274 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.title = title;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1040/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:58.573150304 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_435/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:16.423642030 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_435/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:16.423642030 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.borderStroke=new BasicStroke(1.0f);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_744/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:48.266696336 -0500\n@@ -956,7 +956,8 @@\n      */\n     public void setBackgroundPaint(Paint paint) {\n \n-        if (this.backgroundPaint != null) {\n+        this.borderStroke = new BasicStroke(1.0f);\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_744/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:48.266696336 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_577/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:50.345248611 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_577/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:31:50.345248611 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_577/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:50.349248654 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Replace", 
          "seed": "this.itemLabelPadding=new RectangleInsets(2.0,2.0,2.0,2.0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1361/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:10.084429791 -0500\n@@ -957,7 +957,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.padding = RectangleInsets.ZERO_INSETS;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1361/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:46:10.088429830 -0500\n@@ -538,9 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n+        this.itemLabelPadding = new RectangleInsets(2.0, 2.0, 2.0, 2.0);\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1361/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:10.088429830 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles.add(subtitle);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_244/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:25:26.893417870 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.subtitles.add(subtitle);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_244/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:25:26.893417870 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.subtitles=new ArrayList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1251/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:44:05.403251851 -0500\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n@@ -956,7 +955,10 @@\n      */\n     public void setBackgroundPaint(Paint paint) {\n \n-        if (this.backgroundPaint != null) {\n+        if (this.title != null) {\n+\t\t\tthis.title.removeChangeListener(this);\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1251/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:44:05.407251888 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if ((index < 0) || (index >= getSubtitleCount())) {\n  throw new IllegalArgumentException(\"Index out of range.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_878/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:07.415892509 -0500\n@@ -640,7 +640,10 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        if ((index < 0) || (index >= getSubtitleCount())) {\n+\t\t\tthrow new IllegalArgumentException(\"Index out of range.\");\n+\t\t}\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_878/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:07.419892537 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 961, 
          "faulty": "this.backgroundPaint=paint;", 
          "type": "InsertBefore", 
          "seed": "fireChartChanged();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_STARTED,0));"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1546/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:49:34.902273520 -0500\n@@ -641,7 +641,9 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\t\tChartProgressEvent.DRAWING_STARTED, 0));\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n@@ -958,7 +960,8 @@\n \n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n-                this.backgroundPaint = paint;\n+                fireChartChanged();\n+\t\t\t\tthis.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1546/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:49:34.902273520 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_FINISHED,100));"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_559/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:31.945053651 -0500\n@@ -640,7 +640,9 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\tChartProgressEvent.DRAWING_FINISHED, 100));\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_559/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:31.945053651 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=Color.white;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_708/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:09.694371078 -0500\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_708/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:34:09.698371110 -0500\n@@ -538,9 +538,6 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_708/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:09.698371110 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_443/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:23.791717448 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.renderingHints = renderingHints;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_443/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:23.795717490 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_729/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:32.562562361 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n@@ -1496,7 +1497,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_729/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:32.562562361 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.group=new DatasetGroup();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1071/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:40:33.713421219 -0500\n@@ -1483,7 +1483,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1071/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:40:33.717421251 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.group = new DatasetGroup();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.group=new DatasetGroup();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1733/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:53:11.728241536 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.group = new DatasetGroup();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1392/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:40.356722511 -0500\n@@ -571,9 +571,11 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            if (this.title != null) {\n+\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t}\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1392/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:40.356722511 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_402/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:28:39.055262461 -0500\n@@ -640,7 +640,10 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t}\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_402/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:28:39.055262461 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1542/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:49:31.282241409 -0500\n@@ -569,8 +569,8 @@\n      */\n     public void setTitle(TextTitle title) {\n         if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+\t\t\tthis.title.addChangeListener(this);\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -957,6 +957,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1542/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:49:31.286241445 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1299/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:44:59.827759813 -0500\n@@ -1484,7 +1484,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1299/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:44:59.827759813 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_STARTED,0));"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1781/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:54:02.536713380 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                plot.addChangeListener(this);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -957,7 +958,9 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\t\tChartProgressEvent.DRAWING_STARTED, 0));\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1781/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:54:02.540713418 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1781/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:54:02.540713418 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_865/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:55.279811168 -0500\n@@ -959,7 +959,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n@@ -1484,7 +1486,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_865/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:55.279811168 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1779/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:54:01.308701936 -0500\n@@ -661,7 +661,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1779/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:54:01.312701973 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_951/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:26.516469384 -0500\n@@ -959,7 +959,7 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_951/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:26.516469384 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_304/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:26:40.774101228 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.notify = true;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_304/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:26:40.778101267 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_304/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:26:40.778101267 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "Replace", 
          "seed": "return getLegend(0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1913/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:30.154101767 -0500\n@@ -661,7 +661,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1913/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:30.158101804 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1563/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:49:56.518465835 -0500\n@@ -661,7 +661,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.notify = true;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1563/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:49:56.522465870 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1838/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:55:07.821324430 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                plot.addChangeListener(this);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1838/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:55:07.821324430 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1591/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:26.710736046 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -641,7 +638,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1591/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:26.714736083 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 578, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "removeSubtitle(getLegend());"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1901/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:19.257998499 -0500\n@@ -575,7 +575,7 @@\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n-        fireChartChanged();\n+        removeSubtitle(getLegend());\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1901/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:19.257998499 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_453/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:34.787830332 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_453/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:34.791830373 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_663/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:21.461984228 -0500\n@@ -959,7 +959,10 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_663/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:21.465984258 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_908/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:36.496095677 -0500\n@@ -959,7 +959,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n@@ -1483,7 +1485,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_908/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:36.500095706 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "Delete", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_844/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:32.255628302 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.notify = true;\n     }\n     \n     /**\n@@ -793,7 +793,6 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_844/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:32.255628302 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.notify=true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_613/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:29.285595569 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.notify = true;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_613/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:32:29.289595597 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_613/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:29.289595597 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 647, 
          "faulty": "return (LegendTitle)subtitle;", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_FINISHED,100));"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1194/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:42:59.090649635 -0500\n@@ -644,7 +644,9 @@\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n-                    return (LegendTitle) subtitle;\n+                    notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\t\t\t\tChartProgressEvent.DRAWING_FINISHED, 100));\n+\t\t\t\t\treturn (LegendTitle) subtitle;\n                 }\n                 else {\n                     seen++;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1194/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:42:59.094649671 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_207/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:24:42.329026769 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_207/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:24:42.385027249 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles.remove(title);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1076/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:40:38.613459952 -0500\n@@ -1496,7 +1496,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.subtitles.remove(title);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1076/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:40:38.613459952 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1464/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:01.905507272 -0500\n@@ -643,7 +643,11 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (padding == null) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"Null 'padding' argument.\");\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1464/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:01.917507363 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 961, 
          "faulty": "this.backgroundPaint=paint;", 
          "type": "InsertBefore", 
          "seed": "fireChartChanged();"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1932/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:56:49.514285530 -0500\n@@ -958,7 +958,8 @@\n \n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n-                this.backgroundPaint = paint;\n+                fireChartChanged();\n+\t\t\t\tthis.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1932/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:49.518285568 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.borderStroke=new BasicStroke(1.0f);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1205/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:08.834736801 -0500\n@@ -641,9 +641,13 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n@@ -956,7 +960,8 @@\n      */\n     public void setBackgroundPaint(Paint paint) {\n \n-        if (this.backgroundPaint != null) {\n+        this.borderStroke = new BasicStroke(1.0f);\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1205/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:08.834736801 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "fireChartChanged();"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_473/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:55.688045921 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        fireChartChanged();\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_473/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:55.692045962 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=Color.white;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_810/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:35:58.287316227 -0500\n@@ -1483,7 +1483,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_810/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:35:58.291316263 -0500\n@@ -538,9 +538,6 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_810/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:58.291316263 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1693/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:25.803818151 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        plot.addChangeListener(this);\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1693/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:25.803818151 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.borderPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.progressListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1506/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:49.909884793 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -792,7 +791,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.progressListeners = new EventListenerList();\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1506/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:49.909884793 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.progressListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1198/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:02.730682140 -0500\n@@ -639,7 +639,8 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.borderPaint = Color.black;\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n@@ -792,7 +793,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.progressListeners = new EventListenerList();\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1198/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:43:02.730682140 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1198/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:02.734682176 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 645, 
          "faulty": "if (subtitle instanceof LegendTitle) {\n  if (seen == index) {\n    return (LegendTitle)subtitle;\n  }\n else {\n    seen++;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1611/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:48.562932723 -0500\n@@ -568,7 +568,8 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\tif (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n@@ -642,7 +643,8 @@\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n-            if (subtitle instanceof LegendTitle) {\n+            this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\t\tif (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1611/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:48.574932831 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_880/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:08.647900884 -0500\n@@ -956,7 +956,10 @@\n      */\n     public void setBackgroundPaint(Paint paint) {\n \n-        if (this.backgroundPaint != null) {\n+        if (this.title != null) {\n+\t\t\tthis.title.removeChangeListener(this);\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_880/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:08.647900884 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1310/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:45:12.459879194 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1310/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:45:12.463879231 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1498, 
          "faulty": "Object[] listeners=this.changeListeners.getListenerList();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_717/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:19.390451610 -0500\n@@ -661,7 +661,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n@@ -1495,7 +1496,8 @@\n      */\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n-            Object[] listeners = this.changeListeners.getListenerList();\n+            this.title = title;\n+\t\t\tObject[] listeners = this.changeListeners.getListenerList();\n             for (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_717/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:19.390451610 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_794/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:35:41.371163389 -0500\n@@ -959,7 +959,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_794/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:35:41.371163389 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (plot == null) {\n  throw new NullPointerException(\"Null 'plot' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1379/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:28.296605636 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.borderPaint = Color.black;\n         fireChartChanged();\n     }\n     \n@@ -959,7 +959,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (plot == null) {\n+\t\t\t\t\tthrow new NullPointerException(\"Null 'plot' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1379/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:28.296605636 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1248/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:58.027183884 -0500\n@@ -1483,7 +1483,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1248/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:58.035183958 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "this.itemLabelPadding=new RectangleInsets(2.0,2.0,2.0,2.0);"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_733/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:36.154592824 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n@@ -1483,7 +1484,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_733/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:34:36.158592859 -0500\n@@ -538,9 +538,6 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_733/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:36.158592859 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "Replace", 
          "seed": "return getLegend(0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_669/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:27.530031549 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "this.borderStroke=new BasicStroke(1.0f);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_755/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:34:58.994789005 -0500\n@@ -573,7 +573,8 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            this.borderStroke = new BasicStroke(1.0f);\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_755/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:34:58.998789041 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_938/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:08.256329682 -0500\n@@ -569,8 +569,8 @@\n      */\n     public void setTitle(TextTitle title) {\n         if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+\t\t\tthis.title.addChangeListener(this);\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_938/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:08.256329682 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.renderingHints=new RenderingHints(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1615/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:52.446967773 -0500\n@@ -792,7 +792,9 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.renderingHints = new RenderingHints(\n+\t\t\t\tRenderingHints.KEY_ANTIALIASING,\n+\t\t\t\tRenderingHints.VALUE_ANTIALIAS_ON);\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1615/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:52.446967773 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "if (index < 0 || index > getSubtitleCount()) {\n  throw new IllegalArgumentException(\"The 'index' argument is out of range.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_869/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:58.971835687 -0500\n@@ -639,7 +639,11 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        if (index < 0 || index > getSubtitleCount()) {\n+\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\"The 'index' argument is out of range.\");\n+\t\t}\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_869/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:58.975835714 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1487, 
          "faulty": "notifyListeners(event);", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1467/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:06.497542540 -0500\n@@ -1484,7 +1484,8 @@\n      */\n     public void fireChartChanged() {\n         ChartChangeEvent event = new ChartChangeEvent(this);\n-        notifyListeners(event);\n+        this.title = title;\n+\t\tnotifyListeners(event);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1467/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:06.509542632 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImage=DEFAULT_BACKGROUND_IMAGE;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1487/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:28.933717495 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1487/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:28.937717526 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1691/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:24.551806652 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -959,7 +956,8 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n+\t\t\t\tfireChartChanged();\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1691/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:24.551806652 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.backgroundImage=DEFAULT_BACKGROUND_IMAGE;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_928/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:57.264247354 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_928/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:57.264247354 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1764/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:53:44.340544004 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1764/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:53:44.340544004 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1764/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:53:44.344544041 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_959/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:38:34.992535416 -0500\n@@ -793,7 +793,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_959/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:38:34.996535446 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_546/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:18.448911077 -0500\n@@ -957,7 +957,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.padding = RectangleInsets.ZERO_INSETS;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_546/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:18.448911077 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_421/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:00.143476044 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.borderPaint = Color.black;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_421/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:29:00.143476044 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_421/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:00.143476044 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.backgroundImage=DEFAULT_BACKGROUND_IMAGE;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1599/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:35.470814781 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.backgroundImage = DEFAULT_BACKGROUND_IMAGE;\n     }\n     \n     /**\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1599/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:35.474814816 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_345/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:27:31.274588480 -0500\n@@ -568,9 +568,9 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        if (padding == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'padding' argument.\");\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_345/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:27:31.278588519 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_522/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:30:51.324625706 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_522/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:30:51.328625748 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1500/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:48:44.229839152 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = RectangleInsets.ZERO_INSETS;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1500/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:48:44.233839184 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_841/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:36:29.807605595 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_841/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:29.811605632 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "notifyListeners(new ChartProgressEvent(this,this,ChartProgressEvent.DRAWING_STARTED,0));"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1220/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:43:24.842881044 -0500\n@@ -1496,7 +1496,9 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            notifyListeners(new ChartProgressEvent(this, this,\n+\t\t\t\t\tChartProgressEvent.DRAWING_STARTED, 0));\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1220/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:43:24.846881081 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1365/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:13.728464911 -0500\n@@ -959,7 +959,9 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1365/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:13.728464911 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_616/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:31.701612790 -0500\n@@ -661,7 +661,8 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tremoveSubtitle(getLegend());\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_616/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:31.705612818 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.progressListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1336/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:45:42.340163534 -0500\n@@ -569,8 +569,8 @@\n      */\n     public void setTitle(TextTitle title) {\n         if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+\t\t\tthis.title.addChangeListener(this);\n+\t\t}\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.progressListeners = new EventListenerList();\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1336/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:45:42.344163572 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 642, 
          "faulty": "Iterator iterator=this.subtitles.iterator();", 
          "type": "InsertBefore", 
          "seed": "this.borderPaint=Color.black;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1344/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:45:50.804244544 -0500\n@@ -639,7 +639,8 @@\n      */\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n-        Iterator iterator = this.subtitles.iterator();\n+        this.borderPaint = Color.black;\n+\t\tIterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1344/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:45:50.804244544 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "fireChartChanged();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_651/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:10.561900272 -0500\n@@ -638,12 +638,20 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        fireChartChanged();\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        if (padding == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'padding' argument.\");\n+\t\t}\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (padding == null) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"Null 'padding' argument.\");\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_651/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:10.565900304 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_361/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:27:50.258775146 -0500\n@@ -643,7 +643,10 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (this.title != null) {\n+\t\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_361/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:27:50.262775185 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1486, 
          "faulty": "ChartChangeEvent event=new ChartChangeEvent(this);", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_376/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:28:07.246943630 -0500\n@@ -1483,7 +1483,8 @@\n      * This method is for convenience only.\n      */\n     public void fireChartChanged() {\n-        ChartChangeEvent event = new ChartChangeEvent(this);\n+        this.notify = true;\n+\t\tChartChangeEvent event = new ChartChangeEvent(this);\n         notifyListeners(event);\n     }\n \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_376/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:28:07.246943630 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_376/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:28:07.246943630 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 959, 
          "faulty": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.backgroundPaint != null) {\n  if (!this.backgroundPaint.equals(paint)) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}\n else {\n  if (paint != null) {\n    this.backgroundPaint=paint;\n    fireChartChanged();\n  }\n}"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=Color.white;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1881/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:55:56.289781199 -0500\n@@ -957,6 +957,17 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (paint != null) {\n+\t\t\t\tthis.backgroundPaint = paint;\n+\t\t\t\tfireChartChanged();\n+\t\t\t}\n+\t\t}\n+\t\tif (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1881/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:55:56.289781199 -0500\n@@ -538,9 +538,6 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1881/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:55:56.293781236 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Delete", 
          "seed": "this.renderingHints=renderingHints;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_635/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:53.545772033 -0500\n@@ -571,7 +571,6 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -793,7 +792,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.changeListeners = new EventListenerList();\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_635/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:53.549772063 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_595/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:32:08.629442960 -0500\n@@ -661,7 +661,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = RectangleInsets.ZERO_INSETS;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_595/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:32:08.629442960 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_288/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:26:21.381918160 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_912/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:40.164122084 -0500\n@@ -957,7 +957,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_912/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:40.168122112 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "InsertBefore", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1908/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:56:25.310055843 -0500\n@@ -539,7 +539,8 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;\n+\t\t\treturn true;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1908/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:56:25.310055843 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_998/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:12.676816773 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -643,7 +640,10 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_998/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:12.680816801 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Delete", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "if (renderingHints == null) {\n  throw new NullPointerException(\"RenderingHints given are null\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 647, 
          "faulty": "return (LegendTitle)subtitle;", 
          "type": "InsertBefore", 
          "seed": "if (index < 0 || index > getSubtitleCount()) {\n  throw new IllegalArgumentException(\"The 'index' argument is out of range.\");\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1273/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:44:31.991498645 -0500\n@@ -568,9 +568,6 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -641,10 +638,17 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            if (renderingHints == null) {\n+\t\t\t\tthrow new NullPointerException(\"RenderingHints given are null\");\n+\t\t\t}\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n-                    return (LegendTitle) subtitle;\n+                    if (index < 0 || index > getSubtitleCount()) {\n+\t\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\t\"The 'index' argument is out of range.\");\n+\t\t\t\t\t}\n+\t\t\t\t\treturn (LegendTitle) subtitle;\n                 }\n                 else {\n                     seen++;   \n@@ -957,7 +961,8 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n                 fireChartChanged();\n             }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1273/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:44:31.991498645 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 578, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "removeSubtitle(getLegend());"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_994/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:08.984791056 -0500\n@@ -575,7 +575,8 @@\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n-        fireChartChanged();\n+        removeSubtitle(getLegend());\n+\t\tfireChartChanged();\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_994/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:08.984791056 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_658/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:33:16.621946779 -0500\n@@ -643,7 +643,10 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_658/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:33:16.625946810 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 574, 
          "faulty": "this.title=title;", 
          "type": "Replace", 
          "seed": "this.borderVisible=false;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.title=title;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1736/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:53:14.140263856 -0500\n@@ -571,7 +571,7 @@\n         if (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n-        this.title = title;\n+        this.borderVisible = false;\n         if (title != null) {\n             title.addChangeListener(this);\n         }\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.title = title;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1736/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:53:14.144263893 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1373/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:22.216546842 -0500\n@@ -1496,7 +1496,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1373/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:46:22.220546881 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1373/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:22.220546881 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 541, 
          "faulty": "if (obj == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "this.backgroundPaint=Color.white;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_814/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:36:01.879348910 -0500\n@@ -538,9 +538,6 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n-        }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n         }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_814/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:36:01.883348946 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 796, 
          "faulty": "fireChartChanged();", 
          "type": "InsertBefore", 
          "seed": "this.changeListeners=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1999/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:58:03.310984158 -0500\n@@ -793,7 +793,8 @@\n      */\n     public void removeSubtitle(Title title) {\n         this.subtitles.remove(title);\n-        fireChartChanged();\n+        this.changeListeners = new EventListenerList();\n+\t\tfireChartChanged();\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1999/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:58:03.310984158 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 576, 
          "faulty": "title.addChangeListener(this);", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1579/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:15.478635311 -0500\n@@ -573,7 +573,10 @@\n         }\n         this.title = title;\n         if (title != null) {\n-            title.addChangeListener(this);\n+            if (this.title != null) {\n+\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t}\n+\t\t\ttitle.addChangeListener(this);\n         }\n         fireChartChanged();\n     }\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1579/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:50:15.478635311 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1579/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:15.478635311 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/plot/MultiplePiePlot.java", 
          "line": 166, 
          "faulty": "return this.dataset;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1182/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:42:45.758531193 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:17:13.030870301 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1182/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/plot/MultiplePiePlot.java\t2018-12-01 08:42:45.762531229 -0500\n@@ -163,7 +163,7 @@\n      * @return The dataset (possibly <code>null</code>).\n      */\n     public CategoryDataset getDataset() {\n-        return this.dataset;\n+        return null;\n     }\n \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1182/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:42:45.762531229 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 643, 
          "faulty": "while (iterator.hasNext()) {\n  Title subtitle=(Title)iterator.next();\n  if (subtitle instanceof LegendTitle) {\n    if (seen == index) {\n      return (LegendTitle)subtitle;\n    }\n else {\n      seen++;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < getSubtitleCount(); i++) {\n  getSubtitle(i).addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_439/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:20.103679675 -0500\n@@ -640,7 +640,10 @@\n     public LegendTitle getLegend(int index) {\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n-        while (iterator.hasNext()) {\n+        for (int i = 0; i < getSubtitleCount(); i++) {\n+\t\t\tgetSubtitle(i).addChangeListener(this);\n+\t\t}\n+\t\twhile (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_439/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:29:20.107679717 -0500\n@@ -538,8 +538,7 @@\n      * @return A boolean.\n      */\n     public boolean equals(Object obj) {\n-        if (obj == this) {\n-            return true;   \n+        if (obj == this) {   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_439/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:20.107679717 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "Replace", 
          "seed": "return getLegend(0);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_897/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:25.568018015 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.borderPaint=Color.black;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1583/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:50:19.334669866 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.borderPaint = Color.black;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1583/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:50:19.334669866 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_991/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:39:06.528774049 -0500\n@@ -959,7 +959,10 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (padding == null) {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\t\"Null 'padding' argument.\");\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_991/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:39:06.528774049 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/chart/title/LegendTitle.java", 
          "line": 542, 
          "faulty": "return true;", 
          "type": "Replace", 
          "seed": "this.legendItemGraphicEdge=RectangleEdge.LEFT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1987/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:57:50.218863893 -0500\n@@ -959,7 +959,7 @@\n         if (this.backgroundPaint != null) {\n             if (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                this.plot.addChangeListener(this);\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:17:07.314870069 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1987/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/title/LegendTitle.java\t2018-12-01 08:57:50.218863893 -0500\n@@ -539,7 +539,7 @@\n      */\n     public boolean equals(Object obj) {\n         if (obj == this) {\n-            return true;   \n+            this.legendItemGraphicEdge = RectangleEdge.LEFT;   \n         }\n         if (!(obj instanceof LegendTitle)) {\n             return false;   \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1987/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:57:50.218863893 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "InsertBefore", 
          "seed": "if (padding == null) {\n  throw new IllegalArgumentException(\"Null 'padding' argument.\");\n}"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.notify=true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1662/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:51:52.015508700 -0500\n@@ -568,7 +568,10 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n+        if (padding == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Null 'padding' argument.\");\n+\t\t}\n+\t\tif (this.title != null) {\n             this.title.removeChangeListener(this);\n         }\n         this.title = title;\n@@ -638,7 +641,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.notify = true;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1662/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:51:52.019508736 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 571, 
          "faulty": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}", 
          "type": "Replace", 
          "seed": "this.backgroundPaint=DEFAULT_BACKGROUND_PAINT;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 628, 
          "faulty": "return getLegend(0);", 
          "type": "InsertBefore", 
          "seed": "this.plot=plot;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_564/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:36.865105719 -0500\n@@ -568,9 +568,7 @@\n      * @see #getTitle()\n      */\n     public void setTitle(TextTitle title) {\n-        if (this.title != null) {\n-            this.title.removeChangeListener(this);\n-        }\n+        this.backgroundPaint = DEFAULT_BACKGROUND_PAINT;\n         this.title = title;\n         if (title != null) {\n             title.addChangeListener(this);\n@@ -625,7 +623,8 @@\n      * @see #getLegend(int)\n      */\n     public LegendTitle getLegend() {\n-        return getLegend(0);\n+        this.plot = plot;\n+\t\treturn getLegend(0);\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_564/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:36.869105761 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "this.padding=RectangleInsets.ZERO_INSETS;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "if (this.title != null) {\n  this.title.removeChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_463/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:29:45.915944957 -0500\n@@ -638,12 +638,16 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        this.padding = RectangleInsets.ZERO_INSETS;\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                if (this.title != null) {\n+\t\t\t\t\tthis.title.removeChangeListener(this);\n+\t\t\t\t}\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_463/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:29:45.919944999 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 644, 
          "faulty": "Title subtitle=(Title)iterator.next();", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1381/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:29.528617560 -0500\n@@ -641,7 +641,8 @@\n         int seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n-            Title subtitle = (Title) iterator.next();\n+            this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n+\t\t\tTitle subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n                 if (seen == index) {\n                     return (LegendTitle) subtitle;\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1381/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:29.532617599 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 960, 
          "faulty": "if (!this.backgroundPaint.equals(paint)) {\n  this.backgroundPaint=paint;\n  fireChartChanged();\n}", 
          "type": "InsertBefore", 
          "seed": "this.backgroundImageAlpha=DEFAULT_BACKGROUND_IMAGE_ALPHA;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 962, 
          "faulty": "fireChartChanged();", 
          "type": "Replace", 
          "seed": "if (this.title != null) {\n  this.title.addChangeListener(this);\n}"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_549/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:31:20.892936868 -0500\n@@ -957,9 +957,12 @@\n     public void setBackgroundPaint(Paint paint) {\n \n         if (this.backgroundPaint != null) {\n-            if (!this.backgroundPaint.equals(paint)) {\n+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;\n+\t\t\tif (!this.backgroundPaint.equals(paint)) {\n                 this.backgroundPaint = paint;\n-                fireChartChanged();\n+                if (this.title != null) {\n+\t\t\t\t\tthis.title.addChangeListener(this);\n+\t\t\t\t}\n             }\n         }\n         else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_549/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:31:20.892936868 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 641, 
          "faulty": "int seen=0;", 
          "type": "InsertBefore", 
          "seed": "fireChartChanged();"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 664, 
          "faulty": "removeSubtitle(getLegend());", 
          "type": "Replace", 
          "seed": "this.padding=padding;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1673/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:52:03.375612540 -0500\n@@ -638,7 +638,8 @@\n      * @see #addLegend(LegendTitle)\n      */\n     public LegendTitle getLegend(int index) {\n-        int seen = 0;\n+        fireChartChanged();\n+\t\tint seen = 0;\n         Iterator iterator = this.subtitles.iterator();\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n@@ -661,7 +662,7 @@\n      * @see #getLegend()\n      */\n     public void removeLegend() {\n-        removeSubtitle(getLegend());\n+        this.padding = padding;\n     }\n     \n     /**\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1673/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:52:03.375612540 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 795, 
          "faulty": "this.subtitles.remove(title);", 
          "type": "Replace", 
          "seed": "this.backgroundImageAlignment=DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1410/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:59.748911115 -0500\n@@ -792,7 +792,7 @@\n      * @see #addSubtitle(Title)\n      */\n     public void removeSubtitle(Title title) {\n-        this.subtitles.remove(title);\n+        this.backgroundImageAlignment = DEFAULT_BACKGROUND_IMAGE_ALIGNMENT;\n         fireChartChanged();\n     }\n     \n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1410/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:59.748911115 -0500\n@@ -158,7 +158,7 @@\n      */\n     public boolean hasListener(EventListener listener) {\n         List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 1499, 
          "faulty": "for (int i=listeners.length - 2; i >= 0; i-=2) {\n  if (listeners[i] == ChartChangeListener.class) {\n    ((ChartChangeListener)listeners[i + 1]).chartChanged(event);\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "this.plot.addChangeListener(this);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1384/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:46:31.944640955 -0500\n@@ -1496,7 +1496,8 @@\n     protected void notifyListeners(ChartChangeEvent event) {\n         if (this.notify) {\n             Object[] listeners = this.changeListeners.getListenerList();\n-            for (int i = listeners.length - 2; i >= 0; i -= 2) {\n+            this.plot.addChangeListener(this);\n+\t\t\tfor (int i = listeners.length - 2; i >= 0; i -= 2) {\n                 if (listeners[i] == ChartChangeListener.class) {\n                     ((ChartChangeListener) listeners[i + 1]).chartChanged(\n                             event);\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_1384/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:46:31.948640993 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "source/org/jfree/chart/JFreeChart.java", 
          "line": 646, 
          "faulty": "if (seen == index) {\n  return (LegendTitle)subtitle;\n}\n else {\n  seen++;\n}", 
          "type": "InsertBefore", 
          "seed": "this.subtitles.add(subtitle);"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 161, 
          "faulty": "return list.contains(listener);", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "source/org/jfree/data/general/AbstractDataset.java", 
          "line": 160, 
          "faulty": "List list=Arrays.asList(this.listenerList.getListenerList());", 
          "type": "InsertBefore", 
          "seed": "this.listenerList=new EventListenerList();"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:17:07.210870065 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_889/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/chart/JFreeChart.java\t2018-12-01 08:37:18.327967420 -0500\n@@ -643,7 +643,8 @@\n         while (iterator.hasNext()) {\n             Title subtitle = (Title) iterator.next();\n             if (subtitle instanceof LegendTitle) {\n-                if (seen == index) {\n+                this.subtitles.add(subtitle);\n+\t\t\t\tif (seen == index) {\n                     return (LegendTitle) subtitle;\n                 }\n                 else {\n\n\n--- /tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:17:07.710870085 -0500\n+++ /tmp/Arja_Defects4J_Chart_12/patches_pie9/Patch_889/patched/tmp/Arja_Defects4J_Chart_12/source/org/jfree/data/general/AbstractDataset.java\t2018-12-01 08:37:18.327967420 -0500\n@@ -157,8 +157,9 @@\n      * @see #removeChangeListener(DatasetChangeListener)\n      */\n     public boolean hasListener(EventListener listener) {\n-        List list = Arrays.asList(this.listenerList.getListenerList());\n-        return list.contains(listener);\n+        this.listenerList = new EventListenerList();\n+\t\tList list = Arrays.asList(this.listenerList.getListenerList());\n+        return true;\n     }\n     \n     /**\n\n\n"
    }
  ]
}