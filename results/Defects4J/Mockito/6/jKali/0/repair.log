cd /tmp/jKali_Defects4J_Mockito_6;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/RepairThemAll/script/../libs/jtestex7.jar:/home/tdurieux/RepairThemAll/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
	-location . \
	-id Mockito-6 \
	-failing org.mockitousage.matchers.AnyXMatchersAcceptNullsTest:org.mockitousage.matchers.MatchersTest:org.mockitousage.matchers.NewMatchersTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src \
	-srctestfolder test \
	-binjavafolder build/classes/main/ \
	-bintestfolder build/classes/test/ \
	-parameters x:x \
	-dependencies /tmp/jKali_Defects4J_Mockito_6/build/classes/main/:/tmp/jKali_Defects4J_Mockito_6/build/classes/test/:/tmp/jKali_Defects4J_Mockito_6/lib/repackaged/cglib-and-asm-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/objenesis-2.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/com.springsource.org.hamcrest.core-1.1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/powermock-reflect-1.2.5.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-util-1.1.4.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-assert-1.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/cglib-and-asm-1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/objenesis-2.1-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/com.springsource.org.hamcrest.core-1.1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/sorcerer.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/bnd-0.0.313.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jarjar-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jaxen-1.1.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/maven-ant-tasks-2.0.9.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant4hg-V0.07.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant-googlecode-0.0.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/pmd-4.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/asm-3.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/cobertura-2.0.3.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
2018-12-06 16:46:28,450 INFO main - command line arguments: [-mode  jkali  -location  .  -id  Mockito-6  -failing  org.mockitousage.matchers.AnyXMatchersAcceptNullsTest:org.mockitousage.matchers.MatchersTest:org.mockitousage.matchers.NewMatchersTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  5  -srcjavafolder  src  -srctestfolder  test  -binjavafolder  build/classes/main/  -bintestfolder  build/classes/test/  -parameters  x:x  -dependencies  /tmp/jKali_Defects4J_Mockito_6/build/classes/main/:/tmp/jKali_Defects4J_Mockito_6/build/classes/test/:/tmp/jKali_Defects4J_Mockito_6/lib/repackaged/cglib-and-asm-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/objenesis-2.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/com.springsource.org.hamcrest.core-1.1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/powermock-reflect-1.2.5.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-util-1.1.4.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-assert-1.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/cglib-and-asm-1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/objenesis-2.1-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/com.springsource.org.hamcrest.core-1.1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/sorcerer.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/bnd-0.0.313.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jarjar-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jaxen-1.1.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/maven-ant-tasks-2.0.9.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant4hg-V0.07.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant-googlecode-0.0.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/pmd-4.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/asm-3.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/cobertura-2.0.3.jar]
2018-12-06 16:46:28,452 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:842) - Source folders: [/tmp/jKali_Defects4J_Mockito_6/./src]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:861) - Source Test folders: [/tmp/jKali_Defects4J_Mockito_6/./test]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jKali_Defects4J_Mockito_6/./output_astor/AstorMain-Mockito-6//bin//default from 548 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/tmp/jKali_Defects4J_Mockito_6/lib/run/com.springsource.org.hamcrest.core-1.1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/bnd-0.0.313.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/jarjar-1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/asm-3.1.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/jaxen-1.1.1.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, /tmp/jKali_Defects4J_Mockito_6/lib/test/fest-util-1.1.4.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/repackaged/cglib-and-asm-1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/pmd-4.1.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/ant4hg-V0.07.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/sorcerer.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/cglib-and-asm-1.0-sources.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/objenesis-2.1-sources.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/cobertura-2.0.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/maven-ant-tasks-2.0.9.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar, /tmp/jKali_Defects4J_Mockito_6/build/classes/test/, /tmp/jKali_Defects4J_Mockito_6/lib/build/ant-googlecode-0.0.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/test/fest-assert-1.3.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar, /tmp/jKali_Defects4J_Mockito_6/./output_astor/AstorMain-Mockito-6//bin//default, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/com.springsource.org.hamcrest.core-1.1.0-sources.jar, /tmp/jKali_Defects4J_Mockito_6/build/classes/main/, /tmp/jKali_Defects4J_Mockito_6/lib/test/powermock-reflect-1.2.5.jar, /tmp/jKali_Defects4J_Mockito_6/lib/run/objenesis-2.1.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.MockUtilTest#should_not_redefine_MockName_if_default
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.MockUtilTest#should_redefine_MockName_if_default
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.NewMatchersTest#shouldAllowAnyCollection
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.NewMatchersTest#shouldAllowAnyList
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.NewMatchersTest#shouldAllowAnyMap
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.NewMatchersTest#shouldAllowAnySet
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.configuration.MockInjectionTest#can_try_property_or_setter_injection
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MockingMultipleInterfacesTest#should_mock_class_with_interfaces_of_different_class_loader_AND_different_classpaths
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest#should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSetTest#can_iterate
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.collections.HashCodeAndEqualsSafeSetTest#toArray_just_work
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#paramType_with_wildcard_return_type_of____returning_wildcard_with_class_lower_bound____resolved_to_List_and_type_argument_to_Integer
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#paramType_with_wildcard_return_type_of____returning_wildcard_with_typeVar_upper_bound____resolved_to_List_and_type_argument_to_Integer
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#can_get_raw_type_from_Class
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#bounded_typeVariable_return_type_of____returningK____resolved_to_Comparable_and_with_BoundedType
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#can_get_type_variables_from_Class
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#typeVariable_return_type_of____get____resolved_to_Set_and_type_argument_to_Number
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#class_return_type_of____append____resolved_to_StringBuilder_and_type_arguments
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#can_get_type_variables_from_ParameterizedType
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#fixed_ParamType_return_type_of____remove____resolved_to_Set_and_type_argument_to_Number
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#typeVariable_return_type_of____iterator____resolved_to_Iterator_and_type_argument_to_String
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#typeVariable_with_type_parameters_return_type_of____typeVar_with_type_params____resolved_K_hence_to_Comparable_and_with_BoundedType
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#typeVariable_of_self_type
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#paramType_return_type_of____values____resolved_to_Collection_and_type_argument_to_Parameterized_Set
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#paramType_with_wildcard_return_type_of____returning_wildcard_with_typeVar_lower_bound____resolved_to_List_and_type_argument_to_Integer
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#paramType_with_type_parameters_return_type_of____paramType_with_type_params____resolved_to_Collection_and_type_argument_to_Parameterized_Set
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.GenericMetadataSupportTest#can_get_raw_type_from_ParameterizedType
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitoutil.ClassLoadersTest#isolated_class_loader_can_load_all_classes_unless_all_classes_mathch_the_prefixes
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitoutil.ClassLoadersTest#can_load_a_class_in_memory_from_bytes
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MocksSerializationForAnnotationTest#should_serialize_object_mock
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MocksSerializationForAnnotationTest#should_serialize_real_partial_mock
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MocksSerializationForAnnotationTest#should_serialization_work
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.creation.MockSettingsImplTest#shouldAddVerboseLoggingListenerOnlyOnce
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.creation.MockSettingsImplTest#shouldAddVerboseLoggingListener
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.creation.MockSettingsImplTest#shouldAddInvocationListener
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.CapturingArgumentsTest#should_capture_when_stubbing_only_when_entire_invocation_matches
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.MatchersTest#anyStringMatcher
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.stubbing.StubbingWithAdditionalAnswers#can_return_arguments_of_invocation
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.stubbing.StubbingWithAdditionalAnswers#can_return_expanded_arguments_of_invocation
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.stubbing.StubbingWithDelegateTest#exception_should_be_propagated_from_delegate
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.AnyXMatchersAcceptNullsTest#shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.matchers.AnyXMatchersAcceptNullsTest#shouldNotAcceptNullInAnyXMatchers
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.FieldsTest#can_get_list_of_InstanceField
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.FieldsTest#can_get_values_of_instance_fields
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.FieldsTest#fields_should_return_all_declared_fields_in_hierarchy
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.FieldsTest#can_filter_not_null_fields
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.util.reflection.FieldsTest#fields_should_return_declared_fields
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MocksSerializationTest#should_serialize_object_mock
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.basicapi.MocksSerializationTest#should_serialize_real_partial_mock
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.stubbing.answers.ReturnsArgumentAtTest#should_be_able_to_return_the_second_parameter
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.stubbing.answers.ReturnsArgumentAtTest#should_be_able_to_return_the_last_parameter
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.stubbing.answers.ReturnsArgumentAtTest#should_be_able_to_return_the_specified_parameter
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.stubbing.answers.ReturnsArgumentAtTest#should_be_able_to_return_the_first_parameter
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.debugging.InvocationListenerCallbackTest#should_call_single_listener_when_mock_return_normally
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockitousage.debugging.InvocationListenerCallbackTest#should_call_all_listener_when_mock_return_normally
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.mockito.internal.debugging.VerboseMockInvocationLoggerTest#should_print_to_system_out
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:1359, fails: 56, GZoltar suspicious 6403, with positive susp 3321
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 1359
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 550 with susp > 0.1, we consider: 550
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jKali_Defects4J_Mockito_6/./output_astor/AstorMain-Mockito-6//src//default
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jKali_Defects4J_Mockito_6/./output_astor/AstorMain-Mockito-6//src//default, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/tmp/jKali_Defects4J_Mockito_6/build/classes/main/, /tmp/jKali_Defects4J_Mockito_6/build/classes/test/, /tmp/jKali_Defects4J_Mockito_6/lib/repackaged/cglib-and-asm-1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/run/objenesis-2.1.jar, /tmp/jKali_Defects4J_Mockito_6/lib/run/com.springsource.org.hamcrest.core-1.1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/test/powermock-reflect-1.2.5.jar, /tmp/jKali_Defects4J_Mockito_6/lib/test/fest-util-1.1.4.jar, /tmp/jKali_Defects4J_Mockito_6/lib/test/fest-assert-1.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/cglib-and-asm-1.0-sources.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/objenesis-2.1-sources.jar, /tmp/jKali_Defects4J_Mockito_6/lib/sources/com.springsource.org.hamcrest.core-1.1.0-sources.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/sorcerer.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/bnd-0.0.313.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/jarjar-1.0.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/jaxen-1.1.1.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/maven-ant-tasks-2.0.9.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/ant4hg-V0.07.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/ant-googlecode-0.0.3.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/pmd-4.1.jar, /tmp/jKali_Defects4J_Mockito_6/lib/build/asm-3.1.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar, /home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/cobertura-2.0.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 550
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.fest.assertions.Assertions, methodName=org.fest.assertions.Assertions{assertThat(Ljava/lang/Object;)Lorg/fest/assertions/ObjectAssert; 0.0, lineNumber=313, susp=0.6378150482030709]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.fest.assertions.Assertions, methodName=org.fest.assertions.Assertions{assertThat(Ljava/util/List;)Lorg/fest/assertions/ListAssert; 0.0, lineNumber=159, susp=0.25077519565890877]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.fest.assertions.Assertions, methodName=org.fest.assertions.Assertions{assertThat(Ljava/util/Collection;)Lorg/fest/assertions/CollectionAssert; 0.0, lineNumber=149, susp=0.23904572186687872]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.internal.invocation.InvocationBuilder, methodName=org.mockito.internal.invocation.InvocationBuilder{argTypes([Ljava/lang/Class;)Lorg/mockito/internal/invocation/InvocationBuilder; 0.0, lineNumber=114, susp=0.20203050891044214]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.internal.invocation.InvocationBuilder, methodName=org.mockito.internal.invocation.InvocationBuilder{argTypes([Ljava/lang/Class;)Lorg/mockito/internal/invocation/InvocationBuilder; 0.0, lineNumber=115, susp=0.20203050891044214]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoader, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoader{findClass(Ljava/lang/String;)Ljava/lang/Class; 0.0, lineNumber=98, susp=0.1889822365046136]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoader, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoader{findClass(Ljava/lang/String;)Ljava/lang/Class; 0.0, lineNumber=96, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoader, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoader{findClass(Ljava/lang/String;)Ljava/lang/Class; 0.0, lineNumber=97, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder{withClassDefinition(Ljava/lang/String;[B)Lorg/mockitoutil/ClassLoaders$InMemoryClassLoaderBuilder; 0.0, lineNumber=79, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder{withClassDefinition(Ljava/lang/String;[B)Lorg/mockitoutil/ClassLoaders$InMemoryClassLoaderBuilder; 0.0, lineNumber=80, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder, methodName=org.mockitoutil.ClassLoaders$InMemoryClassLoaderBuilder{build()Ljava/lang/ClassLoader; 0.0, lineNumber=84, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.ClassLoaders, methodName=org.mockitoutil.ClassLoaders{inMemoryClassLoader()Lorg/mockitoutil/ClassLoaders$InMemoryClassLoaderBuilder; 0.0, lineNumber=22, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.SimpleClassGenerator, methodName=org.mockitoutil.SimpleClassGenerator{makeMarkerInterface(Ljava/lang/String;)[B 0.0, lineNumber=12, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.SimpleClassGenerator, methodName=org.mockitoutil.SimpleClassGenerator{makeMarkerInterface(Ljava/lang/String;)[B 0.0, lineNumber=14, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.SimpleClassGenerator, methodName=org.mockitoutil.SimpleClassGenerator{makeMarkerInterface(Ljava/lang/String;)[B 0.0, lineNumber=15, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.SimpleClassGenerator, methodName=org.mockitoutil.SimpleClassGenerator{makeMarkerInterface(Ljava/lang/String;)[B 0.0, lineNumber=16, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockitoutil.SimpleClassGenerator, methodName=org.mockitoutil.SimpleClassGenerator{makeMarkerInterface(Ljava/lang/String;)[B 0.0, lineNumber=18, susp=0.1543033499620919]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator, methodName=org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator{newInstance()Ljava/lang/Object; 0.0, lineNumber=45, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.ObjenesisBase, methodName=org.objenesis.ObjenesisBase{newInstance(Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=73, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.ObjenesisBase, methodName=org.objenesis.ObjenesisBase{getInstantiatorOf(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator; 0.0, lineNumber=86, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.ObjenesisBase, methodName=org.objenesis.ObjenesisBase{getInstantiatorOf(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator; 0.0, lineNumber=89, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.ObjenesisBase, methodName=org.objenesis.ObjenesisBase{getInstantiatorOf(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator; 0.0, lineNumber=90, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.objenesis.ObjenesisBase, methodName=org.objenesis.ObjenesisBase{getInstantiatorOf(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator; 0.0, lineNumber=97, susp=0.13661112471817388]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setInterfaces([Ljava/lang/Class;)V 0.0, lineNumber=184, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setInterfaces([Ljava/lang/Class;)V 0.0, lineNumber=185, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setCallbackFilter(Lorg/mockito/cglib/proxy/CallbackFilter;)V 0.0, lineNumber=196, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setCallbackFilter(Lorg/mockito/cglib/proxy/CallbackFilter;)V 0.0, lineNumber=197, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setUseFactory(Z)V 0.0, lineNumber=236, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setUseFactory(Z)V 0.0, lineNumber=237, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setCallbackTypes([Ljava/lang/Class;)V 0.0, lineNumber=271, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setCallbackTypes([Ljava/lang/Class;)V 0.0, lineNumber=274, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setCallbackTypes([Ljava/lang/Class;)V 0.0, lineNumber=275, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createClass()Ljava/lang/Class; 0.0, lineNumber=317, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createClass()Ljava/lang/Class; 0.0, lineNumber=318, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSerialVersionUID(Ljava/lang/Long;)V 0.0, lineNumber=326, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSerialVersionUID(Ljava/lang/Long;)V 0.0, lineNumber=327, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=360, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{firstInstance(Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=537, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setClassLoader(Ljava/lang/ClassLoader;)V 0.0, lineNumber=94, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setClassLoader(Ljava/lang/ClassLoader;)V 0.0, lineNumber=95, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setNamingPolicy(Lorg/mockito/cglib/core/NamingPolicy;)V 0.0, lineNumber=103, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setNamingPolicy(Lorg/mockito/cglib/core/NamingPolicy;)V 0.0, lineNumber=105, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setNamingPolicy(Lorg/mockito/cglib/core/NamingPolicy;)V 0.0, lineNumber=106, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineTypes([Ljava/lang/Class;)[Lorg/mockito/asm/Type; 0.0, lineNumber=23, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineTypes([Ljava/lang/Class;)[Lorg/mockito/asm/Type; 0.0, lineNumber=24, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineTypes([Ljava/lang/Class;)[Lorg/mockito/asm/Type; 0.0, lineNumber=25, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineTypes([Ljava/lang/Class;)[Lorg/mockito/asm/Type; 0.0, lineNumber=27, susp=0.13596028192753293]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{getNames([Ljava/lang/Class;)[Ljava/lang/String; 0.0, lineNumber=255, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{getNames([Ljava/lang/Class;)[Ljava/lang/String; 0.0, lineNumber=257, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{getNames([Ljava/lang/Class;)[Ljava/lang/String; 0.0, lineNumber=258, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{getNames([Ljava/lang/Class;)[Ljava/lang/String; 0.0, lineNumber=261, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType(Ljava/lang/String;)Lorg/mockito/asm/Type; 0.0, lineNumber=207, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=228, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=249, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType([CI)Lorg/mockito/asm/Type; 0.0, lineNumber=339, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType([CI)Lorg/mockito/asm/Type; 0.0, lineNumber=372, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType([CI)Lorg/mockito/asm/Type; 0.0, lineNumber=373, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType([CI)Lorg/mockito/asm/Type; 0.0, lineNumber=374, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getType([CI)Lorg/mockito/asm/Type; 0.0, lineNumber=376, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/Class;)Ljava/lang/String; 0.0, lineNumber=578, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/Class;)Ljava/lang/String; 0.0, lineNumber=579, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/Class;)Ljava/lang/String; 0.0, lineNumber=580, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=624, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=626, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=649, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=653, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=654, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=655, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=656, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=657, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=658, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=660, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{getDescriptor(Ljava/lang/StringBuffer;Ljava/lang/Class;)V 0.0, lineNumber=661, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=748, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=751, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=754, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=755, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=758, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=759, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=762, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=763, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{equals(Ljava/lang/Object;)Z 0.0, lineNumber=768, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{hashCode()I 0.0, lineNumber=777, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{hashCode()I 0.0, lineNumber=778, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{hashCode()I 0.0, lineNumber=779, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{hashCode()I 0.0, lineNumber=780, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.asm.Type, methodName=org.mockito.asm.Type{hashCode()I 0.0, lineNumber=783, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSuperclass(Ljava/lang/Class;)V 0.0, lineNumber=167, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSuperclass(Ljava/lang/Class;)V 0.0, lineNumber=169, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSuperclass(Ljava/lang/Class;)V 0.0, lineNumber=175, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=330, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=337, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=340, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=353, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=359, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=369, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createHelper()Ljava/lang/Object; 0.0, lineNumber=372, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createHelper()Ljava/lang/Object; 0.0, lineNumber=373, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createHelper()Ljava/lang/Object; 0.0, lineNumber=378, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{firstInstance(Ljava/lang/Class;)Ljava/lang/Object; 0.0, lineNumber=536, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setNamePrefix(Ljava/lang/String;)V 0.0, lineNumber=62, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{setNamePrefix(Ljava/lang/String;)V 0.0, lineNumber=63, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=169, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=170, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=173, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=176, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=179, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{getClassLoader()Ljava/lang/ClassLoader; 0.0, lineNumber=182, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=189, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=191, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=192, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=193, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=194, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=195, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=203, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=76, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=77, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=78, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=79, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=80, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=83, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=86, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.CallbackInfo, methodName=org.mockito.cglib.proxy.CallbackInfo{determineType(Ljava/lang/Class;)Lorg/mockito/asm/Type; 0.0, lineNumber=89, susp=0.1358957080545352]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=361, susp=0.13521746935049633]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{validate()V 0.0, lineNumber=364, susp=0.13521746935049633]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{getNames([Ljava/lang/Class;)[Ljava/lang/String; 0.0, lineNumber=259, susp=0.13511505847741628]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=199, susp=0.13184027338427434]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=200, susp=0.13184027338427434]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=201, susp=0.13184027338427434]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{findPackageProtected([Ljava/lang/Class;)I 0.0, lineNumber=389, susp=0.13130912486166763]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{findPackageProtected([Ljava/lang/Class;)I 0.0, lineNumber=390, susp=0.13130912486166763]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{setSuperclass(Ljava/lang/Class;)V 0.0, lineNumber=171, susp=0.13130912486166763]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createHelper()Ljava/lang/Object; 0.0, lineNumber=375, susp=0.13130912486166763]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.proxy.Enhancer, methodName=org.mockito.cglib.proxy.Enhancer{createHelper()Ljava/lang/Object; 0.0, lineNumber=376, susp=0.13130912486166763]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=231, susp=0.1267731382092775]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.AbstractClassGenerator, methodName=org.mockito.cglib.core.AbstractClassGenerator{create(Ljava/lang/Object;)Ljava/lang/Object; 0.0, lineNumber=232, susp=0.1267731382092775]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.cglib.core.ReflectUtils, methodName=org.mockito.cglib.core.ReflectUtils{findPackageProtected([Ljava/lang/Class;)I 0.0, lineNumber=394, susp=0.12646127269821972]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.internal.invocation.InvocationBuilder, methodName=org.mockito.internal.invocation.InvocationBuilder{args([Ljava/lang/Object;)Lorg/mockito/internal/invocation/InvocationBuilder; 0.0, lineNumber=77, susp=0.10286889997472794]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.mockito.internal.invocation.InvocationBuilder, methodName=org.mockito.internal.invocation.InvocationBuilder{args([Ljava/lang/Object;)Lorg/mockito/internal/invocation/InvocationBuilder; 0.0, lineNumber=78, susp=0.10286889997472794]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 550,  366
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 366
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 366, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Defects4J_Mockito_6/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/classes/main/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 25730
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= test
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.mockitousage.matchers.AnyXMatchersAcceptNullsTest:org.mockitousage.matchers.MatchersTest:org.mockitousage.matchers.NewMatchersTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Mockito-6
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build/classes/test/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Defects4J_Mockito_6/build/classes/main/:/tmp/jKali_Defects4J_Mockito_6/build/classes/test/:/tmp/jKali_Defects4J_Mockito_6/lib/repackaged/cglib-and-asm-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/objenesis-2.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/run/com.springsource.org.hamcrest.core-1.1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/powermock-reflect-1.2.5.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-util-1.1.4.jar:/tmp/jKali_Defects4J_Mockito_6/lib/test/fest-assert-1.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/cglib-and-asm-1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/objenesis-2.1-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/sources/com.springsource.org.hamcrest.core-1.1.0-sources.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/sorcerer.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/bnd-0.0.313.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jarjar-1.0.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/jaxen-1.1.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/maven-ant-tasks-2.0.9.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant4hg-V0.07.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/ant-googlecode-0.0.3.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/pmd-4.1.jar:/tmp/jKali_Defects4J_Mockito_6/lib/build/asm-3.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-all-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/hamcrest-core-1.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.2.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/objenesis-2.1.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/assertj-core-2.1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-util-1.1.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cobertura-2.0.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/asm-all-5.0.4.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/powermock-reflect-1.2.5.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/fest-assert-1.3.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Mockito/lib/cglib-and-asm-1.0.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar:/home/tdurieux/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/cobertura-2.0.3.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 73, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < (actualTypeArguments.length); i++) { 	java.lang.reflect.TypeVariable typeParamet[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (actualTypeArgument instanceof java.lang.reflect.WildcardType) { 	contextualActualTypeParameters.[...] ` -topatch--> `if (true) { 	this.contextualActualTypeParameters.put(typeParameter, boundsOf(((java.lang.reflect.Wil[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (actualTypeArgument instanceof java.lang.reflect.WildcardType) { 	contextualActualTypeParameters.[...] ` -topatch--> `if (false) { 	this.contextualActualTypeParameters.put(typeParameter, boundsOf(((java.lang.reflect.Wi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (actualTypeArgument instanceof java.lang.reflect.WildcardType) { 	contextualActualTypeParameters.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (typeParameter != actualTypeArgument) { 	contextualActualTypeParameters.put(typeParameter, actual[...] ` -topatch--> `if (true) { 	this.contextualActualTypeParameters.put(typeParameter, actualTypeArgument); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (typeParameter != actualTypeArgument) { 	contextualActualTypeParameters.put(typeParameter, actual[...] ` -topatch--> `if (false) { 	this.contextualActualTypeParameters.put(typeParameter, actualTypeArgument); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (typeParameter != actualTypeArgument) { 	contextualActualTypeParameters.put(typeParameter, actual[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 80, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `contextualActualTypeParameters.put(typeParameter, actualTypeArgument) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 278, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(genericInterface) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 88, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariableIfNotPresent(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(contextualActualTypeParameters.containsKey(typeVariable))) { 	contextualActualTypeParameters.p[...] ` -topatch--> `if (true) { 	this.contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(contextualActualTypeParameters.containsKey(typeVariable))) { 	contextualActualTypeParameters.p[...] ` -topatch--> `if (false) { 	this.contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));  }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(contextualActualTypeParameters.containsKey(typeVariable))) { 	contextualActualTypeParameters.p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(classType instanceof java.lang.reflect.ParameterizedType)) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(classType instanceof java.lang.reflect.ParameterizedType)) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(classType instanceof java.lang.reflect.ParameterizedType)) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 68, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 229, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.util.Checks.checkNotNull(type, "type") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection.GenericMetad[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromClassGeneric[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection.GenericMetad[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromClassGeneri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 230, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection.GenericMetad[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.inte[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.ParameterizedRet[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.inte[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.ParameterizedRe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.inte[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 94, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((typeParameter.getBounds()[0]) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf(((j[...] ` -topatch--> `if (true) { 	return boundsOf(((java.lang.reflect.TypeVariable) (typeParameter.getBounds()[0]))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((typeParameter.getBounds()[0]) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf(((j[...] ` -topatch--> `if (false) { 	return boundsOf(((java.lang.reflect.TypeVariable) (typeParameter.getBounds()[0]))); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((typeParameter.getBounds()[0]) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf(((j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 41, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validateIndexWithinInvocationRange(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 51, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Field field : fields) { 	org.mockito.internal.util.reflection.InstanceField i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 53, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `instanceDeclaredFields.add(instanceField) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericSuperclass instanceof java.lang.reflect.ParameterizedType) { 	java.lang.reflect.Type rawT[...] ` -topatch--> `if (true) { 	java.lang.reflect.Type rawType = ((java.lang.reflect.ParameterizedType) (genericSupercl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericSuperclass instanceof java.lang.reflect.ParameterizedType) { 	java.lang.reflect.Type rawT[...] ` -topatch--> `if (false) { 	java.lang.reflect.Type rawType = ((java.lang.reflect.ParameterizedType) (genericSuperc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (genericSuperclass instanceof java.lang.reflect.ParameterizedType) { 	java.lang.reflect.Type rawT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 275, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeParametersOn(clazz.getTypeParameters()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 276, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(clazz.getGenericSuperclass()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 277, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Type genericInterface : clazz.getGenericInterfaces()) { 	registerTypeVariable[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 87, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.TypeVariable type : typeParameters) { 	registerTypeVariableIfNotPresent(type)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 231, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromClassGenericMetadataSuppo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 45, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `instanceFields.addAll(org.mockito.internal.util.reflection.Fields.instanceFieldsIn(instance, instanc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 337, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeParametersOn(typeParameters) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 341, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(parameterizedType) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 207, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.mockito.internal.util.reflection.GenericMetadataSupport.ParameterizedReturnType(this,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.NotGenericReturn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.NotGenericRetur[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.Class) { 	return new org.mockito.internal.util.reflection[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return (invocation.getArguments().length) > actualArgu[...] ` -topatch--> `if (true) { 	return (invocation.getArguments().length) > actualArgumentPosition; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return (invocation.getArguments().length) > actualArgu[...] ` -topatch--> `if (false) { 	return (invocation.getArguments().length) > actualArgumentPosition; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return (invocation.getArguments().length) > actualArgu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(argumentPositionInRange(invocation))) { 	new org.mockito.exceptions.Reporter().invalidArgument[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().invalidArgumentPositionRangeAtInvocationTime(invo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(argumentPositionInRange(invocation))) { 	new org.mockito.exceptions.Reporter().invalidArgument[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().invalidArgumentPositionRangeAtInvocationTime(inv[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(argumentPositionInRange(invocation))) { 	new org.mockito.exceptions.Reporter().invalidArgument[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (actualArgumentPosition < 0) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (actualArgumentPosition < 0) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (actualArgumentPosition < 0) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 124, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.mockito.internal.util.reflection.InstanceField instanceField : instanceFields) { 	fieldName[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fieldNames.add(instanceField.name()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((argumentPosition != (org.mockito.internal.stubbing.answers.ReturnsArgumentAt.LAST_ARGUMENT)) &&[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().invalidArgumentRangeAtIdentityAnswerCreationTime([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((argumentPosition != (org.mockito.internal.stubbing.answers.ReturnsArgumentAt.LAST_ARGUMENT)) &&[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().invalidArgumentRangeAtIdentityAnswerCreationTime[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((argumentPosition != (org.mockito.internal.stubbing.answers.ReturnsArgumentAt.LAST_ARGUMENT)) &&[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `contextualActualTypeParameters.put(typeParameter, boundsOf(((java.lang.reflect.WildcardType) (actual[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((wildCardBoundedType.firstBound()) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf[...] ` -topatch--> `if (true) { 	return boundsOf(((java.lang.reflect.TypeVariable) (wildCardBoundedType.firstBound())));[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((wildCardBoundedType.firstBound()) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf[...] ` -topatch--> `if (false) { 	return boundsOf(((java.lang.reflect.TypeVariable) (wildCardBoundedType.firstBound())))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((wildCardBoundedType.firstBound()) instanceof java.lang.reflect.TypeVariable) { 	return boundsOf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) { 	java.lang.reflect.TypeVariable typeVariable =[...] ` -topatch--> `if (true) { 	java.lang.reflect.TypeVariable typeVariable = ((java.lang.reflect.TypeVariable) (type))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) { 	java.lang.reflect.TypeVariable typeVariable =[...] ` -topatch--> `if (false) { 	java.lang.reflect.TypeVariable typeVariable = ((java.lang.reflect.TypeVariable) (type)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) { 	java.lang.reflect.TypeVariable typeVariable =[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 125, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return boundsOf(((java.lang.reflect.TypeVariable) (wildCardBoundedType.firstBound()))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 170, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.TypeVariable typeParameter : typeParameters) {  	java.lang.reflect.Type actua[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `actualTypeArguments.put(typeParameter, actualType) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.internal.util.ref[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromParameterize[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.internal.util.ref[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromParameteriz[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return new org.mockito.internal.util.ref[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 234, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.mockito.internal.util.reflection.GenericMetadataSupport.FromParameterizedTypeGenericM[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 309, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(parameterizedType.getRawType()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 310, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(parameterizedType) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.InstanceField line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fieldReader) == null) { 	fieldReader = new org.mockito.internal.util.reflection.FieldReader(ins[...] ` -topatch--> `if (true) { 	this.fieldReader = new org.mockito.internal.util.reflection.FieldReader(this.instance, [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.InstanceField line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((fieldReader) == null) { 	fieldReader = new org.mockito.internal.util.reflection.FieldReader(ins[...] ` -topatch--> `if (false) { 	this.fieldReader = new org.mockito.internal.util.reflection.FieldReader(this.instance,[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.InstanceField line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((fieldReader) == null) { 	fieldReader = new org.mockito.internal.util.reflection.FieldReader(ins[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.InstanceField line: 95, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `fieldReader = new org.mockito.internal.util.reflection.FieldReader(instance, field) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 396, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawType())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.Checks line: 14, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	throw new java.lang.NullPointerException((checkedValue + " should not be null"[...] ` -topatch--> `if (true) { 	throw new java.lang.NullPointerException((checkedValue + " should not be null")); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.Checks line: 14, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	throw new java.lang.NullPointerException((checkedValue + " should not be null"[...] ` -topatch--> `if (false) { 	throw new java.lang.NullPointerException((checkedValue + " should not be null")); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.Checks line: 14, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value == null) { 	throw new java.lang.NullPointerException((checkedValue + " should not be null"[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 130, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.mockito.listeners.InvocationListener listener : listeners) { 	if (listener == null) { 		new[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (listener == null) { 	new org.mockito.exceptions.Reporter().invocationListenerDoesNotAcceptNullPa[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().invocationListenerDoesNotAcceptNullParameters(); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (listener == null) { 	new org.mockito.exceptions.Reporter().invocationListenerDoesNotAcceptNullPa[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().invocationListenerDoesNotAcceptNullParameters();[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (listener == null) { 	new org.mockito.exceptions.Reporter().invocationListenerDoesNotAcceptNullPa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.invocationListeners.add(listener) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 372, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeParametersOn(typeParameters) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 376, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Type type : typeVariable.getBounds()) { 	registerTypeVariablesOn(type); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 377, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 379, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeParametersOn(new java.lang.reflect.TypeVariable[]{ typeVariable }) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 380, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawType) == null) { 	rawType = extractRawTypeOf(typeVariable); } ` -topatch--> `if (true) { 	this.rawType = extractRawTypeOf(this.typeVariable); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawType) == null) { 	rawType = extractRawTypeOf(typeVariable); } ` -topatch--> `if (false) { 	this.rawType = extractRawTypeOf(this.typeVariable); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawType) == null) { 	rawType = extractRawTypeOf(typeVariable); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 386, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `rawType = extractRawTypeOf(typeVariable) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return ((java.lang.Class<?>) (type)); } ` -topatch--> `if (true) { 	return ((java.lang.Class<?>) (type)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return ((java.lang.Class<?>) (type)); } ` -topatch--> `if (false) { 	return ((java.lang.Class<?>) (type)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 392, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.Class) { 	return ((java.lang.Class<?>) (type)); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return ((java.lang.Class<?>) (((java.lan[...] ` -topatch--> `if (true) { 	return ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawType[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return ((java.lang.Class<?>) (((java.lan[...] ` -topatch--> `if (false) { 	return ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (type)).getRawTyp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 395, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.ParameterizedType) { 	return ((java.lang.Class<?>) (((java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.mockito.internal.util.reflection.GenericMetadataSupport.BoundedType) { 	retu[...] ` -topatch--> `if (true) { 	return extractRawTypeOf(((org.mockito.internal.util.reflection.GenericMetadataSupport.B[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.mockito.internal.util.reflection.GenericMetadataSupport.BoundedType) { 	retu[...] ` -topatch--> `if (false) { 	return extractRawTypeOf(((org.mockito.internal.util.reflection.GenericMetadataSupport.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.mockito.internal.util.reflection.GenericMetadataSupport.BoundedType) { 	retu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) {     	return extractRawTypeOf(contextualActualT[...] ` -topatch--> `if (true) {     	return extractRawTypeOf(this.contextualActualTypeParameters.get(type)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) {     	return extractRawTypeOf(contextualActualT[...] ` -topatch--> `if (false) {     	return extractRawTypeOf(this.contextualActualTypeParameters.get(type)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof java.lang.reflect.TypeVariable) {     	return extractRawTypeOf(contextualActualT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 406, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return extractRawTypeOf(contextualActualTypeParameters.get(type)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.TypeVariable) { 	return new org.mockito.internal.[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableRetu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.TypeVariable) { 	return new org.mockito.internal.[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableRet[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (genericReturnType instanceof java.lang.reflect.TypeVariable) { 	return new org.mockito.internal.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 210, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType(this, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((listeners == null) || ((listeners.length) == 0)) { 	new org.mockito.exceptions.Reporter().invoc[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().invocationListenersRequiresAtLeastOneListener(); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((listeners == null) || ((listeners.length) == 0)) { 	new org.mockito.exceptions.Reporter().invoc[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().invocationListenersRequiresAtLeastOneListener();[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((listeners == null) || ((listeners.length) == 0)) { 	new org.mockito.exceptions.Reporter().invoc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 39, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.instance.InstantiatorProvider line: 13, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.mockito.internal.creation.instance.InstantiatorProvider.INSTANCE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `mockingProgress.mockingStarted(mock, typeToMock) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.progress.ThreadSafeMockingProgress.threadSafely().mockingStarted(mock, classToM[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockUtil line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spiedInstance != null) { 	new org.mockito.internal.util.reflection.LenientCopyTool().copyToMock([...] ` -topatch--> `if (true) { 	new org.mockito.internal.util.reflection.LenientCopyTool().copyToMock(spiedInstance, mo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockUtil line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spiedInstance != null) { 	new org.mockito.internal.util.reflection.LenientCopyTool().copyToMock([...] ` -topatch--> `if (false) { 	new org.mockito.internal.util.reflection.LenientCopyTool().copyToMock(spiedInstance, m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockUtil line: 36, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (spiedInstance != null) { 	new org.mockito.internal.util.reflection.LenientCopyTool().copyToMock([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((listener) instanceof org.mockito.internal.listeners.MockingStartedListener) { 	((org.mockito.in[...] ` -topatch--> `if (true) { 	((org.mockito.internal.listeners.MockingStartedListener) (this.listener)).mockingStarte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((listener) instanceof org.mockito.internal.listeners.MockingStartedListener) { 	((org.mockito.in[...] ` -topatch--> `if (false) { 	((org.mockito.internal.listeners.MockingStartedListener) (this.listener)).mockingStart[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((listener) instanceof org.mockito.internal.listeners.MockingStartedListener) { 	((org.mockito.in[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validateMostStuff() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.CglibMockMaker line: 23, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `new org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature().enableSerializationAcrossJVM[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.CglibMockMaker line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(handler instanceof org.mockito.internal.InternalMockHandler)) { 	throw new org.mockito.excepti[...] ` -topatch--> `if (true) { 	throw new org.mockito.exceptions.base.MockitoException(("At the moment you cannot provi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.CglibMockMaker line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(handler instanceof org.mockito.internal.InternalMockHandler)) { 	throw new org.mockito.excepti[...] ` -topatch--> `if (false) { 	throw new org.mockito.exceptions.base.MockitoException(("At the moment you cannot prov[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.CglibMockMaker line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(handler instanceof org.mockito.internal.InternalMockHandler)) { 	throw new org.mockito.excepti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.settings.CreationSettings line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.typeToMock = typeToMock ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.settings.CreationSettings line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.extraInterfaces = extraInterfaces ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.settings.CreationSettings line: 89, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mockName = mockName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 179, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `settings.setMockName(new org.mockito.internal.util.MockNameImpl(source.getName(), typeToMock)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 180, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `settings.setTypeToMock(typeToMock) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `settings.setExtraInterfaces(org.mockito.internal.creation.MockSettingsImpl.prepareExtraInterfaces(so[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isSerializable()) { 	interfaces.add(java.io.Serializable.class); } ` -topatch--> `if (true) { 	interfaces.add(java.io.Serializable.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isSerializable()) { 	interfaces.add(java.io.Serializable.class); } ` -topatch--> `if (false) { 	interfaces.add(java.io.Serializable.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isSerializable()) { 	interfaces.add(java.io.Serializable.class); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((settings.getSerializableMode()) == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS)) {  [...] ` -topatch--> `if (true) {   	settings.getExtraInterfaces().add(org.mockito.internal.creation.cglib.AcrossJVMSerial[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((settings.getSerializableMode()) == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS)) {  [...] ` -topatch--> `if (false) {   	settings.getExtraInterfaces().add(org.mockito.internal.creation.cglib.AcrossJVMSeria[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.AcrossJVMSerializationFeature line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((settings.getSerializableMode()) == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS)) {  [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (usingConstructor && (mode == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS))) { 	new or[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().usingConstructorWithFancySerializable(mode); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (usingConstructor && (mode == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS))) { 	new or[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().usingConstructorWithFancySerializable(mode); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (usingConstructor && (mode == (org.mockito.mock.SerializableMode.ACROSS_CLASSLOADERS))) { 	new or[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 175, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validator.validateConstructorUse(source.isUsingConstructor(), source.getSerializableMode()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validator.validateSerializable(typeToMock, source.isSerializable()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validator.validateMockedType(typeToMock, source.getSpiedInstance()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.mockito.internal.creation.MockSettingsImpl.class.isInstance(settings))) { 	throw new java.[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException( 	((("Unexpected implementation of '" + (s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.mockito.internal.creation.MockSettingsImpl.class.isInstance(settings))) { 	throw new java.[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException( 	((("Unexpected implementation of '" + ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 52, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.mockito.internal.creation.MockSettingsImpl.class.isInstance(settings))) { 	throw new java.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 20, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(mockUtil.isTypeMockable(classToMock))) { 	new org.mockito.exceptions.Reporter().cannotMockFina[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().cannotMockFinalClass(classToMock); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 20, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(mockUtil.isTypeMockable(classToMock))) { 	new org.mockito.exceptions.Reporter().cannotMockFina[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().cannotMockFinalClass(classToMock); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 20, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(mockUtil.isTypeMockable(classToMock))) { 	new org.mockito.exceptions.Reporter().cannotMockFina[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((serializable &&  (!(classToMock.isInterface()))) &&  (!(java.io.Serializable.class.isAssignabl[...] ` -topatch--> `if (true)     { 	new org.mockito.exceptions.Reporter().serializableWontWorkForObjectsThatDontImpleme[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((serializable &&  (!(classToMock.isInterface()))) &&  (!(java.io.Serializable.class.isAssignabl[...] ` -topatch--> `if (false)     { 	new org.mockito.exceptions.Reporter().serializableWontWorkForObjectsThatDontImplem[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 59, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((serializable &&  (!(classToMock.isInterface()))) &&  (!(java.io.Serializable.class.isAssignabl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 167, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validator.validateType(typeToMock) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 168, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validator.validateExtraInterfaces(typeToMock, source.getExtraInterfaces()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 59, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return mockedType.cast(proxyInstance) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 71, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setConstructorsAccessible(mockedType, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 147, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `proxy.setCallbacks(new org.mockito.cglib.proxy.Callback[]{ interceptor, org.mockito.internal.creatio[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 26, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (extraInterfaces == null) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 26, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (extraInterfaces == null) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 26, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (extraInterfaces == null) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 30, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class i : extraInterfaces) { 	if (classToMock == i) { 		new org.mockito.exceptions.Re[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((classToMock == null) || (spiedInstance == null)) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((classToMock == null) || (spiedInstance == null)) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockCreationValidator line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((classToMock == null) || (spiedInstance == null)) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 30, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.creation.util.SearchingClassLoader.addIfNewElement(loaders, first.getClassLoade[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 31, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class<?> c : others) { 	org.mockito.internal.creation.util.SearchingClassLoader.addIf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 32, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.creation.util.SearchingClassLoader.addIfNewElement(loaders, c.getClassLoader()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 40, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.creation.util.SearchingClassLoader.addIfNewElement(loaders, org.mockito.interna[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 44, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.creation.util.SearchingClassLoader.addIfNewElement(loaders, java.lang.Thread.cu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 55, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = (parentLoaders.size()) - 2; i >= 0; i--) { 	loader = new org.mockito.internal.creation.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c != null) && (!(loaders.contains(c)))) { 	loaders.add(c); } ` -topatch--> `if (true) { 	loaders.add(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((c != null) && (!(loaders.contains(c)))) { 	loaders.add(c); } ` -topatch--> `if (false) { 	loaders.add(c); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((c != null) && (!(loaders.contains(c)))) { 	loaders.add(c); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loaders.add(c) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 56, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setConstructorsAccessible(mockedType, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `proxyClass = createProxyClass(mockedType, ancillaryTypes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `proxyInstance = createProxy(proxyClass, interceptor) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 85, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.reflect.Constructor<?> constructor : mockedType.getDeclaredConstructors()) { 	constru[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType == (java.lang.Object.class)) { 	mockedType = org.mockito.internal.creation.cglib.Clas[...] ` -topatch--> `if (true) { 	mockedType = org.mockito.internal.creation.cglib.ClassImposterizer.ClassWithSuperclassT[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType == (java.lang.Object.class)) { 	mockedType = org.mockito.internal.creation.cglib.Clas[...] ` -topatch--> `if (false) { 	mockedType = org.mockito.internal.creation.cglib.ClassImposterizer.ClassWithSuperclass[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType == (java.lang.Object.class)) { 	mockedType = org.mockito.internal.creation.cglib.Clas[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setClassLoader(org.mockito.internal.creation.util.SearchingClassLoader.combineLoadersOf(all[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 104, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setUseFactory(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType.isInterface()) { 	enhancer.setSuperclass(java.lang.Object.class); 	enhancer.setInterf[...] ` -topatch--> `if (true) { 	enhancer.setSuperclass(java.lang.Object.class); 	enhancer.setInterfaces(allMockedTypes)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType.isInterface()) { 	enhancer.setSuperclass(java.lang.Object.class); 	enhancer.setInterf[...] ` -topatch--> `if (false) { 	enhancer.setSuperclass(java.lang.Object.class); 	enhancer.setInterfaces(allMockedTypes[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mockedType.isInterface()) { 	enhancer.setSuperclass(java.lang.Object.class); 	enhancer.setInterf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setCallbackTypes(new java.lang.Class[]{ org.mockito.cglib.proxy.MethodInterceptor.class, or[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 113, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setCallbackFilter(org.mockito.internal.creation.cglib.ClassImposterizer.IGNORE_BRIDGE_METHO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((mockedType.getSigners()) != null) { 	enhancer.setNamingPolicy(org.mockito.internal.creation.cgl[...] ` -topatch--> `if (true) { 	enhancer.setNamingPolicy(org.mockito.internal.creation.cglib.ClassImposterizer.NAMING_P[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((mockedType.getSigners()) != null) { 	enhancer.setNamingPolicy(org.mockito.internal.creation.cgl[...] ` -topatch--> `if (false) { 	enhancer.setNamingPolicy(org.mockito.internal.creation.cglib.ClassImposterizer.NAMING_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((mockedType.getSigners()) != null) { 	enhancer.setNamingPolicy(org.mockito.internal.creation.cgl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 117, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setNamingPolicy(org.mockito.internal.creation.cglib.MockitoNamingPolicy.INSTANCE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setSerialVersionUID(42L) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 123, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return enhancer.createClass() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 143, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `proxy = instantiator.newInstance(proxyClass) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 153, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `all[0] = first ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(rest, 0, all, 1, rest.length) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.instance.InstantiatorProvider line: 10, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isUsingConstructor()) { 	return new org.mockito.internal.creation.instance.ConstructorI[...] ` -topatch--> `if (true) { 	return new org.mockito.internal.creation.instance.ConstructorInstantiator(settings.getO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.instance.InstantiatorProvider line: 10, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isUsingConstructor()) { 	return new org.mockito.internal.creation.instance.ConstructorI[...] ` -topatch--> `if (false) { 	return new org.mockito.internal.creation.instance.ConstructorInstantiator(settings.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.instance.InstantiatorProvider line: 10, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (settings.isUsingConstructor()) { 	return new org.mockito.internal.creation.instance.ConstructorI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultAnswer = defaultAnswer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultAnswer == null) { 	new org.mockito.exceptions.Reporter().defaultAnswerDoesNotAcceptNullPa[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().defaultAnswerDoesNotAcceptNullParameter(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultAnswer == null) { 	new org.mockito.exceptions.Reporter().defaultAnswerDoesNotAcceptNullPa[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().defaultAnswerDoesNotAcceptNullParameter(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultAnswer == null) { 	new org.mockito.exceptions.Reporter().defaultAnswerDoesNotAcceptNullPa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((nextToSearch) != null) { 	return nextToSearch.loadClass(name); }else { 	return super.findClass([...] ` -topatch--> `if (true) { 	return this.nextToSearch.loadClass(name); }else { 	return super.findClass(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((nextToSearch) != null) { 	return nextToSearch.loadClass(name); }else { 	return super.findClass([...] ` -topatch--> `if (false) { 	return this.nextToSearch.loadClass(name); }else { 	return super.findClass(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nextToSearch) != null) { 	return nextToSearch.loadClass(name); }else { 	return super.findClass([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.util.SearchingClassLoader line: 71, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return nextToSearch.loadClass(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet line: 100, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0, objectsLength = array.length; i < objectsLength; i++) { 	if (iterator.hasNext()) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (iterator.hasNext()) { 	array[i] = ((T) (iterator.next())); } ` -topatch--> `if (true) { 	array[i] = ((T) (iterator.next())); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (iterator.hasNext()) { 	array[i] = ((T) (iterator.next())); } ` -topatch--> `if (false) { 	array[i] = ((T) (iterator.next())); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (iterator.hasNext()) { 	array[i] = ((T) (iterator.next())); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet line: 102, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `array[i] = ((T) (iterator.next())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (listener.getClass().equals(clazz)) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (listener.getClass().equals(clazz)) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (listener.getClass().equals(clazz)) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.MockSettingsImpl line: 142, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations line: 49, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw e.getCause() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 116, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.mockito.internal.util.reflection.InstanceField instanceField : instanceFields) { 	values.ad[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 117, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `values.add(instanceField.read()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 31, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (java.lang.Class<?> clazz = instance.getClass(); clazz != (java.lang.Object.class); clazz = claz[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.Fields line: 32, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `instanceFields.addAll(org.mockito.internal.util.reflection.Fields.instanceFieldsIn(instance, clazz.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setSuperclass(java.lang.Object.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.creation.cglib.ClassImposterizer line: 107, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enhancer.setInterfaces(allMockedTypes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockNameImpl line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((className.length()) == 0) {  	className = clazz.getSuperclass().getSimpleName(); } ` -topatch--> `if (true) {  	className = clazz.getSuperclass().getSimpleName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockNameImpl line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((className.length()) == 0) {  	className = clazz.getSuperclass().getSimpleName(); } ` -topatch--> `if (false) {  	className = clazz.getSuperclass().getSimpleName(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.MockNameImpl line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((className.length()) == 0) {  	className = clazz.getSuperclass().getSimpleName(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 63, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(stubbed) { 	if (isConsecutive) { 		stubbed.getFirst().addAnswer(answer); 	}else { 		stu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConsecutive) { 	stubbed.getFirst().addAnswer(answer); }else { 	stubbed.addFirst(new org.mockit[...] ` -topatch--> `if (true) { 	this.stubbed.getFirst().addAnswer(answer); }else { 	this.stubbed.addFirst(new org.mocki[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isConsecutive) { 	stubbed.getFirst().addAnswer(answer); }else { 	stubbed.addFirst(new org.mockit[...] ` -topatch--> `if (false) { 	this.stubbed.getFirst().addAnswer(answer); }else { 	this.stubbed.addFirst(new org.mock[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isConsecutive) { 	stubbed.getFirst().addAnswer(answer); }else { 	stubbed.addFirst(new org.mockit[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 67, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stubbed.addFirst(new org.mockito.internal.stubbing.StubbedInvocationMatcher(invocationForStubbing, a[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.MethodInfo line: 41, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return method.getReturnType().isAssignableFrom(clazz) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ReturnsArgumentAt) { 	org.mockito.intern[...] ` -topatch--> `if (true) { 	org.mockito.internal.stubbing.answers.ReturnsArgumentAt returnsArgumentAt = ((org.mocki[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ReturnsArgumentAt) { 	org.mockito.intern[...] ` -topatch--> `if (false) { 	org.mockito.internal.stubbing.answers.ReturnsArgumentAt returnsArgumentAt = ((org.mock[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 33, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ReturnsArgumentAt) { 	org.mockito.intern[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.configuration.GlobalConfiguration.validate() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((verificationMode) != null) { 	org.mockito.invocation.Location location = verificationMode.getLo[...] ` -topatch--> `if (true) { 	org.mockito.invocation.Location location = this.verificationMode.getLocation(); 	this.v[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((verificationMode) != null) { 	org.mockito.invocation.Location location = verificationMode.getLo[...] ` -topatch--> `if (false) { 	org.mockito.invocation.Location location = this.verificationMode.getLocation(); 	this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((verificationMode) != null) { 	org.mockito.invocation.Location location = verificationMode.getLo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getArgumentMatcherStorage().validateState() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.configuration.GlobalConfiguration line: 47, pointed element: CtConstructorCallImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtConstructorCallImpl) `new org.mockito.internal.configuration.GlobalConfiguration() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ArgumentMatcherStorageImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(matcherStack.isEmpty())) { 	java.util.ArrayList lastMatchers = new java.util.ArrayList<org.moc[...] ` -topatch--> `if (true) { 	java.util.ArrayList lastMatchers = new java.util.ArrayList<org.mockito.internal.matcher[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ArgumentMatcherStorageImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(matcherStack.isEmpty())) { 	java.util.ArrayList lastMatchers = new java.util.ArrayList<org.moc[...] ` -topatch--> `if (false) { 	java.util.ArrayList lastMatchers = new java.util.ArrayList<org.mockito.internal.matche[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ArgumentMatcherStorageImpl line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(matcherStack.isEmpty())) { 	java.util.ArrayList lastMatchers = new java.util.ArrayList<org.moc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress.get()) == null) { 	org.[...] ` -topatch--> `if (true) { 	org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress.set(new org.moc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress.get()) == null) { 	org.[...] ` -topatch--> `if (false) { 	org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress.set(new org.mo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.mockito.internal.progress.ThreadSafeMockingProgress.mockingProgress.get()) == null) { 	org.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.CallsRealMethods) { 	validateMockingConc[...] ` -topatch--> `if (true) { 	validateMockingConcreteClass(((org.mockito.internal.stubbing.answers.CallsRealMethods) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.CallsRealMethods) { 	validateMockingConc[...] ` -topatch--> `if (false) { 	validateMockingConcreteClass(((org.mockito.internal.stubbing.answers.CallsRealMethods)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.CallsRealMethods) { 	validateMockingConc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.progress.ThreadSafeMockingProgress.threadSafely().stubbingCompleted(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 25, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.DoesNothing) { 	validateDoNothing(((org.[...] ` -topatch--> `if (true) { 	validateDoNothing(((org.mockito.internal.stubbing.answers.DoesNothing) (answer)), metho[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 25, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.DoesNothing) { 	validateDoNothing(((org.[...] ` -topatch--> `if (false) { 	validateDoNothing(((org.mockito.internal.stubbing.answers.DoesNothing) (answer)), meth[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 25, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.DoesNothing) { 	validateDoNothing(((org.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 93, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stubbingInProgress = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `mockingProgress.stubbingCompleted(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `answersValidator.validate(answer, invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.Returns) { 	validateReturnValue(((org.mo[...] ` -topatch--> `if (true) { 	validateReturnValue(((org.mockito.internal.stubbing.answers.Returns) (answer)), methodI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.Returns) { 	validateReturnValue(((org.mo[...] ` -topatch--> `if (false) { 	validateReturnValue(((org.mockito.internal.stubbing.answers.Returns) (answer)), method[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 21, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.Returns) { 	validateReturnValue(((org.mo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 399, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return extractRawTypeOf(((org.mockito.internal.util.reflection.GenericMetadataSupport.BoundedType) ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return invocation.getMethod().getParameterTypes()[actu[...] ` -topatch--> `if (true) { 	return invocation.getMethod().getParameterTypes()[actualArgumentPosition]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return invocation.getMethod().getParameterTypes()[actu[...] ` -topatch--> `if (false) { 	return invocation.getMethod().getParameterTypes()[actualArgumentPosition]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.ReturnsArgumentAt line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocation.getMethod().isVarArgs())) { 	return invocation.getMethod().getParameterTypes()[actu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 43, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(methodInfo.isValidReturnType(returnsArgumentAt.returnedTypeOnSignature(invocation)))) { 	new o[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().wrongTypeOfArgumentToReturn(invocation, methodInf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 43, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(methodInfo.isValidReturnType(returnsArgumentAt.returnedTypeOnSignature(invocation)))) { 	new o[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().wrongTypeOfArgumentToReturn(invocation, methodIn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 43, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(methodInfo.isValidReturnType(returnsArgumentAt.returnedTypeOnSignature(invocation)))) { 	new o[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.util.reflection.GenericMetadataSupport line: 106, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return boundsOf(((java.lang.reflect.TypeVariable) (typeParameter.getBounds()[0]))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 17, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ThrowsException) { 	validateException((([...] ` -topatch--> `if (true) { 	validateException(((org.mockito.internal.stubbing.answers.ThrowsException) (answer)), m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 17, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ThrowsException) { 	validateException((([...] ` -topatch--> `if (false) { 	validateException(((org.mockito.internal.stubbing.answers.ThrowsException) (answer)), [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 17, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (answer instanceof org.mockito.internal.stubbing.answers.ThrowsException) { 	validateException((([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.matches(invocation)) { 	s.markStubUsed(invocation); 	invocation.markStubbed(new org.mockito.in[...] ` -topatch--> `if (true) { 	s.markStubUsed(invocation); 	invocation.markStubbed(new org.mockito.internal.invocation[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.matches(invocation)) { 	s.markStubUsed(invocation); 	invocation.markStubbed(new org.mockito.in[...] ` -topatch--> `if (false) { 	s.markStubUsed(invocation); 	invocation.markStubbed(new org.mockito.internal.invocatio[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.matches(invocation)) { 	s.markStubUsed(invocation); 	invocation.markStubbed(new org.mockito.in[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 48, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(invocations) { 	return invocations.isEmpty(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 49, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return invocations.isEmpty() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.OngoingStubbingImpl line: 24, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocationContainerImpl.hasInvocationForPotentialStubbing())) { 	new org.mockito.exceptions.Re[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().incorrectUseOfApi(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.OngoingStubbingImpl line: 24, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocationContainerImpl.hasInvocationForPotentialStubbing())) { 	new org.mockito.exceptions.Re[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().incorrectUseOfApi(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.OngoingStubbingImpl line: 24, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocationContainerImpl.hasInvocationForPotentialStubbing())) { 	new org.mockito.exceptions.Re[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.OngoingStubbingImpl line: 28, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `invocationContainerImpl.addAnswer(answer) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 31, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(invocations) { 	if (!(invocations.isEmpty())) { 		invocations.removeLast(); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocations.isEmpty())) { 	invocations.removeLast(); } ` -topatch--> `if (true) { 	this.invocations.removeLast(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocations.isEmpty())) { 	invocations.removeLast(); } ` -topatch--> `if (false) { 	this.invocations.removeLast(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 32, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(invocations.isEmpty())) { 	invocations.removeLast(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.verification.DefaultRegisteredInvocations line: 33, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `invocations.removeLast() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ArgumentMatcherStorageImpl line: 45, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `matcherStack.clear() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.MatchersBinder line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (expectedMatchersSize != recordedMatchersSize) { 	new org.mockito.exceptions.Reporter().invalidUs[...] ` -topatch--> `if (true) { 	new org.mockito.exceptions.Reporter().invalidUseOfMatchers(expectedMatchersSize, lastMa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.MatchersBinder line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (expectedMatchersSize != recordedMatchersSize) { 	new org.mockito.exceptions.Reporter().invalidUs[...] ` -topatch--> `if (false) { 	new org.mockito.exceptions.Reporter().invalidUseOfMatchers(expectedMatchersSize, lastM[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.MatchersBinder line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (expectedMatchersSize != recordedMatchersSize) { 	new org.mockito.exceptions.Reporter().invalidUs[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 49, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `registeredInvocations.removeLast() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 50, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addAnswer(answer, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.MethodInfo line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getReturnType().isPrimitive()) || (clazz.isPrimitive())) { 	return (org.mockito.internal[...] ` -topatch--> `if (true) { 	return (org.mockito.internal.util.Primitives.primitiveTypeOf(clazz)) == (org.mockito.in[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.MethodInfo line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getReturnType().isPrimitive()) || (clazz.isPrimitive())) { 	return (org.mockito.internal[...] ` -topatch--> `if (false) { 	return (org.mockito.internal.util.Primitives.primitiveTypeOf(clazz)) == (org.mockito.i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.MethodInfo line: 38, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((method.getReturnType().isPrimitive()) || (clazz.isPrimitive())) { 	return (org.mockito.internal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `mockingProgress.stubbingStarted() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stubbing == null) { 	mockingProgress.reset(); 	reporter.missingMethodInvocation(); } ` -topatch--> `if (true) { 	this.mockingProgress.reset(); 	this.reporter.missingMethodInvocation(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stubbing == null) { 	mockingProgress.reset(); 	reporter.missingMethodInvocation(); } ` -topatch--> `if (false) { 	this.mockingProgress.reset(); 	this.reporter.missingMethodInvocation(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.MockitoCore line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stubbing == null) { 	mockingProgress.reset(); 	reporter.missingMethodInvocation(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ArgumentMatcherStorageImpl line: 32, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `matcherStack.push(new org.mockito.internal.matchers.LocalizedMatcher(matcher)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stubbingInProgress = new org.mockito.internal.debugging.LocationImpl() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.ThreadSafeMockingProgress line: 44, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.mockito.internal.progress.ThreadSafeMockingProgress.threadSafely().stubbingStarted() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 63, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validateState() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.progress.MockingProgressImpl line: 35, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iOngoingStubbing = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.InvocationMatcher line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `((org.mockito.internal.matchers.CapturesArguments) (m)).captureFrom(invocation.getRawArguments()[pos[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.matchers.LocalizedMatcher line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((actualMatcher) instanceof org.mockito.internal.matchers.CapturesArguments) { 	((org.mockito.int[...] ` -topatch--> `if (true) { 	((org.mockito.internal.matchers.CapturesArguments) (this.actualMatcher)).captureFrom(ar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.matchers.LocalizedMatcher line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((actualMatcher) instanceof org.mockito.internal.matchers.CapturesArguments) { 	((org.mockito.int[...] ` -topatch--> `if (false) { 	((org.mockito.internal.matchers.CapturesArguments) (this.actualMatcher)).captureFrom(a[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.matchers.LocalizedMatcher line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((actualMatcher) instanceof org.mockito.internal.matchers.CapturesArguments) { 	((org.mockito.int[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.InvocationMatcher line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((isVariableArgument(invocation, position)) && (isVarargMatcher(m))) { 	java.lang.Object array = [...] ` -topatch--> `if (true) { 	java.lang.Object array = invocation.getRawArguments()[position]; 	for (int i = 0; i < ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.InvocationMatcher line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((isVariableArgument(invocation, position)) && (isVarargMatcher(m))) { 	java.lang.Object array = [...] ` -topatch--> `if (false) { 	java.lang.Object array = invocation.getRawArguments()[position]; 	for (int i = 0; i < [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.InvocationMatcher line: 126, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((isVariableArgument(invocation, position)) && (isVarargMatcher(m))) { 	java.lang.Object array = [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.handler.MockHandlerImpl line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stubbedInvocation.captureArgumentsFrom(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.handler.MockHandlerImpl line: 91, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return stubbedInvocation.answer(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.ArgumentsProcessor line: 22, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isVarArgs) || (new org.mockito.internal.util.collections.ArrayUtils().isEmpty(args))) || (((a[...] ` -topatch--> `if (true) { 	return args == null ? new java.lang.Object[0] : args; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.ArgumentsProcessor line: 22, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isVarArgs) || (new org.mockito.internal.util.collections.ArrayUtils().isEmpty(args))) || (((a[...] ` -topatch--> `if (false) { 	return args == null ? new java.lang.Object[0] : args; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.ArgumentsProcessor line: 22, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isVarArgs) || (new org.mockito.internal.util.collections.ArrayUtils().isEmpty(args))) || (((a[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.StubbedInvocationMatcher line: 31, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(answers) { 	a = ((answers.size()) == 1) ? answers.peek() : answers.poll(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.StubbedInvocationMatcher line: 32, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a = ((answers.size()) == 1) ? answers.peek() : answers.poll() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 80, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `s.markStubUsed(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `invocation.markStubbed(new org.mockito.internal.invocation.StubInfoImpl(s)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.InvocationContainerImpl line: 82, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return s ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.StubbedInvocationMatcher line: 42, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.usedAt = usedAt ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.InvocationImpl line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stubInfo = stubInfo ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 22, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validateReturnValue(((org.mockito.internal.stubbing.answers.Returns) (answer)), methodInfo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (methodInfo.isVoid()) { 	reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName()[...] ` -topatch--> `if (true) { 	this.reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (methodInfo.isVoid()) { 	reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName()[...] ` -topatch--> `if (false) { 	this.reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (methodInfo.isVoid()) { 	reporter.cannotStubVoidMethodWithAReturnValue(methodInfo.getMethodName()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 35, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validateReturnArgIdentity(returnsArgumentAt, invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.stubbing.answers.AnswersValidator line: 40, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `returnsArgumentAt.validateIndexWithinInvocationRange(invocation) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mockito.internal.invocation.ArgumentsProcessor line: 23, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return args == null ? new java.lang.Object[0] : args ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 279.991
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Mockito-6
TOTAL_TIME=279.991
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=321
NR_FAILLING_COMPILATIONS=17
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jKali_Defects4J_Mockito_6/./output_astor/AstorMain-Mockito-6//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":321,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Mockito-6","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":17,"NR_GENERATIONS":null,"TOTAL_TIME":279.991,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 314.243
503.36user 24.45system 5:15.24elapsed 167%CPU (0avgtext+0avgdata 2695612maxresident)k
96608inputs+252816outputs (47major+4805610minor)pagefaults 0swaps


Node: uvb-18.sophia.grid5000.fr



Date: Thu Dec  6 16:51:43 EST 2018

