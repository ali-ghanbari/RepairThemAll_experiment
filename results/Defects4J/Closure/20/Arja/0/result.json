{
  "repair_end": "2018-12-01 16:21:57.414762", 
  "repair_begin": "2018-12-01 15:59:35.787120", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1452/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:13.232253959 -0500\n@@ -138,7 +138,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"EMPTY\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 141, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"EMPTY\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1226/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:19:01.071279542 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1226/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:19:01.071279542 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1226/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:19:01.075279572 -0500\n@@ -193,7 +193,7 @@\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n           case URSH:            return \"URSH\";\n-          case ADD:             return \"ADD\";\n+          case ADD:             ;\n           case SUB:             return \"SUB\";\n           case MUL:             return \"MUL\";\n           case DIV:             return \"DIV\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 196, 
          "faulty": "return \"ADD\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1402/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:45.792048532 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1402/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:45.796048562 -0500\n@@ -217,14 +217,6 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 225, 
          "faulty": "reportCodeChange();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1469/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:22.604324462 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1469/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:22.608324492 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1362/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:22.267873651 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1362/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:22.271873681 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1397/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:43.136028729 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1397/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:43.140028759 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1353/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:16.855833584 -0500\n@@ -1443,7 +1443,10 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n@@ -1456,7 +1459,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1446, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1256/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:19:19.191410773 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1256/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:19:19.195410802 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1445/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:09.996229655 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1445/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:09.996229655 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1439/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:06.880206272 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1439/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:06.880206272 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 225, 
          "faulty": "reportCodeChange();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1485/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:31.808393864 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1485/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:31.808393864 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 225, 
          "faulty": "reportCodeChange();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1329/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:03.891737868 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1329/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:03.891737868 -0500\n@@ -223,7 +223,6 @@\n             value.detachFromParent());\n         n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n-        return addition;\n       }\n     }\n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 226, 
          "faulty": "return addition;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1467/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:21.900319161 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1467/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:21:21.904319190 -0500\n@@ -193,7 +193,7 @@\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n           case URSH:            return \"URSH\";\n-          case ADD:             return \"ADD\";\n+          case ADD:             return \"SCRIPT\";\n           case SUB:             return \"SUB\";\n           case MUL:             return \"MUL\";\n           case DIV:             return \"DIV\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 196, 
          "faulty": "return \"ADD\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1324/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:01.355719188 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1324/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:01.355719188 -0500\n@@ -223,7 +223,7 @@\n             value.detachFromParent());\n         n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n-        return addition;\n+        return null;\n       }\n     }\n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 226, 
          "faulty": "return addition;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1447/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:10.676234761 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1447/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:10.676234761 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1348/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:14.939819415 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1348/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:14.943819445 -0500\n@@ -217,14 +217,6 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1388/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:37.899989733 -0500\n@@ -138,7 +138,7 @@\n         case IS_DISPATCHER:      return \"is_dispatcher\";\n         case DIRECTIVES:         return \"directives\";\n         case DIRECT_EVAL:        return \"direct_eval\";\n-        case FREE_CALL:          return \"free_call\";\n+        case FREE_CALL:          return \"SUB\";\n         case STATIC_SOURCE_FILE:    return \"source_file\";\n         case INPUT_ID:  return \"input_id\";\n         case LENGTH:    return \"length\";\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 141, 
          "faulty": "return \"free_call\";", 
          "type": "Replace", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1351/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:16.239829028 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1351/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:16.239829028 -0500\n@@ -223,7 +223,6 @@\n             value.detachFromParent());\n         n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n-        return addition;\n       }\n     }\n     return n;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1351/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:20:16.239829028 -0500\n@@ -193,7 +193,7 @@\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n           case URSH:            return \"URSH\";\n-          case ADD:             return \"ADD\";\n+          case ADD:             ;\n           case SUB:             return \"SUB\";\n           case MUL:             return \"MUL\";\n           case DIV:             return \"DIV\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 226, 
          "faulty": "return addition;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 196, 
          "faulty": "return \"ADD\";", 
          "type": "Delete", 
          "seed": "return \"RETURN\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1481/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:21:29.800378710 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1481/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:21:29.804378739 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 226, 
          "faulty": "return addition;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1113/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:17:48.802764698 -0500\n@@ -1427,11 +1427,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return toString(true, true, true);\n       }\n       return null;\n   }\n@@ -1456,7 +1452,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1430, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return toString(true,true,true);"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1094/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:17:36.558678917 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1420/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:55.992124717 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1420/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:55.996124746 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1425/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:58.620144380 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1425/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:58.624144410 -0500\n@@ -217,14 +217,7 @@\n       // slightly different semantics than '' + (a). See\n       // http://code.google.com/p/closure-compiler/issues/detail?id=759\n       Node value = callTarget.getNext();\n-      if (value != null) {\n-        Node addition = IR.add(\n-            IR.string(\"\").srcref(callTarget),\n-            value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n-        reportCodeChange();\n-        return addition;\n-      }\n+      return null;\n     }\n     return n;\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 220, 
          "faulty": "if (value != null) {\n  Node addition=IR.add(IR.string(\"\").srcref(callTarget),value.detachFromParent());\n  n.getParent().replaceChild(n,addition);\n  reportCodeChange();\n  return addition;\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 225, 
          "faulty": "reportCodeChange();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1344/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:13.079805668 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1344/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:13.083805696 -0500\n@@ -221,9 +221,8 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n-        return addition;\n+        return null;\n       }\n     }\n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 226, 
          "faulty": "return addition;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1407/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:48.340067543 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 09:59:17.300102477 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_1407/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java\t2018-12-01 10:20:48.340067543 -0500\n@@ -221,7 +221,6 @@\n         Node addition = IR.add(\n             IR.string(\"\").srcref(callTarget),\n             value.detachFromParent());\n-        n.getParent().replaceChild(n, addition);\n         reportCodeChange();\n         return addition;\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java", 
          "line": 224, 
          "faulty": "n.getParent().replaceChild(n,addition);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_966/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:16:14.866118548 -0500\n@@ -1456,7 +1456,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:59:15.572095989 -0500\n+++ /tmp/Arja_Defects4J_Closure_20/patches_rf7a/Patch_966/patched/tmp/Arja_Defects4J_Closure_20/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:16:14.894118737 -0500\n@@ -193,7 +193,7 @@\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n           case URSH:            return \"URSH\";\n-          case ADD:             return \"ADD\";\n+          case ADD:             ;\n           case SUB:             return \"SUB\";\n           case MUL:             return \"MUL\";\n           case DIV:             return \"DIV\";\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 196, 
          "faulty": "return \"ADD\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1459, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }
  ]
}