{
  "repair_end": "2018-12-02 02:06:54.109642", 
  "repair_begin": "2018-12-02 02:03:04.728767", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/LightweightMessageFormatter.java", 
          "line": 97, 
          "faulty": "if (excerpt.equals(LINE) && 0 <= charno && charno < sourceExcerpt.length()) {\n  for (int i=0; i < charno; i++) {\n    char c=sourceExcerpt.charAt(i);\n    if (Character.isWhitespace(c)) {\n      b.append(c);\n    }\n else {\n      b.append(' ');\n    }\n  }\n  b.append(\"^\\n\");\n}", 
          "type": "RedirectBranch true"
        }
      ], 
      "patch": "--- /tmp/Kali_Defects4J_Closure_62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\t2018-12-01 20:02:46.333309972 -0500\n+++ /tmp/Kali_Defects4J_Closure_62/patches_p9zu/Patch_1/patched/tmp/Kali_Defects4J_Closure_62/src/com/google/javascript/jscomp/LightweightMessageFormatter.java\t2018-12-01 20:06:53.625504119 -0500\n@@ -94,8 +94,7 @@\n       // padding equal to the excerpt and arrow at the end\n       // charno == sourceExpert.length() means something is missing\n       // at the end of the line\n-      if (excerpt.equals(LINE)\n-          && 0 <= charno && charno < sourceExcerpt.length()) {\n+      if (true) {\n         for (int i = 0; i < charno; i++) {\n           char c = sourceExcerpt.charAt(i);\n           if (Character.isWhitespace(c)) {\n\n\n"
    }
  ]
}