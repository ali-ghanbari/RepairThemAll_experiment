{
  "repair_end": "2018-12-01 15:52:52.575228", 
  "repair_begin": "2018-12-01 15:38:14.158168", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1778/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:46.493707152 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1778/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:46.493707152 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_996/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:39.033231379 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_996/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:39.033231379 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2047/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:49.665867178 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2047/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:49.665867178 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2047/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:49.665867178 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1712/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:31.025667946 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1712/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:31.025667946 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2029/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:45.093855601 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2029/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:45.097855612 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n@@ -243,43 +239,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2302/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:49.074017537 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2302/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:49.074017537 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2025/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:44.101853090 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2025/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:44.105853100 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1695/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:27.093657978 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1695/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:27.093657978 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1695/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:27.097657988 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n@@ -243,43 +237,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1305/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:52.241417345 -0500\n@@ -372,13 +372,10 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1305/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:52.241417345 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1305/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:52.245417355 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,48 +238,11 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1870/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:07.521760436 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1870/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:07.525760446 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_574/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:36.964920799 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_574/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:36.968920810 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2248/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:35.945984322 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2248/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:35.945984322 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1933/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:21.905796875 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1933/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:21.905796875 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n@@ -238,7 +235,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1607/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:05.777603931 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1607/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:05.781603941 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1254/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:40.669387964 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1254/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:40.673387974 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n@@ -261,10 +258,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1589/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:01.785593807 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1589/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:01.785593807 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1589/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:01.789593818 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1530/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:46.849555925 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1530/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:46.853555934 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2208/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:26.409960191 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2208/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:26.409960191 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_727/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:24.301041312 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_727/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:24.301041312 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2195/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:23.873953773 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2195/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:23.877953784 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2195/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:23.877953784 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_962/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:30.441209538 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_962/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:30.445209548 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1414/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:18.881484964 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1414/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:18.885484975 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1414/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:18.885484975 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1511/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:42.225544195 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1511/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:42.225544195 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1511/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:42.225544195 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1785/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:48.125711288 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1785/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:48.129711298 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1709/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:30.377666303 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1709/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:30.377666303 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1709/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:30.377666303 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_504/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:14.804864349 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_504/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:14.804864349 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1756/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:40.909692999 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1756/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:40.913693009 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1658/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:18.233635515 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1658/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:18.233635515 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_685/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:11.577008927 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_685/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:11.577008927 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_685/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:11.577008927 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_998/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:39.369232232 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_998/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:39.373232242 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_998/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:39.373232242 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1260/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:42.009391366 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1260/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:42.013391377 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1088/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:00.933287033 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1088/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:00.933287033 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2123/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:07.093911302 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2123/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:07.093911302 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_780/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:40.497082523 -0500\n@@ -372,10 +372,8 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_780/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:40.497082523 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_780/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:40.497082523 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1146/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:15.401323789 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1146/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:15.401323789 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2103/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:02.453899555 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2103/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:02.457899566 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n@@ -178,8 +176,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2078/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:56.593884719 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2078/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:56.593884719 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1425/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:21.205490862 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1425/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:21.205490862 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_673/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:07.868999489 -0500\n@@ -376,9 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_673/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:07.872999499 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_673/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:07.872999499 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n@@ -231,13 +228,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1315/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:54.881424048 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1315/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:54.881424048 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1774/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:45.485704597 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1774/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:45.485704597 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1705/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:29.381663778 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1705/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:29.385663788 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1046/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:50.993261774 -0500\n@@ -371,12 +371,7 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1046/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:50.993261774 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1046/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:50.993261774 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2109/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:04.133903808 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2109/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:04.137903819 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2109/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:04.137903819 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n@@ -172,13 +170,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_733/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:25.961045536 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_733/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:25.965045547 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2170/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:17.617937940 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2170/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:17.617937940 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2060/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:52.617874653 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2060/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:52.617874653 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n@@ -261,10 +254,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_989/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:37.381227179 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_989/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:37.385227189 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1369/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:07.397455819 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1369/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:07.397455819 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1826/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:56.953733659 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1826/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:56.953733659 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1751/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:39.925690505 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1751/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:39.925690505 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1751/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:39.925690505 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1247/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:38.713382997 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1247/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:38.717383007 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1714/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:31.349668767 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1714/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:31.349668767 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,28 +158,12 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1622/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:09.709613902 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1622/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:09.713613912 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1788/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:48.773712930 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1788/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:48.773712930 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -243,43 +243,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1216/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:32.093366186 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1216/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:32.093366186 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2080/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:56.921885550 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2080/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:56.921885550 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1233/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:35.741375450 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1233/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:35.741375450 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1111/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:07.209302978 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1111/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:07.209302978 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2037/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:46.745859785 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2037/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:46.749859796 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1241/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:37.385379625 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1241/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:37.389379635 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1241/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:37.389379635 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1986/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:35.297830794 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1986/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:35.301830805 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1986/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:35.301830805 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_985/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:36.729225522 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n@@ -455,7 +454,6 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_985/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:36.729225522 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_985/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:36.733225532 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2306/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:49.726019187 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2306/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:49.726019187 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2114/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:05.133906339 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n@@ -455,7 +454,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2114/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:05.137906350 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2114/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:05.137906350 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1125/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:10.141310427 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1125/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:10.141310427 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,13 +173,7 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1747/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:39.257688812 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1747/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:39.257688812 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1747/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:39.257688812 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1847/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:02.273747139 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1847/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:02.277747149 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1847/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:02.277747149 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1066/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:55.609273505 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return false;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1066/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:55.609273505 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1066/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:55.613273515 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2201/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:25.097956870 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2201/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:25.097956870 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1820/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:55.653730365 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1820/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:55.653730365 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_949/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:27.157201190 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_949/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:27.157201190 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1676/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:22.805647107 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1676/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:22.805647107 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1492/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:38.273534169 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1492/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:38.273534169 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1997/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:38.141837998 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1997/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:38.145838007 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n@@ -231,13 +224,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1446/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:26.157503428 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1446/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:26.157503428 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1626/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:10.693616397 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1626/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:10.697616408 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1116/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:08.185305458 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1116/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:08.189305468 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1545/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:50.769565868 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1545/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:50.773565878 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1545/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:50.773565878 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2137/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:10.057918804 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2137/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:10.061918815 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1322/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:56.213427429 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1322/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:56.217427439 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2065/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:53.605877155 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2065/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:53.605877155 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2065/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:53.605877155 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1221/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:33.085368705 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1221/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:33.085368705 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_741/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:28.265051400 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_741/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:28.265051400 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2293/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:46.810011810 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2293/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:46.810011810 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2293/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:46.814011821 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1857/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:04.557752926 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1857/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:04.557752926 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n@@ -243,43 +237,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1032/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:47.681253358 -0500\n@@ -375,11 +375,9 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1032/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:47.685253368 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1032/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:47.685253368 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1578/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:58.713586017 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1578/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:58.717586026 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1578/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:58.717586026 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1651/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:16.601631377 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1651/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:16.601631377 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1980/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:33.953827391 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1980/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:33.953827391 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1041/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:49.657258379 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1041/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:49.657258379 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1384/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:11.357465869 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1384/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:11.357465869 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1782/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:47.465709615 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1782/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:47.465709615 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1177/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:23.265343764 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1177/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:23.269343775 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1263/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:42.673393052 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1263/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:42.673393052 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2226/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:30.693971032 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2226/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:30.697971043 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1454/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:28.429509193 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1454/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:28.433509203 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1800/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:51.381719539 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1800/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:51.381719539 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +135,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2072/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:55.249881317 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2072/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:55.253881327 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n@@ -238,7 +234,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1420/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:20.213488345 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1420/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:20.217488354 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1360/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:05.745451625 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1360/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:05.745451625 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1416/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:19.209485797 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1416/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:19.209485797 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -178,8 +174,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1832/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:58.297737065 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1832/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:58.297737065 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1832/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:58.301737075 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1632/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:11.725619014 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1632/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:11.725619014 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1632/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:11.729619024 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1351/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:03.797446681 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1351/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:03.797446681 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1351/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:03.797446681 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n@@ -238,7 +230,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2228/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:31.029971882 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2228/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:31.033971893 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2228/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:31.033971893 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1245/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:38.385382164 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1245/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:38.385382164 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1245/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:38.385382164 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1593/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:02.781596333 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1593/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:02.781596333 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2289/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:45.826009320 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2289/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:45.830009331 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_830/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:54.705118667 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_830/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:54.705118667 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_922/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:20.201183504 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_922/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:20.201183504 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_922/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:20.205183515 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2049/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:49.993868010 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2049/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:49.997868019 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1236/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:36.393377106 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1236/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:36.393377106 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_843/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:58.349127935 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_843/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:58.353127946 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1356/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:04.773449158 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1356/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:04.773449158 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n@@ -238,48 +232,11 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2098/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:01.477897085 -0500\n@@ -455,7 +455,6 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2098/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:01.477897085 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2098/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:01.477897085 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_701/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:16.621021766 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_701/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:16.621021766 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1689/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:25.773654631 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1689/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:25.773654631 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1689/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:25.773654631 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1196/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:27.525354584 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1196/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:27.525354584 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -243,43 +243,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2266/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:39.941994433 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2266/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:39.941994433 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2266/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:39.945994444 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1297/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:50.593413161 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1297/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:50.593413161 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1297/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:50.593413161 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1599/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:04.097599671 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1599/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:04.097599671 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_806/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:47.441100189 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_806/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:47.441100189 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_806/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:47.441100189 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1127/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:10.477311280 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1127/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:10.481311291 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1127/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:10.481311291 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1389/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:12.665469189 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1389/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:12.665469189 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1436/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:23.873497632 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1436/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:23.877497642 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1912/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:17.597785962 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1912/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:17.597785962 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1290/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:49.237409718 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1290/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:49.237409718 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1460/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:29.729512491 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1460/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:29.729512491 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1271/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:44.297397176 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1271/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:44.297397176 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2021/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:43.437851409 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2021/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:43.441851418 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_896/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:13.589166692 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n@@ -371,10 +370,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_896/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:13.589166692 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_896/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:13.589166692 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1482/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:35.313526659 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1482/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:35.313526659 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1671/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:21.493643780 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1671/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:21.493643780 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +139,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n@@ -243,43 +231,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1363/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:06.417453331 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1363/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:06.417453331 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1363/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:06.421453341 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_901/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:14.585169225 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_901/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:14.585169225 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_901/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:14.585169225 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1975/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:32.645824079 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1975/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:32.645824079 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_892/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:12.917164984 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_892/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:12.921164994 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,16 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2254/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:37.293987734 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2254/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:37.293987734 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1051/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:51.989264305 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1051/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:51.989264305 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1051/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:51.993264316 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_520/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:19.820877128 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_520/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:19.820877128 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1655/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:17.585633872 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1655/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:17.585633872 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1939/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:23.205800168 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1939/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:23.205800168 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1320/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:55.885426597 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1320/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:55.885426597 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1580/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:59.041586848 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1580/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:59.045586859 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1945/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:24.529803522 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1945/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:24.529803522 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1945/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:24.529803522 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1365/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:06.745454164 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1365/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:06.745454164 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1813/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:53.693725398 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1813/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:53.697725408 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_422/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:44:47.916795825 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_422/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:44:47.960795937 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1697/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:27.433658840 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1697/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:27.433658840 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1697/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:27.433658840 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -243,43 +243,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2282/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:44.218005252 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2282/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:44.222005263 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1141/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:14.093320467 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1141/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:14.093320467 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1804/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:52.029721181 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1804/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:52.033721191 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1179/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:23.609344638 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1179/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:23.609344638 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1179/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:23.609344638 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2184/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:20.905946262 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2184/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:20.905946262 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2184/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:20.905946262 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +154,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1464/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:30.381514146 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1464/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:30.381514146 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1000/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:39.697233066 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1000/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:39.697233066 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1456/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:28.757510025 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1456/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:28.757510025 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_708/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:18.317026083 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_708/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:18.317026083 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_708/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:18.317026083 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1408/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:17.573481645 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n@@ -371,10 +368,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1408/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:17.573481645 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1408/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:17.573481645 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1336/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:59.169434933 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1336/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:59.173434943 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2004/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:39.465841350 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2004/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:39.465841350 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2004/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:39.465841350 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_527/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:45:21.824882234 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n@@ -372,7 +371,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_527/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:21.828882244 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_527/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:21.828882244 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_802/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:46.453097676 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_802/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:46.453097676 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1324/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:56.541428262 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1324/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:56.541428262 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1601/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:04.433600523 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1601/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:04.433600523 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1601/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:04.437600533 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1118/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:08.513306291 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1118/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:08.513306291 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1809/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:53.041723746 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1809/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:53.041723746 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n@@ -158,24 +155,8 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2285/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:44.862006881 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2285/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:44.862006881 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n@@ -261,10 +259,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_912/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:17.549176762 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_912/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:17.549176762 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n@@ -243,43 +237,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1925/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:20.225792620 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1925/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:20.225792620 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2052/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:50.653869680 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2052/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:50.657869691 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2052/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:50.657869691 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1648/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:15.953629735 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1648/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:15.953629735 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1648/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:15.953629735 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n@@ -243,43 +237,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1091/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:01.581288679 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1091/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:01.585288689 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2125/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:07.417912121 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2125/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:07.421912132 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2222/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:29.689968491 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2222/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:29.693968502 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1884/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:10.501767986 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1884/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:10.501767986 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1884/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:10.501767986 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1881/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:09.837766304 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1881/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:09.841766314 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1273/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:44.625398009 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1273/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:44.625398009 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2100/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:01.805897915 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2100/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:01.805897915 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1723/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:33.649674597 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1723/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:33.649674597 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 265, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1292/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:49.589410612 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1292/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:49.593410622 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1292/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:49.593410622 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1897/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:14.005776863 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1897/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:14.005776863 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1326/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:56.869429095 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1326/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:56.869429095 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1017/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:43.653243120 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1017/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:43.653243120 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1017/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:43.657243131 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1822/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:55.981731196 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1822/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:55.981731196 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -171,15 +171,6 @@\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n-\n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1613/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:07.421608100 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1613/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:07.425608110 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1509/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:41.889543342 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1509/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:41.889543342 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1202/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:29.165358750 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1202/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:29.165358750 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2164/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:15.969933768 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return false;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2164/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:15.969933768 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2164/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:15.969933768 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1628/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:11.021617229 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1628/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:11.021617229 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1429/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:22.213493420 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1429/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:22.213493420 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1429/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:22.213493420 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1193/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:26.877352939 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1193/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:26.877352939 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_919/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:19.537181816 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_919/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:19.541181827 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_943/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:25.809197763 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_943/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:25.809197763 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1172/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:22.277341255 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1172/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:22.281341265 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1497/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:39.249536645 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1497/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:39.253536655 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2015/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:41.789847235 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2015/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:41.793847246 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1916/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:18.581788455 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1916/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:18.585788466 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1920/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:19.237790117 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1920/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:19.241790127 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1354/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:04.445448326 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1354/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:04.445448326 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1811/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:53.369724577 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1811/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:53.369724577 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1466/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:30.745515070 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1466/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:30.749515079 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1466/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:30.749515079 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n@@ -178,8 +175,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n@@ -238,7 +233,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2212/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:27.381962650 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2212/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:27.381962650 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1494/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:38.597534991 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1494/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:38.601535001 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1114/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:07.861304635 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1114/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:07.861304635 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2128/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:08.073913782 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2128/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:08.073913782 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2309/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:50.370020816 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2309/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:50.374020827 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1533/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:47.509557599 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1533/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:47.513557608 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1533/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:47.513557608 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2190/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:22.537950392 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2190/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:22.541950403 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1080/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:58.941281971 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return false;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1080/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:58.941281971 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1080/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:58.945281982 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1794/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:50.073716224 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1794/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:50.073716224 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2054/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:50.993870541 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2054/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:50.993870541 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2054/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:50.997870552 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2203/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:25.433957721 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2203/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:25.437957732 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2203/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:25.437957732 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2220/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:29.365967671 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2220/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:29.365967671 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2220/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:29.365967671 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1877/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:09.173764621 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1877/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:09.177764632 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1877/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:09.177764632 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1049/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:51.645263431 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1049/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:51.645263431 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1405/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:16.913479970 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1405/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:16.917479980 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2032/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:45.757857283 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2032/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:45.757857283 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n@@ -238,7 +232,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1132/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:11.773314573 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1132/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:11.777314583 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n@@ -173,10 +170,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n@@ -231,13 +224,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1716/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:31.677669598 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1716/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:31.681669609 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2263/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:39.269992733 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2263/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:39.273992744 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_987/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:37.057226355 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_987/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:37.057226355 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1412/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:18.545484112 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1412/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:18.549484122 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_931/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:22.509189373 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_931/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:22.509189373 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n@@ -178,8 +176,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1012/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:42.657240589 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1012/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:42.657240589 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1318/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:55.533425703 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1318/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:55.537425713 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +139,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1749/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:39.585689643 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1749/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:39.585689643 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1123/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:09.813309594 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1123/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:09.817309604 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1851/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:03.257749632 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1851/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:03.261749643 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1165/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:20.629337069 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1165/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:20.629337069 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_788/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:42.805088395 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_788/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:42.805088395 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1519/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:44.205549217 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1519/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:44.205549217 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1519/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:44.209549227 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1377/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:09.709461687 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1377/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:09.709461687 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1377/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:09.713461697 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2130/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:08.397914603 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2130/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:08.397914603 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -262,7 +262,7 @@\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n       if (!typeA.hasProperty(property)) {\n-        return false;\n+        return true;\n       }\n \n       JSType propA = typeA.getPropertyType(property);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 265, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1010/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:42.329239755 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1010/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:42.329239755 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2175/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:18.921941241 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2175/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:18.921941241 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2175/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:18.921941241 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2001/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:38.797839659 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2001/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:38.797839659 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_615/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:45:50.072954181 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_615/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:50.076954191 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_615/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:50.076954191 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1064/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:55.269272641 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1064/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:55.269272641 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1802/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:51.705720360 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1802/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:51.705720360 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2180/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:19.921943771 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2180/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:19.921943771 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1929/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:21.245795203 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1929/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:21.245795203 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:56.377580092 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:56.377580092 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:56.377580092 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1879/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:09.513765483 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1879/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:09.513765483 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1879/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:09.513765483 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1548/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:51.449567592 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1548/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:51.449567592 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1845/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:01.937746288 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1845/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:01.937746288 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1238/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:36.717377929 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1238/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:36.721377938 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1137/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:13.081317896 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1137/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:13.085317906 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1137/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:13.085317906 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -221,10 +221,6 @@\n \n   @Override\n   public boolean isSubtype(JSType that) {\n-    if (JSType.isSubtypeHelper(this, that)) {\n-      return true;\n-    }\n-\n     // Top of the record types is the empty record, or OBJECT_TYPE.\n     if (registry.getNativeObjectType(\n             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 224, 
          "faulty": "if (JSType.isSubtypeHelper(this,that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1422/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:20.541489177 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1422/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:20.541489177 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:48.349255055 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:48.353255066 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:48.353255066 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1729/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:34.957677913 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1729/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:34.961677923 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1886/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:10.837768837 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1886/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:10.837768837 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1886/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:10.841768847 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1970/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:31.313820704 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1970/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:31.313820704 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1442/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:25.181500952 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1442/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:25.181500952 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1299/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:50.933414025 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1299/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:50.933414025 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1299/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:50.933414025 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1873/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:08.193762138 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1873/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:08.193762138 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1873/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:08.193762138 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1276/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:45.285399685 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1276/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:45.285399685 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1276/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:45.289399695 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2088/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:58.869890482 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2088/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:58.869890482 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2148/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:12.349924606 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2148/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:12.349924606 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2148/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:12.349924606 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -178,8 +178,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2140/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:10.709920455 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2140/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:10.713920464 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:16.237173426 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:16.241173436 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:16.241173436 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1003/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:40.373234784 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1003/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:40.373234784 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1015/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:43.313242257 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1015/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:43.317242266 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1015/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:43.317242266 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2273/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:41.905999403 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2273/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:41.905999403 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1864/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:05.873756260 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1864/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:05.873756260 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1864/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:05.873756260 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1830/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:57.961736213 -0500\n@@ -372,13 +372,10 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1830/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:57.961736213 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1830/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:57.961736213 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1517/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:43.865548355 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1517/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:43.869548365 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1553/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:52.765570930 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1553/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:52.765570930 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1553/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:52.765570930 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1937/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:22.877799337 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1937/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:22.877799337 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1679/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:23.453648750 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1679/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:23.453648750 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1019/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:43.993243985 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1019/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:43.993243985 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1019/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:43.997243995 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2095/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:00.801895373 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2095/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:00.801895373 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_749/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:46:30.565057252 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_749/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:30.565057252 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_749/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:30.569057263 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2257/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:37.941989372 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2257/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:37.941989372 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2023/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:43.773852259 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2023/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:43.777852270 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2023/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:43.777852270 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n@@ -172,13 +166,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1666/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:20.505641276 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1666/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:20.505641276 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1859/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:04.881753748 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1859/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:04.881753748 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_819/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:51.397110253 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_819/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:51.401110262 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1169/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:21.629339610 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1169/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:21.629339610 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2156/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:13.993928767 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2156/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:13.993928767 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1558/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:54.077574258 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1558/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:54.077574258 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1294/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:49.921411455 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1294/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:49.921411455 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1367/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:07.069454986 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1367/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:07.073454996 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1038/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:49.001256712 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1038/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:49.005256723 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1527/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:46.205554291 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1527/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:46.205554291 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_955/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:28.469204525 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_955/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:28.469204525 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1603/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:04.769601375 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1603/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:04.773601385 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1603/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:04.773601385 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1732/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:35.609679565 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1732/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:35.609679565 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2011/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:41.113845523 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2011/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:41.117845534 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_479/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:45:06.740843801 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_479/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:06.740843801 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_479/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:06.744843811 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n@@ -167,9 +161,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1560/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:54.405575090 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1560/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:54.405575090 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_885/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:10.905159868 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_885/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:10.905159868 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_885/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:10.905159868 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1027/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:46.329249922 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1027/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:46.329249922 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1027/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:46.333249932 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +154,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2070/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:54.925880496 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2070/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:54.925880496 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1397/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:14.605474113 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1397/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:14.609474123 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1955/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:27.117810077 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1955/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:27.121810087 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1739/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:37.585684574 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1739/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:37.589684584 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1504/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:40.881540785 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1504/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:40.881540785 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2233/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:32.349975222 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2233/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:32.349975222 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2217/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:28.705966001 -0500\n@@ -376,7 +376,6 @@\n         }\n \n         sb.append(property);\n-        sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2217/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:28.709966012 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2217/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:28.709966012 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 379, 
          "faulty": "sb.append(\": \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2238/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:33.321977682 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2238/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:33.329977702 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n@@ -172,13 +164,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n@@ -231,13 +216,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1693/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:26.757657126 -0500\n@@ -455,7 +455,6 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1693/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:26.757657126 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1693/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:26.757657126 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2304/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:49.398018357 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2304/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:49.402018368 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1469/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:31.409516754 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1469/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:31.413516764 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1469/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:31.413516764 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2177/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:19.261942100 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n@@ -380,10 +377,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2177/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:19.261942100 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2177/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:19.261942100 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1214/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:31.765365353 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1214/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:31.765365353 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1635/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:12.385620687 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1635/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:12.385620687 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n@@ -231,13 +229,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1753/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:40.261691357 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1753/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:40.261691357 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1753/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:40.261691357 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1918/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:18.909789286 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1918/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:18.913789296 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1791/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:49.421714572 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1791/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:49.425714582 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1462/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:30.057513324 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1462/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:30.057513324 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1189/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:25.889350430 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1189/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:25.889350430 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1095/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:02.577291210 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1095/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:02.581291220 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1095/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:02.581291220 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1630/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:11.361618091 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1630/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:11.361618091 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1630/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:11.361618091 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1159/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:19.005332944 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1159/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:19.005332944 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1159/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:19.005332944 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1806/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:52.357722012 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1806/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:52.357722012 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1072/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:56.973276971 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1072/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:56.977276981 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_864/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:04.277143012 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_864/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:04.277143012 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1333/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:58.505433248 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1333/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:58.505433248 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1231/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:35.413374617 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1231/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:35.413374617 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2252/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:36.937986832 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2252/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:36.941986842 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -178,8 +178,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1617/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:08.405610595 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1617/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:08.409610606 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n@@ -243,43 +240,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1208/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:30.461362041 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1208/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:30.465362051 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1433/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:23.201495927 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return false;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1433/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:23.201495927 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1433/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:23.205495937 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2062/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:52.945875484 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2062/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:52.945875484 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2118/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:05.797908021 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2118/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:05.797908021 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2118/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:05.801908030 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -243,43 +243,6 @@\n \n   /** Determines if typeA is a subtype of typeB */\n   static boolean isSubtype(ObjectType typeA, RecordType typeB) {\n-    // typeA is a subtype of record type typeB iff:\n-    // 1) typeA has all the properties declared in typeB.\n-    // 2) And for each property of typeB,\n-    //    2a) if the property of typeA is declared, it must be equal\n-    //        to the type of the property of typeB,\n-    //    2b) otherwise, it must be a subtype of the property of typeB.\n-    //\n-    // To figure out why this is true, consider the following pseudo-code:\n-    // /** @type {{a: (Object,null)}} */ var x;\n-    // /** @type {{a: !Object}} */ var y;\n-    // var z = {a: {}};\n-    // x.a = null;\n-    //\n-    // y cannot be assigned to x, because line 4 would violate y's declared\n-    // properties. But z can be assigned to x. Even though z and y are the\n-    // same type, the properties of z are inferred--and so an assignment\n-    // to the property of z would not violate any restrictions on it.\n-    for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n-      JSType propA = typeA.getPropertyType(property);\n-      JSType propB = typeB.getPropertyType(property);\n-      if (!propA.isUnknownType() && !propB.isUnknownType()) {\n-        if (typeA.isPropertyTypeDeclared(property)) {\n-          if (!propA.isEquivalentTo(propB)) {\n-            return false;\n-          }\n-        } else {\n-          if (!propA.isSubtype(propB)) {\n-            return false;\n-          }\n-        }\n-      }\n-    }\n-\n     return true;\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 263, 
          "faulty": "for (String property : typeB.properties.keySet()) {\n  if (!typeA.hasProperty(property)) {\n    return false;\n  }\n  JSType propA=typeA.getPropertyType(property);\n  JSType propB=typeB.getPropertyType(property);\n  if (!propA.isUnknownType() && !propB.isUnknownType()) {\n    if (typeA.isPropertyTypeDeclared(property)) {\n      if (!propA.isEquivalentTo(propB)) {\n        return false;\n      }\n    }\n else {\n      if (!propA.isSubtype(propB)) {\n        return false;\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1702/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:28.733662136 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1702/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:28.733662136 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1967/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:30.661819053 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1967/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:30.661819053 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1967/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:30.661819053 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1224/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:33.757370412 -0500\n@@ -455,7 +455,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1224/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:33.761370422 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1224/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:33.761370422 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1183/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:24.269346315 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1183/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:24.269346315 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:46.417858955 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:46.417858955 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2035/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:46.421858964 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1743/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:38.565687058 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1743/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:38.569687068 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1268/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:43.641395510 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1268/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:43.645395520 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1086/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:00.605286199 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1086/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:00.605286199 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1565/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:55.717578418 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1565/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:55.717578418 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_940/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:25.145196074 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_940/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:25.145196074 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n@@ -238,7 +235,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1328/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:57.205429948 -0500\n@@ -372,13 +372,10 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1328/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:57.209429957 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1328/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:57.209429957 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2076/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:56.265883890 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n@@ -455,7 +454,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2076/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:56.265883890 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2076/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:56.265883890 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1905/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:16.277782619 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1905/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:16.281782628 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1104/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:05.197297866 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1104/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:05.201297877 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1210/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:30.789362874 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1210/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:30.789362874 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1439/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:24.529499297 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1439/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:24.529499297 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1640/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:13.681623974 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1640/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:13.681623974 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_655/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:02.168984978 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_655/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:02.168984978 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1256/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:41.001388807 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1256/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:41.001388807 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:45:35.312916592 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:35.312916592 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_568/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:35.312916592 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_618/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:50.732955862 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_618/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:50.732955862 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1204/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:29.493359582 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1204/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:29.493359582 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1283/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:47.245404661 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1283/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:47.245404661 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1683/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:24.117650433 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1683/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:24.117650433 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1683/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:24.117650433 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_855/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:01.657136349 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_855/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:01.657136349 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_976/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:34.093218822 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_976/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:34.097218831 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1218/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:32.417367009 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1218/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:32.417367009 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_609/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:45:48.368949842 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_609/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:48.368949842 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_609/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:48.368949842 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1726/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:34.305676260 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1726/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:34.309676270 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1311/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:53.873421488 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1311/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:53.873421488 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2013/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:41.457846394 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2013/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:41.461846405 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2013/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:41.461846405 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1681/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:23.777649572 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1681/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:23.781649581 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_966/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:31.441212080 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_966/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:31.441212080 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_966/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:31.441212080 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1923/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:19.897791789 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1923/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:19.897791789 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1923/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:19.897791789 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2154/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:13.665927936 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2154/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:13.665927936 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1950/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:25.829806815 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1950/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:25.829806815 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1380/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:10.373463372 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n@@ -455,7 +452,7 @@\n \n     // record types\n     if (that.isRecordType()) {\n-      return RecordType.isSubtype(this, that.toMaybeRecordType());\n+      return true;\n     }\n \n     // Interfaces\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1380/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:10.373463372 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1380/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:10.373463372 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 458, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2111/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:04.473904669 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2111/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:04.473904669 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2111/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:04.473904669 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2206/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:26.085959372 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2206/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:26.085959372 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_852/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:01.005134691 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_852/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:01.005134691 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n@@ -225,12 +219,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2279/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:43.542003542 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2279/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:43.542003542 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2235/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:32.677976053 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2235/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:32.677976053 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2086/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:58.545889661 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2086/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:58.545889661 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2086/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:58.545889661 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2240/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:33.665978553 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2240/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:33.665978553 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2240/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:33.665978553 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2199/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:24.773956051 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2199/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:24.773956051 -0500\n@@ -100,14 +100,10 @@\n \n     // Compare properties.\n     RecordType otherRecord = other.toMaybeRecordType();\n-    if (otherRecord == this) {\n-      return true;\n-    }\n-\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +234,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 103, 
          "faulty": "if (otherRecord == this) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_924/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:20.529184339 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_924/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:20.533184349 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1931/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:21.577796045 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1931/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:21.577796045 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1796/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:50.397717045 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1796/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:50.401717056 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2261/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:38.945991913 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2261/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:38.945991913 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2261/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:38.949991924 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_894/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:13.245165818 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_894/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:13.245165818 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1226/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:34.089371255 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1226/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:34.089371255 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1175/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:22.941342942 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1175/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:22.941342942 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1155/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:48:18.021330444 -0500\n@@ -379,7 +379,6 @@\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n-        ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n           break;\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1155/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:18.021330444 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1155/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:18.021330444 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 382, 
          "faulty": "++i;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2007/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:40.125843021 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2007/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:40.129843032 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n@@ -178,8 +175,6 @@\n               thatRecord.getPropertyNode(property));\n         }\n       }\n-\n-      return builder.build();\n     }\n \n     JSType greatestSubtype = registry.getNativeType(\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 182, 
          "faulty": "return builder.build();", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_794/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:44.485092669 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_794/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:44.489092679 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1853/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:03.585750464 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1853/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:03.589750474 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2296/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:47.458013449 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2296/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:47.458013449 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -174,8 +174,6 @@\n \n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n         }\n       }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1062/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:54.941271807 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1062/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:54.945271817 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1077/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:58.277280284 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1077/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:58.281280294 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1068/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:55.973274429 -0500\n@@ -377,8 +377,6 @@\n \n         sb.append(property);\n         sb.append(\": \");\n-        sb.append(getPropertyType(property).toString());\n-\n         ++i;\n         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n           sb.append(\", ...\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1068/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:55.973274429 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1068/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:55.973274429 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -231,13 +231,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 380, 
          "faulty": "sb.append(getPropertyType(property).toString());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_969/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:32.097213748 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_969/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:32.097213748 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1957/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:27.449810918 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1957/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:27.453810928 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1668/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:20.829642097 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1668/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:20.833642108 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1942/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:23.853801809 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1942/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:23.853801809 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -262,7 +262,6 @@\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n       if (!typeA.hasProperty(property)) {\n-        return false;\n       }\n \n       JSType propA = typeA.getPropertyType(property);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 265, 
          "faulty": "return false;", 
          "type": "Delete", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1394/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:13.957472468 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1394/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:13.957472468 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1506/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:41.217541638 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1506/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:41.217541638 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1506/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:41.221541647 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1835/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:58.949738717 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1835/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:58.949738717 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2116/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:05.461907170 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2116/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:05.461907170 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -261,10 +261,6 @@\n     // same type, the properties of z are inferred--and so an assignment\n     // to the property of z would not violate any restrictions on it.\n     for (String property : typeB.properties.keySet()) {\n-      if (!typeA.hasProperty(property)) {\n-        return false;\n-      }\n-\n       JSType propA = typeA.getPropertyType(property);\n       JSType propB = typeB.getPropertyType(property);\n       if (!propA.isUnknownType() && !propB.isUnknownType()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 264, 
          "faulty": "if (!typeA.hasProperty(property)) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_800/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:46.125096841 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_800/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:46.129096852 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1570/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:56.705580924 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1570/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:56.705580924 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -173,10 +173,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2197/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:24.201954604 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2197/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:24.201954604 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1771/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:44.825702924 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1771/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:44.825702924 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1988/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:35.625831626 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1988/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:35.837832160 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2150/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:52:12.693925476 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2150/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:12.693925476 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2150/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:12.693925476 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -225,12 +225,6 @@\n       return true;\n     }\n \n-    // Top of the record types is the empty record, or OBJECT_TYPE.\n-    if (registry.getNativeObjectType(\n-            JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n-      return true;\n-    }\n-\n     // A type is a subtype of a record type if it itself is a record\n     // type and it has at least the same members as the parent record type\n     // with the same types.\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 229, 
          "faulty": "if (registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE).isSubtype(that)) {\n  return true;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2145/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:11.689922936 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2145/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:11.689922936 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_899/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:14.245168361 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_899/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:14.245168361 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1991/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:36.533833925 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1991/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:36.533833925 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1525/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:45.877553459 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1525/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:45.877553459 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1525/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:45.877553459 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2042/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:48.077863157 -0500\n@@ -372,7 +372,6 @@\n       int i = 0;\n       for (String property : propertyNames) {\n         if (i > 0) {\n-          sb.append(\", \");\n         }\n \n         sb.append(property);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2042/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:48.077863157 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2042/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:48.081863168 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 375, 
          "faulty": "sb.append(\", \");", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1181/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:23.937345471 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1181/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:23.941345482 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1892/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:12.493773032 -0500\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1892/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:12.497773043 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1892/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:12.497773043 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -143,14 +143,6 @@\n       return super.getLeastSupertype(that);\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n-    for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-    }\n     return builder.build();\n   }\n   JSType getGreatestSubtypeHelper(JSType that) {\n@@ -173,10 +165,6 @@\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 146, 
          "faulty": "for (String property : properties.keySet()) {\n  if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1999/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:38.469838827 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1999/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:38.469838827 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -238,7 +238,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1499/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:39.577537477 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1499/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:39.577537477 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2143/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:11.361922105 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2143/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:11.361922105 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_634/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:45:55.788968735 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_634/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:45:55.788968735 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -167,9 +167,6 @@\n                 getPropertyType(property))) {\n           return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n         }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n \n       for (String property : thatRecord.properties.keySet()) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1769/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:44.497702093 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1769/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:44.497702093 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1265/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:43.001393885 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1265/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:43.001393885 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:51:16.621783490 -0500\n@@ -256,9 +256,6 @@\n   @Override\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n-    if (p != null) {\n-      return p.getNode();\n-    }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n       return implicitPrototype.getPropertyNode(propertyName);\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:16.621783490 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1907/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:16.621783490 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 259, 
          "faulty": "if (p != null) {\n  return p.getNode();\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1745/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:38.893687889 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1745/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:38.893687889 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n@@ -238,7 +232,7 @@\n       return false;\n     }\n \n-    return RecordType.isSubtype(this, that.toMaybeRecordType());\n+    return false;\n   }\n \n   /** Determines if typeA is a subtype of typeB */\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 241, 
          "faulty": "return RecordType.isSubtype(this,that.toMaybeRecordType());", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1301/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:48:51.261414857 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1301/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:48:51.261414857 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1764/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:43.205698819 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1764/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:43.205698819 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1764/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:43.205698819 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1861/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:05.209754578 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1861/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:05.213754588 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1596/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:50:03.449598027 -0500\n@@ -371,10 +371,6 @@\n \n       int i = 0;\n       for (String property : propertyNames) {\n-        if (i > 0) {\n-          sb.append(\", \");\n-        }\n-\n         sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1596/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:50:03.449598027 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1596/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:50:03.449598027 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -139,9 +139,6 @@\n \n   @Override\n   public JSType getLeastSupertype(JSType that) {\n-    if (!that.isRecordType()) {\n-      return super.getLeastSupertype(that);\n-    }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n       if (that.toMaybeRecordType().hasProperty(property) &&\n@@ -231,13 +228,6 @@\n       return true;\n     }\n \n-    // A type is a subtype of a record type if it itself is a record\n-    // type and it has at least the same members as the parent record type\n-    // with the same types.\n-    if (!that.isRecordType()) {\n-      return false;\n-    }\n-\n     return RecordType.isSubtype(this, that.toMaybeRecordType());\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 237, 
          "faulty": "if (!that.isRecordType()) {\n  return false;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 374, 
          "faulty": "if (i > 0) {\n  sb.append(\", \");\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 142, 
          "faulty": "if (!that.isRecordType()) {\n  return super.getLeastSupertype(that);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1054/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:52.637265953 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1054/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:52.641265962 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1984/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:34.961829943 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1984/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:34.961829943 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_706/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:17.973025207 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_706/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:17.973025207 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_946/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:47:26.497199511 -0500\n@@ -375,7 +375,6 @@\n           sb.append(\", \");\n         }\n \n-        sb.append(property);\n         sb.append(\": \");\n         sb.append(getPropertyType(property).toString());\n \n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_946/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:26.497199511 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_946/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:26.501199522 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,20 +158,6 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n         if (!hasProperty(property)) {\n           builder.addProperty(property, thatRecord.getPropertyType(property),\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 378, 
          "faulty": "sb.append(property);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1572/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2018-12-01 09:49:57.045581786 -0500\n@@ -257,7 +257,6 @@\n   public Node getPropertyNode(String propertyName) {\n     Property p = properties.get(propertyName);\n     if (p != null) {\n-      return p.getNode();\n     }\n     ObjectType implicitPrototype = getImplicitPrototype();\n     if (implicitPrototype != null) {\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1572/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:57.049581796 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1572/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:57.049581796 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -144,12 +144,6 @@\n     }\n     RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n     for (String property : properties.keySet()) {\n-      if (that.toMaybeRecordType().hasProperty(property) &&\n-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n-              getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n     }\n     return builder.build();\n   }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 147, 
          "faulty": "if (that.toMaybeRecordType().hasProperty(property) && that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 260, 
          "faulty": "return p.getNode();", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1538/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:49:48.805560886 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1538/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:49:48.809560896 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2133/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:09.061916284 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2133/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:09.061916284 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_952/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:27.817202867 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_952/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:27.821202878 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_838/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:57.033124588 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_838/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:57.037124598 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -158,25 +158,7 @@\n       RecordType thatRecord = that.toMaybeRecordType();\n       RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n \n-      // The greatest subtype consists of those *unique* properties of both\n-      // record types. If any property conflicts, then the NO_TYPE type\n-      // is returned.\n-      for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n-      }\n-\n       for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n       }\n \n       return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 164, 
          "faulty": "for (String property : properties.keySet()) {\n  if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n    return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n  }\n  builder.addProperty(property,getPropertyType(property),getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 171, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_650/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:46:00.848981618 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_650/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:46:00.848981618 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -162,12 +162,6 @@\n       // record types. If any property conflicts, then the NO_TYPE type\n       // is returned.\n       for (String property : properties.keySet()) {\n-        if (thatRecord.hasProperty(property) &&\n-            !thatRecord.getPropertyType(property).isEquivalentTo(\n-                getPropertyType(property))) {\n-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n-        }\n-\n         builder.addProperty(property, getPropertyType(property),\n             getPropertyNode(property));\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 165, 
          "faulty": "if (thatRecord.hasProperty(property) && !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {\n  return registry.getNativeObjectType(JSTypeNative.NO_TYPE);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2161/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:52:15.297932068 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_2161/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:52:15.301932077 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1910/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:51:17.273785142 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_1910/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:51:17.273785142 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:37:54.247737241 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_993/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2018-12-01 09:47:38.369229690 -0500\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:37:56.231742339 -0500\n+++ /tmp/Arja_Defects4J_Closure_46/patches_n0i3/Patch_993/patched/tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2018-12-01 09:47:38.373229701 -0500\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -147,8 +147,6 @@\n       if (that.toMaybeRecordType().hasProperty(property) &&\n           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n               getPropertyType(property))) {\n-        builder.addProperty(property, getPropertyType(property),\n-            getPropertyNode(property));\n       }\n     }\n     return builder.build();\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 150, 
          "faulty": "builder.addProperty(property,getPropertyType(property),getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}