{
  "repair_end": "2018-12-02 12:10:22.747726", 
  "repair_begin": "2018-12-02 11:43:05.726644", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 220, 
          "faulty": "name=name.parent;", 
          "type": "InsertBefore", 
          "seed": "int start=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_607/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:55:02.435151917 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -217,7 +215,8 @@\n     // grab the highest undefined ancestor to output in the warning message.\n     while (name.parent != null &&\n            name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n+      int start = 0;\n+\tname = name.parent;\n     }\n \n     compiler.report(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 220, 
          "faulty": "name=name.parent;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_852/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:57:46.599398055 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -217,7 +215,6 @@\n     // grab the highest undefined ancestor to output in the warning message.\n     while (name.parent != null &&\n            name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n     }\n \n     compiler.report(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 220, 
          "faulty": "name=name.parent;", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_602/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:54:59.727147609 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -217,7 +214,7 @@\n     // grab the highest undefined ancestor to output in the warning message.\n     while (name.parent != null &&\n            name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n+      StringBuilder builder = new StringBuilder();\n     }\n \n     compiler.report(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "int start=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1788/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:08:17.580093900 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        int start = 0;\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1820/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:08:38.188115664 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 218, 
          "faulty": "while (name.parent != null && name.parent.globalSets + name.parent.localSets == 0) {\n  name=name.parent;\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_503/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:53:55.347042036 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -214,12 +211,6 @@\n   }\n \n   private void reportRefToUndefinedName(Name name, Ref ref) {\n-    // grab the highest undefined ancestor to output in the warning message.\n-    while (name.parent != null &&\n-           name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n-    }\n-\n     compiler.report(\n         JSError.make(ref.getSourceName(), ref.node, level,\n             UNDEFINED_NAME_WARNING, name.getFullName()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_263/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:51:14.602746832 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_21/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:31.586432016 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        int index = -1;\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1457/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:04:38.831879804 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -220,9 +218,7 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    int index = -1;\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_10/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:13.902392653 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 220, 
          "faulty": "name=name.parent;", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1316/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:03:06.007790086 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -217,7 +215,8 @@\n     // grab the highest undefined ancestor to output in the warning message.\n     while (name.parent != null &&\n            name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n+      StringBuilder builder = new StringBuilder();\n+\tname = name.parent;\n     }\n \n     compiler.report(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1828/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:08:42.844120616 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        int index = -1;\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 218, 
          "faulty": "while (name.parent != null && name.parent.globalSets + name.parent.localSets == 0) {\n  name=name.parent;\n}", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_510/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:53:59.383048847 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -214,7 +212,8 @@\n   }\n \n   private void reportRefToUndefinedName(Name name, Ref ref) {\n-    // grab the highest undefined ancestor to output in the warning message.\n+    final String paramName = \"jscomp_throw_param\";\n+\t// grab the highest undefined ancestor to output in the warning message.\n     while (name.parent != null &&\n            name.parent.globalSets + name.parent.localSets == 0) {\n       name = name.parent;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "Replace", 
          "seed": "return new DotFormatter();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1020/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:59:37.839553017 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Delete", 
          "seed": "return this;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_5/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:11.714387694 -0500\n@@ -219,10 +219,6 @@\n            name.parent.globalSets + name.parent.localSets == 0) {\n       name = name.parent;\n     }\n-\n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "formatConclusion();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "InsertBefore", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1587/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:06:04.311960319 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "Delete", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_35/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:46.374463993 -0500\n@@ -155,8 +155,8 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n+        final String paramName = \"jscomp_throw_param\";\n+\t\tif (!isGlobalExpr) {\n         }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "InsertBefore", 
          "seed": "return this;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_979/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:59:11.179516494 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_207/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:50:38.198682737 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        StringBuilder builder = new StringBuilder();\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_154/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:50:03.026617828 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -220,9 +218,7 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    StringBuilder builder = new StringBuilder();\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_111/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:49:35.358564418 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_18/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:30.214429006 -0500\n@@ -220,9 +220,7 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    StringBuilder builder = new StringBuilder();\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_68/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:49:07.530508355 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -219,10 +217,6 @@\n            name.parent.globalSets + name.parent.localSets == 0) {\n       name = name.parent;\n     }\n-\n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1474/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:04:49.495890605 -0500\n@@ -220,9 +220,7 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    int index = -1;\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_1348/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 06:03:26.687809331 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 218, 
          "faulty": "while (name.parent != null && name.parent.globalSets + name.parent.localSets == 0) {\n  name=name.parent;\n}", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_96/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:49:25.926545691 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -214,15 +212,7 @@\n   }\n \n   private void reportRefToUndefinedName(Name name, Ref ref) {\n-    // grab the highest undefined ancestor to output in the warning message.\n-    while (name.parent != null &&\n-           name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n-    }\n-\n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    StringBuilder builder = new StringBuilder();\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_8/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:13.210391087 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_253/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:51:08.526736336 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        StringBuilder builder = new StringBuilder();\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -220,9 +218,7 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    StringBuilder builder = new StringBuilder();\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 218, 
          "faulty": "while (name.parent != null && name.parent.globalSets + name.parent.localSets == 0) {\n  name=name.parent;\n}", 
          "type": "Delete", 
          "seed": "return 0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_53/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:58.050488670 -0500\n@@ -155,9 +155,7 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n+        final String paramName = \"jscomp_throw_param\";\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -214,12 +212,6 @@\n   }\n \n   private void reportRefToUndefinedName(Name name, Ref ref) {\n-    // grab the highest undefined ancestor to output in the warning message.\n-    while (name.parent != null &&\n-           name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n-    }\n-\n     compiler.report(\n         JSError.make(ref.getSourceName(), ref.node, level,\n             UNDEFINED_NAME_WARNING, name.getFullName()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 158, 
          "faulty": "if (!isGlobalExpr) {\n  reportRefToUndefinedName(name,ref);\n}", 
          "type": "Delete", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "InsertBefore", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_518/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:54:04.031056660 -0500\n@@ -155,9 +155,6 @@\n       boolean isGlobalExpr = ref.getNode().getParent().isExprResult();\n \n       if (!isDefined && !isTypedef(ref)) {\n-        if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n-        }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n           !moduleGraph.dependsOn(\n@@ -220,7 +217,8 @@\n       name = name.parent;\n     }\n \n-    compiler.report(\n+    final String paramName = \"jscomp_throw_param\";\n+\tcompiler.report(\n         JSError.make(ref.getSourceName(), ref.node, level,\n             UNDEFINED_NAME_WARNING, name.getFullName()));\n   }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 159, 
          "faulty": "reportRefToUndefinedName(name,ref);", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_3/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:48:10.914385876 -0500\n@@ -156,7 +156,6 @@\n \n       if (!isDefined && !isTypedef(ref)) {\n         if (!isGlobalExpr) {\n-          reportRefToUndefinedName(name, ref);\n         }\n       } else if (declaration != null &&\n           ref.getModule() != declaration.getModule() &&\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 218, 
          "faulty": "while (name.parent != null && name.parent.globalSets + name.parent.localSets == 0) {\n  name=name.parent;\n}", 
          "type": "Delete", 
          "seed": "return 0;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckGlobalNames.java", 
          "line": 223, 
          "faulty": "compiler.report(JSError.make(ref.getSourceName(),ref.node,level,UNDEFINED_NAME_WARNING,name.getFullName()));", 
          "type": "Replace", 
          "seed": "StringBuilder builder=new StringBuilder();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:42:43.834215860 -0500\n+++ /tmp/GenProg_Defects4J_Closure_119/patches_io4p/Patch_145/patched/tmp/GenProg_Defects4J_Closure_119/src/com/google/javascript/jscomp/CheckGlobalNames.java\t2018-12-02 05:49:57.618607559 -0500\n@@ -214,15 +214,7 @@\n   }\n \n   private void reportRefToUndefinedName(Name name, Ref ref) {\n-    // grab the highest undefined ancestor to output in the warning message.\n-    while (name.parent != null &&\n-           name.parent.globalSets + name.parent.localSets == 0) {\n-      name = name.parent;\n-    }\n-\n-    compiler.report(\n-        JSError.make(ref.getSourceName(), ref.node, level,\n-            UNDEFINED_NAME_WARNING, name.getFullName()));\n+    StringBuilder builder = new StringBuilder();\n   }\n \n   /**\n\n\n"
    }
  ]
}