cd /tmp/DynaMoth_Defects4J_Closure_71;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -d64 -Xmx4g -Xms1g -XX:MaxPermSize=1024m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSClassUnloadingEnabled -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis dynamoth \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 6 \
	--source src/ \
	--classpath "build/classes/:build/test/:/tmp/DynaMoth_Defects4J_Closure_71/build/classes:/tmp/DynaMoth_Defects4J_Closure_71/build/test:/tmp/DynaMoth_Defects4J_Closure_71/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/jsr305.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/caja-r4314.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/guava.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0
18:35:01.961 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src]
18:35:01.992 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/DynaMoth_Defects4J_Closure_71/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_71/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_71/build/classes/, file:/tmp/DynaMoth_Defects4J_Closure_71/build/test/, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/junit.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/jsr305.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/args4j.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/caja-r4314.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant-launcher.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/protobuf-java.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/json.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/libtrunk_rhino_parser_jarjared.jar, file:/tmp/DynaMoth_Defects4J_Closure_71/lib/guava.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
18:35:01.992 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
18:35:01.992 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest]
18:35:01.994 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src], projectClasspath='[Ljava.net.URL;@2ff4f00f', projectTests=[com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64Test, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.Base64VLQTest, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV1Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapConsumerV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV1Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV2Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.debugging.sourcemap.SourceMapGeneratorV3Test, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasExternalsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasKeywordsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AliasStringsTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AmbiguatePropertiesTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstParallelizerTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.AstValidatorTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.BasicErrorManagerTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.CallGraphTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.ChainCallsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccessControlsTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckAccidentalSemicolonTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalNamesTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckGlobalThisTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingGetCssNameTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckMissingReturnTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPathsBetweenNodesTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckPropertyOrderTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckProvidesTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRegExpTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckRequiresForConstructorsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckSideEffectsTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.CheckUnreachableCodeTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodeRemovalTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureCodingConventionTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureOptimizePrimitivesTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CoalesceVariableNamesTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CodePrinterTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapseAnonymousFunctionsTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapsePropertiesTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CollapseVariableDeclarationsTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CombinedCompilerPassTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CommandLineRunnerTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerOptionsTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.CompilerTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConcreteTypeTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ConstCheckTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlFlowAnalysisTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ControlStructureCheckTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.ConvertToDottedPropertiesTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CreateSyntheticBlocksTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleCodeMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.CrossModuleMethodMotionTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DataFlowAnalysisTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DeadAssignmentsEliminationTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefaultCodingConventionTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DefinitionsRemoverTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DenormalizeTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DiagnosticGroupTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DisambiguatePropertiesTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.DotFormatterTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExploitAssignsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExportTestFunctionsTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExpressionDecomposerTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExternExportsPassTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.ExtractPrototypeMemberDeclarationsTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FixedPointGraphTraversalTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionArgumentInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionInjectorTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionNamesTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionRewriterTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionToBlockMutatorTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.FunctionTypeBuilderTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherRawExportsTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallbackTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GenerateExportsTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GlobalNamespaceTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GoogleCodingConventionTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.GroupVariableDeclarationsTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.IgnoreCajaPropertiesTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InferJSDocInfoTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineCostEstimatorTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineFunctionsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineObjectLiteralsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineSimpleMethodsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesConstantsTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InlineVariablesTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.InstrumentFunctionsTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleGraphTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JSModuleTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageExtractorTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.JsMessageVisitorTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LightweightMessageFormatterTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LinkedFlowScopeTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LiveVariableAnalysisTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.LooseTypeCheckTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MarkNoSideEffectCallsTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MaybeReachingVariableUseTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MemoizedScopeCreatorTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MinimizeExitPointsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MoveFunctionDeclarationsTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.MustBeReachingVariableDefTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnalyzerTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsMappedTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NameAnonymousFunctionsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeIteratorsTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeTraversalTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NodeUtilTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.NormalizeTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPostprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.ObjectPropertyStringPreprocessTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OperaCompoundAssignFixTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeArgumentsArrayTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeParametersTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.OptimizeReturnsTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.ParallelCompilerPassTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeCollectPropertyAssignmentsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldConstantsTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeFoldWithTypesTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeIntegrationTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeOptimizationsPassTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PhaseOptimizerTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.PrepareAstTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessClosurePrimitivesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessDefinesTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.ProcessTweaksTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.PureFunctionIdentifierTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RecordFunctionInformationTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveTryCatchTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedNamesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RemoveUnusedVarsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLabelsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenameLocalVarsTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePropertiesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenamePrototypesTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.RenameVarsTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceCssNamesTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceIdGeneratorsTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceMessagesTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.ReplaceStringsTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RhinoErrorReporterTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.RuntimeTypeCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.SanityCheckTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.ScopedAliasesTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.ShadowVariablesTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SideEffectsAnalysisTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleDefinitionFinderTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SimpleFunctionAliasAnalysisTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SourceInformationAnnotatorTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.SpecializeModuleTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StatementFusionTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StrictModeCheckTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.StripCodeTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SuspiciousPropertiesCheckTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.SyntacticScopeCreatorTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TightenTypesTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckFunctionCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeCheckTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeInferenceTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypeValidatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.TypedScopeCreatorTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnfoldCompoundAssignmentsTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.UnreachableCodeEliminationTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VarCheckTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableMapTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableReferenceCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableShadowDeclarationCheckTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.VariableVisibilityAnalysisTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.DepsFileParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileLineParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFileParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.JsFunctionParserTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.deps.SortedDependenciesTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphColoringTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphReachabilityTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.GraphTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.graph.StandardUnionFindTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLConversionTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.JsonMLValidationTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.jsonml.SecureCompilerTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.IRFactoryTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocInfoParserTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.JsDocTokenStreamTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.jscomp.parsing.ParserTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.JSDocInfoTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.NodeTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.ParserTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.TokenStreamTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.BooleanLiteralSetTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionParamBuilderTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.FunctionTypeTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeRegistryTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.JSTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.NamedTypeTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.TernaryValueTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeBuilderTest, com.google.javascript.rhino.jstype.UnionTypeTest, com.google.javascript.rhino.jstype.UnionTypeTest], complianceLevel=6, outputFolder=., json=true}
18:35:01.995 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 32
18:35:02.017 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 886 MB
18:35:02.017 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
18:35:02.017 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
18:35:02.017 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
18:35:02.018 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
18:35:02.018 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
18:36:01.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
18:36:01.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1424 which is executed by 10 tests
2433571
18:36:01.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
18:36:02.559 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (742 ms)
<> Total tests run: 155
<> Ignored tests: 0
<> Failed tests: 53
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)

18:36:04.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
18:36:04.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.google.javascript.rhino.Node:1382 which is executed by 10 tests
2433571
18:36:04.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]

    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
18:36:05.438 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (506 ms)
<> Total tests run: 155
<> Ignored tests: 0
<> Failed tests: 53
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject1(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=y;var JSCompiler_object_inline_x_0=x;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=y;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject2(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_0=y;var JSCompiler_object_inline_x_1;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Result: var JSCompiler_object_inline_x_1;var JSCompiler_object_inline_y_0=y;JSCompiler_object_inline_x_1=z;f(JSCompiler_object_inline_x_1,JSCompiler_object_inline_y_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
                NAME y 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME z 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]
                NAME y 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME z 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_0 1 [sourcename: expected0]
    NAME y 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_1 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject7(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1=f();var JSCompiler_object_inline_x_0=x;g(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0=x;var JSCompiler_object_inline_y_1=f();g(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME x 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME g 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME x 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME g 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
    CALL 1 [sourcename: expected0] [free_call: 1]
        NAME f 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    NAME x 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject8(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;if(c)JSCompiler_object_inline_x_0=x,JSCompiler_object_inline_y_1=y,true;else JSCompiler_object_inline_x_0=y,JSCompiler_object_inline_y_1=void 0,true;f(JSCompiler_object_inline_x_0)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                                NAME y 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                                VOID 1 [sourcename: expected0]
                                    NUMBER 0.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                                NAME y 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                                VOID 1 [sourcename: testcode]
                                    NUMBER 0.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject9(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: function f(a,b){var JSCompiler_object_inline_b_1=b;var JSCompiler_object_inline_a_0=a;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Result: function f(a,b){var JSCompiler_object_inline_a_0=a;var JSCompiler_object_inline_b_1=b;g(JSCompiler_object_inline_a_0);JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=2,true;return JSCompiler_object_inline_b_1}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION f 1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                NAME b 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        COMMA 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                                NUMBER 2.0 1 [sourcename: expected0]
                        TRUE 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION f 1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
                NAME b 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        COMMA 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                                NUMBER 2.0 1 [sourcename: testcode]
                        TRUE 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
    NAME b 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    NAME a 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject10(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_b_1;var JSCompiler_object_inline_a_0;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Result: var JSCompiler_object_inline_a_0;var JSCompiler_object_inline_b_1;var b=f();JSCompiler_object_inline_a_0=a,JSCompiler_object_inline_b_1=b,true;if(JSCompiler_object_inline_a_0)g(JSCompiler_object_inline_b_1)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME b 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME f 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
                        NAME a 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]
                        NAME b 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        IF 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME g 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME b 1 [sourcename: testcode]
                CALL 1 [sourcename: testcode] [free_call: 1]
                    NAME f 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
                        NAME a 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]
                        NAME b 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        IF 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME g 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_b_1 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_b_1 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_a_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testObject12(com.google.javascript.jscomp.InlineObjectLiteralsTest)
[
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_object_inline_y2_2;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_x_0;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Result: var JSCompiler_object_inline_x_0;var JSCompiler_object_inline_y_1;var JSCompiler_object_inline_y2_2;JSCompiler_object_inline_x_0=1,JSCompiler_object_inline_y_1=2,JSCompiler_object_inline_y2_2=void 0,true;f(JSCompiler_object_inline_x_0,JSCompiler_object_inline_y2_2)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            COMMA 1 [sourcename: expected0]
                COMMA 1 [sourcename: expected0]
                    COMMA 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: expected0]
                            NUMBER 2.0 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]
                        VOID 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
                TRUE 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: expected0]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            COMMA 1 [sourcename: testcode]
                COMMA 1 [sourcename: testcode]
                    COMMA 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME JSCompiler_object_inline_y_1 1 [sourcename: testcode]
                            NUMBER 2.0 1 [sourcename: testcode]
                    ASSIGN 1 [sourcename: testcode]
                        NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]
                        VOID 1 [sourcename: testcode]
                            NUMBER 0.0 1 [sourcename: testcode]
                TRUE 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
                NAME JSCompiler_object_inline_y2_2 1 [sourcename: testcode]


Subtree1: NAME JSCompiler_object_inline_y2_2 1 [sourcename: expected0]


Subtree2: NAME JSCompiler_object_inline_x_0 1 [sourcename: testcode]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testTwoMethods(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(1);Foo.prototype.callBaz=JSCompiler_stubMethod(0);Foo.prototype.baz=JSCompiler_unstubMethod(1,function(){});
Foo.prototype.callBaz=JSCompiler_unstubMethod(0,function(){this.baz()});(new Foo).callBaz()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.baz=JSCompiler_stubMethod(0);Foo.prototype.callBaz=JSCompiler_stubMethod(1);
Foo.prototype.callBaz=JSCompiler_unstubMethod(1,function(){this.baz()});Foo.prototype.baz=JSCompiler_unstubMethod(0,function(){});(new Foo).callBaz()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING baz 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 1.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING callBaz 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING baz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 0.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                CALL 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        THIS 1 [sourcename: expected2]
                                        STRING baz 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NEW 1 [sourcename: expected2] [parenthesized: true]
                        NAME Foo 1 [sourcename: expected2]
                    STRING callBaz 1 [sourcename: expected2]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_stubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i1]
            ASSIGN 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    GETPROP 1 [sourcename: i1]
                        NAME Foo 1 [sourcename: i1]
                        STRING prototype 1 [sourcename: i1]
                    STRING callBaz 1 [sourcename: i1]
                CALL 1 [sourcename: i1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i1]
                    NUMBER 1.0 1 [sourcename: i1]
                    FUNCTION  1 [sourcename: i1]
                        NAME  1 [sourcename: i1]
                        LP 1 [sourcename: i1]
                        BLOCK 1 [sourcename: i1]
                            EXPR_RESULT 1 [sourcename: i1]
                                CALL 1 [sourcename: i1]
                                    GETPROP 1 [sourcename: i1]
                                        THIS 1 [sourcename: i1]
                                        STRING baz 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING baz 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NEW 1 [sourcename: i2] [parenthesized: true]
                        NAME Foo 1 [sourcename: i2]
                    STRING callBaz 1 [sourcename: i2]


Subtree1: NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 0.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)
~ testClosureVariableReads3(com.google.javascript.jscomp.CrossModuleMethodMotionTest)
[
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
]
junit.framework.AssertionFailedError: 
Expected: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(0);Foo.prototype.b1=JSCompiler_unstubMethod(0,function(){Foo.prototype.b2=JSCompiler_stubMethod(1)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(1,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Result: var JSCompiler_stubMap=[];function JSCompiler_stubMethod(JSCompiler_stubMethod_id){return function(){return JSCompiler_stubMap[JSCompiler_stubMethod_id].apply(this,arguments)}}function JSCompiler_unstubMethod(JSCompiler_unstubMethod_id,JSCompiler_unstubMethod_body){return JSCompiler_stubMap[JSCompiler_unstubMethod_id]=JSCompiler_unstubMethod_body}function Foo(){}Foo.prototype.b1=JSCompiler_stubMethod(1);Foo.prototype.b1=JSCompiler_unstubMethod(1,function(){Foo.prototype.b2=JSCompiler_stubMethod(0)});
var y=new Foo;y.b1();Foo.prototype.b2=JSCompiler_unstubMethod(0,function(){var x=1;Foo.prototype.b3=function(){x}});y=new Foo;z.b2();y=new Foo;z.b3()
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                ARRAYLIT 1 [sourcename: expected0]
        FUNCTION JSCompiler_stubMethod 1 [sourcename: expected0]
            NAME JSCompiler_stubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    FUNCTION  1 [sourcename: expected0]
                        NAME  1 [sourcename: expected0]
                        LP 1 [sourcename: expected0]
                        BLOCK 1 [sourcename: expected0]
                            RETURN 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        GETELEM 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename: expected0]
                                        STRING apply 1 [sourcename: expected0]
                                    THIS 1 [sourcename: expected0]
                                    NAME arguments 1 [sourcename: expected0]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename: expected0]
            NAME JSCompiler_unstubMethod 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    ASSIGN 1 [sourcename: expected0]
                        GETELEM 1 [sourcename: expected0]
                            NAME JSCompiler_stubMap 1 [sourcename: expected0]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename: expected0]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename: expected0]
        FUNCTION Foo 1 [sourcename: expected0]
            NAME Foo 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME Foo 1 [sourcename: expected0]
                        STRING prototype 1 [sourcename: expected0]
                    STRING b1 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0] [free_call: 1]
                    NAME JSCompiler_stubMethod 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    SCRIPT 1 [sourcename: expected1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected1]
            ASSIGN 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    GETPROP 1 [sourcename: expected1]
                        NAME Foo 1 [sourcename: expected1]
                        STRING prototype 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
                CALL 1 [sourcename: expected1] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected1]
                    NUMBER 0.0 1 [sourcename: expected1]
                    FUNCTION  1 [sourcename: expected1]
                        NAME  1 [sourcename: expected1]
                        LP 1 [sourcename: expected1]
                        BLOCK 1 [sourcename: expected1]
                            EXPR_RESULT 1 [sourcename: expected1]
                                ASSIGN 1 [sourcename: expected1]
                                    GETPROP 1 [sourcename: expected1]
                                        GETPROP 1 [sourcename: expected1]
                                            NAME Foo 1 [sourcename: expected1]
                                            STRING prototype 1 [sourcename: expected1]
                                        STRING b2 1 [sourcename: expected1]
                                    CALL 1 [sourcename: expected1] [free_call: 1]
                                        NAME JSCompiler_stubMethod 1 [sourcename: expected1]
                                        NUMBER 1.0 1 [sourcename: expected1]
        VAR 1 [sourcename: expected1]
            NAME y 1 [sourcename: expected1]
                NEW 1 [sourcename: expected1]
                    NAME Foo 1 [sourcename: expected1]
        EXPR_RESULT 1 [sourcename: expected1]
            CALL 1 [sourcename: expected1]
                GETPROP 1 [sourcename: expected1]
                    NAME y 1 [sourcename: expected1]
                    STRING b1 1 [sourcename: expected1]
    SCRIPT 1 [sourcename: expected2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    GETPROP 1 [sourcename: expected2]
                        NAME Foo 1 [sourcename: expected2]
                        STRING prototype 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
                CALL 1 [sourcename: expected2] [free_call: 1]
                    NAME JSCompiler_unstubMethod 1 [sourcename: expected2]
                    NUMBER 1.0 1 [sourcename: expected2]
                    FUNCTION  1 [sourcename: expected2]
                        NAME  1 [sourcename: expected2]
                        LP 1 [sourcename: expected2]
                        BLOCK 1 [sourcename: expected2]
                            VAR 1 [sourcename: expected2]
                                NAME x 1 [sourcename: expected2]
                                    NUMBER 1.0 1 [sourcename: expected2]
                            EXPR_RESULT 1 [sourcename: expected2]
                                ASSIGN 1 [sourcename: expected2]
                                    GETPROP 1 [sourcename: expected2]
                                        GETPROP 1 [sourcename: expected2]
                                            NAME Foo 1 [sourcename: expected2]
                                            STRING prototype 1 [sourcename: expected2]
                                        STRING b3 1 [sourcename: expected2]
                                    FUNCTION  1 [sourcename: expected2]
                                        NAME  1 [sourcename: expected2]
                                        LP 1 [sourcename: expected2]
                                        BLOCK 1 [sourcename: expected2]
                                            EXPR_RESULT 1 [sourcename: expected2]
                                                NAME x 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            ASSIGN 1 [sourcename: expected2]
                NAME y 1 [sourcename: expected2]
                NEW 1 [sourcename: expected2]
                    NAME Foo 1 [sourcename: expected2]
        EXPR_RESULT 1 [sourcename: expected2]
            CALL 1 [sourcename: expected2]
                GETPROP 1 [sourcename: expected2]
                    NAME z 1 [sourcename: expected2]
                    STRING b2 1 [sourcename: expected2]
    SCRIPT 1 [sourcename: expected3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: expected3]
            ASSIGN 1 [sourcename: expected3]
                NAME y 1 [sourcename: expected3]
                NEW 1 [sourcename: expected3]
                    NAME Foo 1 [sourcename: expected3]
        EXPR_RESULT 1 [sourcename: expected3]
            CALL 1 [sourcename: expected3]
                GETPROP 1 [sourcename: expected3]
                    NAME z 1 [sourcename: expected3]
                    STRING b3 1 [sourcename: expected3]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: i0] [synthetic: 1]
        VAR 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                ARRAYLIT 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_stubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    FUNCTION  1 [sourcename:  [synthetic] ]
                        NAME  1 [sourcename:  [synthetic] ]
                        LP 1 [sourcename:  [synthetic] ]
                        BLOCK 1 [sourcename:  [synthetic] ]
                            RETURN 1 [sourcename:  [synthetic] ]
                                CALL 1 [sourcename:  [synthetic] ]
                                    GETPROP 1 [sourcename:  [synthetic] ]
                                        GETELEM 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                                            NAME JSCompiler_stubMethod_id 1 [sourcename:  [synthetic] ]
                                        STRING apply 1 [sourcename:  [synthetic] ]
                                    THIS 1 [sourcename:  [synthetic] ]
                                    NAME arguments 1 [sourcename:  [synthetic] ]
        FUNCTION JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            NAME JSCompiler_unstubMethod 1 [sourcename:  [synthetic] ]
            LP 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
            BLOCK 1 [sourcename:  [synthetic] ]
                RETURN 1 [sourcename:  [synthetic] ]
                    ASSIGN 1 [sourcename:  [synthetic] ]
                        GETELEM 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_stubMap 1 [sourcename:  [synthetic] ]
                            NAME JSCompiler_unstubMethod_id 1 [sourcename:  [synthetic] ]
                        NAME JSCompiler_unstubMethod_body 1 [sourcename:  [synthetic] ]
        FUNCTION Foo 1 [sourcename: i0]
            NAME Foo 1 [sourcename: i0]
            LP 1 [sourcename: i0]
            BLOCK 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_stubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
    SCRIPT 1 [sourcename: i1] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b1 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 1.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b2 1 [sourcename: i0]
                                    CALL 1 [sourcename: i0]
                                        NAME JSCompiler_stubMethod 1 [sourcename: i0]
                                        NUMBER 0.0 1 [sourcename: i0]
        VAR 1 [sourcename: i1]
            NAME y 1 [sourcename: i1]
                NEW 1 [sourcename: i1]
                    NAME Foo 1 [sourcename: i1]
        EXPR_RESULT 1 [sourcename: i1]
            CALL 1 [sourcename: i1]
                GETPROP 1 [sourcename: i1]
                    NAME y 1 [sourcename: i1]
                    STRING b1 1 [sourcename: i1]
    SCRIPT 1 [sourcename: i2] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i0]
            ASSIGN 1 [sourcename: i0]
                GETPROP 1 [sourcename: i0]
                    GETPROP 1 [sourcename: i0]
                        NAME Foo 1 [sourcename: i0]
                        STRING prototype 1 [sourcename: i0]
                    STRING b2 1 [sourcename: i0]
                CALL 1 [sourcename: i0]
                    NAME JSCompiler_unstubMethod 1 [sourcename: i0]
                    NUMBER 0.0 1 [sourcename: i0]
                    FUNCTION  1 [sourcename: i0]
                        NAME  1 [sourcename: i0]
                        LP 1 [sourcename: i0]
                        BLOCK 1 [sourcename: i0]
                            VAR 1 [sourcename: i0]
                                NAME x 1 [sourcename: i0]
                                    NUMBER 1.0 1 [sourcename: i0]
                            EXPR_RESULT 1 [sourcename: i0]
                                ASSIGN 1 [sourcename: i0]
                                    GETPROP 1 [sourcename: i0]
                                        GETPROP 1 [sourcename: i0]
                                            NAME Foo 1 [sourcename: i0]
                                            STRING prototype 1 [sourcename: i0]
                                        STRING b3 1 [sourcename: i0]
                                    FUNCTION  1 [sourcename: i0]
                                        NAME  1 [sourcename: i0]
                                        LP 1 [sourcename: i0]
                                        BLOCK 1 [sourcename: i0]
                                            EXPR_RESULT 1 [sourcename: i0]
                                                NAME x 1 [sourcename: i0]
        EXPR_RESULT 1 [sourcename: i2]
            ASSIGN 1 [sourcename: i2]
                NAME y 1 [sourcename: i2]
                NEW 1 [sourcename: i2]
                    NAME Foo 1 [sourcename: i2]
        EXPR_RESULT 1 [sourcename: i2]
            CALL 1 [sourcename: i2]
                GETPROP 1 [sourcename: i2]
                    NAME z 1 [sourcename: i2]
                    STRING b2 1 [sourcename: i2]
    SCRIPT 1 [sourcename: i3] [synthetic: 1]
        EXPR_RESULT 1 [sourcename: i3]
            ASSIGN 1 [sourcename: i3]
                NAME y 1 [sourcename: i3]
                NEW 1 [sourcename: i3]
                    NAME Foo 1 [sourcename: i3]
        EXPR_RESULT 1 [sourcename: i3]
            CALL 1 [sourcename: i3]
                GETPROP 1 [sourcename: i3]
                    NAME z 1 [sourcename: i3]
                    STRING b3 1 [sourcename: i3]


Subtree1: NUMBER 0.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: i0]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.TestCase.assertNull(TestCase.java:447)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)
    at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:692)

java -cp /tmp/DynaMoth_Defects4J_Closure_71/build/classes:/tmp/DynaMoth_Defects4J_Closure_71/build/test:/tmp/DynaMoth_Defects4J_Closure_71/build/classes:/tmp/DynaMoth_Defects4J_Closure_71/build/test:/tmp/DynaMoth_Defects4J_Closure_71/lib/junit.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/jsr305.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/args4j.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/caja-r4314.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant-launcher.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/ant.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/protobuf-java.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/json.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/libtrunk_rhino_parser_jarjared.jar:/tmp/DynaMoth_Defects4J_Closure_71/lib/guava.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/home/tdurieux/defects4j4repair/repair_tools/nopol.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar: fr.inria.lille.repair.MethodTestRunner com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject7 com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject8 com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject2 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject12 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject10 com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject9 
18:36:06.856 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - ClassPrepareEvent
18:36:06.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node
18:36:06.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] com.google.javascript.rhino.Node$NodeMismatch
18:36:06.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.spoon.ClassCollector - [class] java.lang.String
18:36:07.637 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:07.641 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject7 iteration 0
18:36:07.644 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:07.645 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:07.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=702)
18:36:07.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:07.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:07.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:07.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:07.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:07.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:07.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:07.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:07.666 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:07.666 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:07.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:07.698 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:07.706 [pool-56-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=702)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.708 [pool-57-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=704)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.710 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:07.715 [pool-62-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=702)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.717 [pool-63-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=704)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.720 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:07.721 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:07.722 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:07.723 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:07.726 [pool-70-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.728 [pool-71-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.729 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:07.730 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:07.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:07.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:07.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:07.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:07.740 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:07.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:07.745 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:07.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:07.754 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:07.757 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:07.759 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:07.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:07.764 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:07.765 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:07.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:07.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:07.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:07.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:07.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:07.773 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:07.774 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:07.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:07.776 [pool-100-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.777 [pool-101-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:07.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:07.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:07.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:07.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:07.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:07.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:07.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:07.788 [pool-112-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:07.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:07.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:07.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:07.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:07.795 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:07.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:07.798 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:07.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:07.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:07.800 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:07.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:07.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:07.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:07.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:07.816 [pool-127-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=702)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.818 [pool-128-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=704)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.819 [pool-129-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=709)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.821 [pool-130-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=709)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:07.824 [pool-133-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.826 [pool-134-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:07.829 [pool-137-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.831 [pool-138-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=702)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.833 [pool-139-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=704)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.834 [pool-140-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=709)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.836 [pool-141-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=709)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:07.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:07.843 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:07.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:07.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:07.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:07.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:07.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:07.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:07.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:07.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:07.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:07.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:07.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:07.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:07.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:07.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:07.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:07.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:07.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:07.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:07.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:07.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:07.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:07.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:07.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:07.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:07.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:07.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:07.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:07.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:07.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:07.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:07.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:07.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:07.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:07.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:07.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:07.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:07.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:07.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:07.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:07.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:07.887 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:07.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:07.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:07.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:07.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:07.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:07.893 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:07.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:07.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:07.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:07.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:07.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:07.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:07.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:07.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:07.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:07.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:07.903 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:07.904 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:07.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:07.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:07.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:07.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:07.909 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:07.909 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:07.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:07.911 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:07.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:07.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:07.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:07.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:07.915 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:07.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:07.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:07.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:07.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:07.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:07.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:07.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:07.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:07.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:07.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:07.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:07.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:07.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:07.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:07.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:07.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:07.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:07.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:07.933 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:07.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:07.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:07.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:07.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:07.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:07.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:07.940 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:07.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:07.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:07.943 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:07.944 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:07.945 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:07.946 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:07.947 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:07.948 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:07.948 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:07.949 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:07.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:07.952 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:07.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:07.954 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:07.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:07.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:07.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:07.957 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:07.958 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:07.959 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:07.959 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:07.960 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:07.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:07.962 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:07.963 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:07.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:07.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:07.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:07.966 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:07.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:07.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:07.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:07.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:07.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:07.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:07.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:07.973 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:07.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:07.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:07.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:07.976 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:07.976 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:07.977 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:07.978 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:07.979 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:07.980 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:07.980 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:07.981 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:07.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:07.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:07.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:07.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:07.984 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:07.985 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:07.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:07.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:07.987 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:07.988 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:07.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:07.990 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:07.991 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:07.993 [pool-309-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.995 [pool-310-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.997 [pool-311-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:07.999 [pool-312-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.001 [pool-313-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.002 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:08.003 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:08.005 [pool-318-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.006 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:08.011 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.013 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.015 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:08.017 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:08.019 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.021 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:08.025 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:08.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:08.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:08.035 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:08.036 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:08.037 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:08.038 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:08.039 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:08.040 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:08.041 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:08.042 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:08.043 [pool-343-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.044 [pool-344-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.045 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:08.045 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:08.046 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:08.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:08.048 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:08.048 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:08.049 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:08.050 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:08.051 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:08.052 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:08.053 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:08.054 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:08.055 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:08.057 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:08.058 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:08.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:08.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:08.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:08.062 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:08.063 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:08.064 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:08.089 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:08.090 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.rhino.NodeTest#testCheckTreeEqualsStringDifferent iteration 0
18:36:08.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:08.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:08.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1175)
18:36:08.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:08.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:08.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:08.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:08.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:08.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:08.104 [pool-372-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1175)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.106 [pool-373-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1177)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.108 [pool-375-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:36:08.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:36:08.117 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:08.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:08.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:08.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:08.122 [pool-386-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.123 [pool-387-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:08.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:08.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:08.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:08.127 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:08.131 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.133 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.135 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:08.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:08.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.148 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.149 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.152 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:08.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:08.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:08.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:08.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:08.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:08.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:08.163 [pool-416-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.164 [pool-417-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:08.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:08.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:08.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:08.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:08.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:08.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:08.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:08.174 [pool-428-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:08.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:08.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:08.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:08.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:08.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:08.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:08.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:08.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:08.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:08.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:08.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:08.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:08.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:08.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:08.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:08.211 [pool-443-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1175)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.213 [pool-444-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1177)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.216 [pool-446-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.216 [pool-447-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.217 [pool-448-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) this)
18:36:08.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.clonePropsFrom((com.google.javascript.rhino.Node) node2)
18:36:08.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:08.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:08.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:08.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:08.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:08.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:08.229 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:08.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:08.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:08.231 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:08.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:08.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:08.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:08.233 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:08.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:08.235 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:08.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:08.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:08.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:08.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:08.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:08.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:08.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:08.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:08.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:08.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:08.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:08.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:08.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:08.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:08.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:08.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:08.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:08.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:08.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:08.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:08.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:08.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:08.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:08.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:08.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:08.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:08.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:08.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:08.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:08.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:08.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:08.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:08.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:08.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:08.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:08.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:08.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:08.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:08.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:08.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:08.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:08.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:08.269 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:08.270 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:08.270 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:08.271 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:08.272 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:08.272 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:08.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:08.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:08.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:08.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:08.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.278 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:08.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:08.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:08.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:08.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:08.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:08.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:08.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:08.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:08.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:08.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:08.285 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:08.285 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:08.286 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:08.287 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:08.287 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.288 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:08.288 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:08.289 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:08.290 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:08.290 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:08.291 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:08.291 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.292 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:08.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:08.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:08.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:08.295 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:08.295 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:08.296 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:08.296 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:08.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:08.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:08.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:08.299 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:08.300 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.300 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:08.301 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:08.301 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:08.302 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:08.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.304 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:08.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:08.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:08.306 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:08.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:08.308 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:08.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:08.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:08.310 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:08.311 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:08.311 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:08.312 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:08.312 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:08.313 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:08.314 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:08.314 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:08.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:08.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.316 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:08.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:08.318 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:08.318 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:08.319 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:08.320 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:08.320 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:08.321 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:08.321 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:08.322 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:08.323 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.323 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:08.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:08.325 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:08.326 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:08.326 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:08.327 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.328 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.328 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:08.329 [pool-619-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.331 [pool-620-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.332 [pool-621-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.333 [pool-622-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.334 [pool-623-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.335 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:08.338 [pool-628-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.342 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.344 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.346 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.348 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.352 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:08.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:08.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:08.356 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:08.357 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:08.357 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:08.358 [pool-645-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.359 [pool-646-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.359 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:08.361 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:08.362 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:08.362 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:08.363 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:08.364 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:08.365 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:08.365 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:08.366 [pool-657-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.367 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:08.367 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:08.369 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:08.370 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:08.371 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:08.371 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:08.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:08.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:08.374 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:08.375 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:08.375 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:08.401 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:08.403 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject8 iteration 0
18:36:08.403 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:08.403 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:08.403 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1227)
18:36:08.403 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:08.403 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:08.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:08.408 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:08.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:08.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:08.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:08.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:08.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:08.415 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:08.416 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:08.419 [pool-674-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.420 [pool-675-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.421 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:08.425 [pool-680-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.426 [pool-681-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.428 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:08.429 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:08.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:08.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:08.431 [pool-688-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.432 [pool-689-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:08.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:08.434 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:08.435 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:08.435 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:08.438 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.440 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.442 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:08.444 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:08.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.451 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.458 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.460 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.461 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:08.461 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:08.462 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:08.463 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:08.464 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:08.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:08.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:08.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:08.467 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:08.468 [pool-718-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.469 [pool-719-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:08.471 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:08.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:08.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:08.473 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:08.474 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:08.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:08.476 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:08.477 [pool-730-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.477 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:08.478 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:08.479 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:08.480 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:08.481 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:08.482 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:08.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:08.483 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:08.484 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:08.485 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:08.485 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:08.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:08.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:08.496 [pool-745-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.498 [pool-746-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.499 [pool-747-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.500 [pool-748-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:08.503 [pool-751-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.503 [pool-752-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:08.505 [pool-755-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.507 [pool-756-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1227)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.509 [pool-757-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1229)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.510 [pool-758-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.511 [pool-759-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1231)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:08.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:08.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:08.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:08.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:08.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:08.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:08.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:08.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:08.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:08.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:08.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:08.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:08.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:08.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:08.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:08.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:08.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:08.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:08.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:08.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:08.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:08.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:08.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:08.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:08.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:08.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:08.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:08.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:08.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:08.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:08.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:08.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:08.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:08.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:08.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:08.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:08.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:08.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:08.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:08.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:08.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:08.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:08.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:08.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:08.573 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:08.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:08.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:08.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:08.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:08.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:08.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:08.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:08.578 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:08.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:08.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:08.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:08.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:08.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:08.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:08.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:08.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:08.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:08.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:08.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:08.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:08.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:08.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:08.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:08.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:08.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:08.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:08.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:08.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:08.595 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:08.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:08.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:08.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:08.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:08.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:08.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:08.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:08.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:08.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:08.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:08.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:08.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:08.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:08.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:08.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.605 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:08.606 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:08.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:08.607 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:08.608 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:08.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:08.609 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:08.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:08.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:08.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:08.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:08.612 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:08.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.613 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:08.614 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:08.615 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:08.615 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:08.616 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.617 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:08.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:08.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:08.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:08.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:08.621 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:08.621 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:08.622 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:08.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:08.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:08.624 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:08.624 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:08.625 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:08.626 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:08.626 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:08.627 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:08.628 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:08.628 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:08.630 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:08.631 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:08.631 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:08.632 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:08.632 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:08.633 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:08.634 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:08.634 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:08.635 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:08.635 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.636 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.637 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:08.637 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:08.638 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:08.638 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:08.639 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:08.640 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.640 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.641 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:08.642 [pool-927-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.643 [pool-928-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.644 [pool-929-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.645 [pool-930-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.647 [pool-931-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:08.648 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:08.650 [pool-936-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.651 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:08.655 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.657 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:08.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:08.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.664 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:08.667 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:08.669 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.671 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:08.674 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:08.675 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:08.675 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:08.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:08.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:08.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:08.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:08.679 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:08.680 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:08.681 [pool-961-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.681 [pool-962-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:08.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:08.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:08.684 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:08.685 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:08.685 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:08.686 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:08.687 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:08.688 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:08.688 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:08.689 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:08.689 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:08.691 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:08.692 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:08.692 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:08.693 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:08.694 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:08.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:08.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:08.696 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:08.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:08.726 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:08.727 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testClosureVariableReads3 iteration 0
18:36:08.727 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:08.727 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:08.727 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1318)
18:36:08.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:08.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:08.731 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:08.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:08.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:08.738 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:08.740 [pool-990-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.742 [pool-991-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:08.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:36:08.746 [pool-996-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.748 [pool-997-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:08.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:08.751 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:08.752 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:08.753 [pool-1004-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.754 [pool-1005-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.755 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:08.755 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:08.756 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:08.757 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:08.757 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:08.760 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.764 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:08.765 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:08.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:08.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:08.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:08.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:08.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:08.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:08.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:08.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:08.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:08.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:08.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:08.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:08.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:08.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:08.789 [pool-1034-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.790 [pool-1035-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:08.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:08.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:08.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:08.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:08.795 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:08.796 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:08.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:08.797 [pool-1046-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.798 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:08.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:08.800 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:08.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:08.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:08.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:08.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:08.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:08.806 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:08.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:08.808 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:08.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:08.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:08.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:08.820 [pool-1061-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.821 [pool-1062-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.827 [pool-1063-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.829 [pool-1064-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1323)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:08.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:36:08.832 [pool-1067-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.833 [pool-1068-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:08.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.TARGET_PROP)
18:36:08.835 [pool-1071-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.836 [pool-1072-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [13]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.837 [pool-1073-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [17]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.839 [pool-1074-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1318)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.841 [pool-1075-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1320)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.843 [pool-1076-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1322)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.844 [pool-1077-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1323)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:08.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:08.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:08.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:08.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:08.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:08.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:08.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:08.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:08.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:08.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:08.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:08.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:08.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:08.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:08.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:08.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:08.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:08.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:08.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:08.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:08.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:08.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:08.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:08.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:08.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:08.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:08.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:08.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:08.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:08.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:08.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:08.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:08.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:08.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:08.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:08.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:08.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:08.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:08.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:08.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:08.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:08.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:08.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:08.887 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:08.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:08.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:08.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:08.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:08.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:08.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:08.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:08.893 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:08.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:08.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:08.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:08.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:08.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:08.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:08.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:08.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:08.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:08.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:08.915 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:08.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:08.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:08.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:08.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:08.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:08.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:08.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:08.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:08.923 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:08.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:08.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:08.925 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:08.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:08.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:08.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:08.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:08.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:08.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:08.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:08.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:08.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:08.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:08.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:08.933 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:08.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:08.934 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:08.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:08.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:08.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:08.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:08.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:08.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:08.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:08.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:08.940 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:08.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:08.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:08.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:08.943 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:08.943 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:08.944 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:08.945 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:08.946 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:08.946 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:08.947 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:08.947 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:08.948 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:08.949 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:08.949 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:08.950 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:08.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:08.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:08.952 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:08.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:08.954 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:08.954 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:08.955 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:08.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:08.956 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:08.957 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:08.958 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:08.958 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:08.959 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:08.960 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:08.960 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:08.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:08.961 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:08.962 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:08.963 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:08.963 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:08.964 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:08.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:08.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:08.966 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:08.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:08.967 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:08.968 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:08.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:08.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:08.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:08.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:08.971 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:08.972 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:08.973 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:08.973 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:08.974 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:08.976 [pool-1245-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.977 [pool-1246-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.978 [pool-1247-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.980 [pool-1248-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.981 [pool-1249-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.982 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:08.983 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:08.985 [pool-1254-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:08.986 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:08.991 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:08.993 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:08.995 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:08.997 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:08.999 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.002 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.004 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:09.005 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:09.008 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.010 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.012 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:09.014 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:09.015 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:09.016 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:09.017 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:09.018 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:09.019 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:09.020 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:09.020 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:09.021 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:09.022 [pool-1279-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.023 [pool-1280-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.024 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:09.025 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:09.026 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:09.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:09.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:09.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:09.029 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:09.030 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:09.031 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:09.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:09.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:09.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:09.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:09.036 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:09.037 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:09.038 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:09.039 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:09.040 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:09.041 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:09.042 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:09.042 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:09.060 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:09.061 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.CrossModuleMethodMotionTest#testTwoMethods iteration 0
18:36:09.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:09.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:09.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1386)
18:36:09.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:09.061 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:09.065 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:09.066 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:09.070 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:09.070 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:09.073 [pool-1308-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.074 [pool-1309-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.075 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:09.076 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 1)
18:36:09.079 [pool-1314-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.081 [pool-1315-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.083 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:09.084 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:09.084 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:09.085 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:09.086 [pool-1322-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.087 [pool-1323-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.088 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:09.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:09.089 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:09.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:09.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:09.093 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:09.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:09.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.106 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:09.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:09.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:09.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:09.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:09.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:09.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:09.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:09.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:09.121 [pool-1352-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.122 [pool-1353-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:09.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:09.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:09.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:09.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:09.127 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:09.128 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:09.128 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:09.129 [pool-1364-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.130 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:09.131 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:09.132 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:09.133 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:09.134 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:09.134 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:09.135 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:09.136 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:09.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:09.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:09.138 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:09.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:09.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:09.149 [pool-1379-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.150 [pool-1380-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.152 [pool-1381-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1390)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.153 [pool-1382-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1391)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:09.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 1)
18:36:09.156 [pool-1385-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.157 [pool-1386-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.157 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:09.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.TARGET_PROP)
18:36:09.159 [pool-1389-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.160 [pool-1390-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [13]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.161 [pool-1391-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [17]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.163 [pool-1392-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1386)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.165 [pool-1393-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1388)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.166 [pool-1394-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1390)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.168 [pool-1395-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1391)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:09.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:09.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:09.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:09.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:09.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:09.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:09.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:09.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:09.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:09.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:09.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:09.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:09.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:09.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:09.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:09.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:09.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:09.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:09.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:09.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:09.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:09.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:09.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:09.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:09.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:09.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:09.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:09.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:09.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:09.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:09.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:09.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:09.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:09.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:09.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:09.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:09.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:09.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:09.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:09.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:09.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:09.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:09.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:09.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:09.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:09.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:09.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:09.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:09.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:09.208 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:09.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:09.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:09.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:09.212 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:09.212 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:09.213 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:09.214 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:09.214 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:09.215 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:09.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:09.216 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:09.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:09.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:09.219 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:09.220 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:09.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:09.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:09.222 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.223 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.223 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:09.224 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:09.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:09.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:09.226 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:09.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:09.237 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:09.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:09.239 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:09.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:09.241 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:09.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:09.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:09.243 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:09.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:09.245 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:09.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:09.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:09.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:09.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:09.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:09.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:09.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:09.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:09.253 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:09.254 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:09.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:09.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:09.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:09.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:09.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:09.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:09.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:09.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:09.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:09.261 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:09.262 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:09.263 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.264 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:09.265 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:09.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:09.266 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.267 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:09.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:09.268 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:09.269 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:09.270 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:09.270 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:09.271 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:09.272 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:09.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:09.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:09.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:09.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:09.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:09.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:09.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.278 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:09.278 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:09.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:09.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:09.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:09.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:09.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:09.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:09.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:09.283 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:09.284 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.285 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.285 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:09.286 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:09.287 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:09.287 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:09.288 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:09.289 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.289 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.290 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:09.291 [pool-1563-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.292 [pool-1564-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.293 [pool-1565-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.294 [pool-1566-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.296 [pool-1567-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:09.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:09.299 [pool-1572-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.300 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:09.305 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.307 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:09.311 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:09.313 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.315 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.318 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:09.320 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:09.322 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.326 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:09.328 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:09.329 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:09.330 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:09.331 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:09.331 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:09.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:09.334 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:09.335 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:09.335 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:09.337 [pool-1597-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.338 [pool-1598-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.339 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:09.339 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:09.340 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:09.341 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:09.341 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:09.342 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:09.343 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:09.344 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:09.345 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:09.346 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:09.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:09.347 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:09.349 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:09.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:09.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:09.352 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:09.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:09.354 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:09.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:09.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:09.356 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:09.371 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:09.373 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject1 iteration 0
18:36:09.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:09.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:09.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1443)
18:36:09.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:09.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:09.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:09.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:09.382 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:09.383 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:09.385 [pool-1626-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.387 [pool-1627-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.387 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:09.391 [pool-1632-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.393 [pool-1633-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.395 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:09.395 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:09.396 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:09.397 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:09.398 [pool-1640-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.399 [pool-1641-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.400 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:09.400 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:09.401 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:09.401 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:09.402 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:09.405 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.407 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:09.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:09.414 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.419 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.421 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.423 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.425 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.427 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.427 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:09.428 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:09.429 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:09.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:09.431 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:09.432 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:09.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:09.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:09.434 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:09.435 [pool-1670-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.436 [pool-1671-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.437 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:09.438 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:09.439 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:09.439 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:09.440 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:09.441 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:09.442 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:09.443 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:09.443 [pool-1682-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.444 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:09.445 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:09.446 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:09.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:09.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:09.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:09.450 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:09.451 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:09.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:09.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:09.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:09.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:09.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:09.464 [pool-1697-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.466 [pool-1698-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.467 [pool-1699-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.468 [pool-1700-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:09.471 [pool-1703-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.471 [pool-1704-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:09.474 [pool-1707-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.476 [pool-1708-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1443)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.477 [pool-1709-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1445)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.478 [pool-1710-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.480 [pool-1711-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1447)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.484 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:09.484 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:09.485 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:09.486 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:09.486 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:09.487 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:09.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:09.488 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:09.489 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:09.490 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:09.490 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:09.491 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:09.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:09.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:09.493 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.494 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:09.495 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:09.495 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:09.496 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:09.496 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:09.497 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:09.498 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.498 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:09.499 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:09.500 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:09.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:09.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:09.502 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:09.503 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:09.503 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:09.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:09.505 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:09.505 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:09.506 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:09.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:09.508 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:09.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:09.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:09.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:09.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:09.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:09.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:09.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:09.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:09.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:09.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:09.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:09.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:09.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:09.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:09.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:09.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:09.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:09.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:09.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:09.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:09.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:09.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:09.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:09.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:09.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:09.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:09.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:09.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:09.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:09.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.546 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:09.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:09.547 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:09.548 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:09.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:09.549 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.550 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:09.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:09.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:09.553 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:09.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:09.554 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:09.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:09.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:09.556 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:09.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:09.557 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:09.558 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:09.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:09.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:09.560 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:09.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:09.562 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:09.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:09.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:09.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:09.565 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:09.565 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.566 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:09.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:09.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:09.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:09.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:09.569 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:09.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:09.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:09.571 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:09.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:09.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:09.573 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:09.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:09.575 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:09.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:09.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:09.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.578 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:09.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:09.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:09.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:09.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:09.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:09.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:09.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:09.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:09.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:09.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:09.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:09.586 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:09.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:09.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:09.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:09.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:09.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:09.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:09.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:09.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:09.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:09.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:09.595 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:09.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:09.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:09.597 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:09.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:09.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:09.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:09.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:09.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:09.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.604 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:09.605 [pool-1879-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.606 [pool-1880-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.607 [pool-1881-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.608 [pool-1882-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.610 [pool-1883-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.610 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:09.611 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:09.613 [pool-1888-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.614 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:09.618 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.620 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.621 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:09.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:09.625 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.627 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:09.630 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:09.633 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.634 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.636 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:09.638 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:09.638 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:09.639 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:09.640 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:09.640 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:09.642 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:09.642 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:09.643 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:09.643 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:09.644 [pool-1913-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.645 [pool-1914-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:09.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:09.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:09.648 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:09.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:09.649 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:09.650 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:09.651 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:09.652 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:09.652 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:09.653 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:09.654 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:09.655 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:09.656 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:09.657 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:09.658 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:09.659 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:09.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:09.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:09.661 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:09.662 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:09.671 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:09.672 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject2 iteration 0
18:36:09.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:09.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:09.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1494)
18:36:09.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:09.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:09.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:09.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:09.678 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:09.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:09.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:09.685 [pool-1942-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.687 [pool-1943-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.687 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:09.691 [pool-1948-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.692 [pool-1949-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.694 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:09.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:09.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:09.696 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:09.697 [pool-1956-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.698 [pool-1957-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:09.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:09.700 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:09.700 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:09.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:09.704 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.705 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.707 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:09.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:09.712 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.716 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:09.718 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.719 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.722 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.723 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.724 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:09.724 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:09.725 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:09.726 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:09.727 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:09.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:09.728 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:09.729 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:09.729 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:09.730 [pool-1986-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.731 [pool-1987-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.732 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:09.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:09.733 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:09.734 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:09.735 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:09.735 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:09.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:09.737 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:09.738 [pool-1998-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.739 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:09.739 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:09.741 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:09.742 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:09.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:09.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:09.744 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:09.745 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:09.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:09.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:09.747 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:09.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:09.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:09.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:09.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:09.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:09.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:09.757 [pool-2013-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.759 [pool-2014-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.760 [pool-2015-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.761 [pool-2016-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:09.763 [pool-2019-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.764 [pool-2020-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.765 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:09.766 [pool-2023-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.768 [pool-2024-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1494)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.770 [pool-2025-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1496)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.771 [pool-2026-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.772 [pool-2027-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1498)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.776 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:09.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:09.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:09.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:09.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:09.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:09.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:09.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:09.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:09.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:09.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:09.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:09.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:09.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:09.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:09.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:09.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:09.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:09.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:09.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:09.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:09.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:09.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:09.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:09.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:09.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:09.795 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:09.796 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:09.796 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:09.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:09.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:09.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:09.808 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.808 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:09.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:09.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:09.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:09.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.812 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.812 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:09.813 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:09.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:09.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.815 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:09.816 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:09.816 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:09.817 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:09.818 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:09.818 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:09.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:09.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:09.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:09.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:09.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:09.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:09.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:09.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:09.824 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:09.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:09.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:09.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:09.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:09.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:09.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:09.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:09.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:09.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:09.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:09.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:09.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:09.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:09.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:09.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.838 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:09.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:09.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:09.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:09.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:09.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:09.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:09.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:09.843 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:09.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:09.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:09.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:09.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:09.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:09.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:09.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:09.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:09.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:09.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:09.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:09.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:09.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:09.852 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:09.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:09.853 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:09.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:09.854 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:09.855 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:09.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:09.856 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:09.857 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:09.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:09.858 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:09.859 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:09.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:09.860 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:09.861 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:09.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:09.862 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:09.863 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:09.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:09.864 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:09.865 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:09.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:09.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:09.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:09.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:09.868 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:09.869 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:09.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:09.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:09.871 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:09.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:09.872 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:09.873 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:09.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:09.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:09.875 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:09.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:09.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:09.877 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:09.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:09.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:09.879 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:09.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:09.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:09.881 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:09.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:09.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:09.883 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:09.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:09.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:09.885 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:09.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:09.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:09.887 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:09.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:09.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:09.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:09.889 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:09.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:09.891 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:09.892 [pool-2195-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.893 [pool-2196-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.894 [pool-2197-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.895 [pool-2198-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.896 [pool-2199-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:09.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:09.900 [pool-2204-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:09.904 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:09.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:09.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:09.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:09.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:09.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:09.916 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:09.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:09.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:09.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:09.924 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:09.926 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:09.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:09.927 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:09.928 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:09.929 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:09.930 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:09.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:09.931 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:09.932 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:09.933 [pool-2229-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.934 [pool-2230-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:09.935 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:09.936 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:09.937 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:09.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:09.938 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:09.939 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:09.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:09.941 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:09.942 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:09.943 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:09.944 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:09.946 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:09.947 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:09.948 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:09.949 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:09.950 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:09.951 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:09.952 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:09.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:09.953 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:09.963 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:09.965 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject12 iteration 0
18:36:09.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:09.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:09.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1545)
18:36:09.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:09.965 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:09.969 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:09.970 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:09.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:09.975 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:09.978 [pool-2258-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.979 [pool-2259-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.980 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:09.984 [pool-2264-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.986 [pool-2265-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.988 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:09.989 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:09.990 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:09.990 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:09.991 [pool-2272-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.993 [pool-2273-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:09.993 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:09.994 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:09.994 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:09.995 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:09.996 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:09.999 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.001 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.003 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.005 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.009 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.012 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.015 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.017 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.019 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.021 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.022 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.022 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.023 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:10.024 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:10.025 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.026 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.027 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.028 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.029 [pool-2302-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.030 [pool-2303-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.031 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.032 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.033 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.034 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.043 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.044 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.045 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.046 [pool-2314-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.047 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.048 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.050 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.051 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.052 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.053 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.054 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.055 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.056 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.057 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.058 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.059 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.060 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.068 [pool-2329-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.070 [pool-2330-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.071 [pool-2331-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.073 [pool-2332-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.074 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:10.076 [pool-2335-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.077 [pool-2336-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.077 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:10.079 [pool-2339-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.081 [pool-2340-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1545)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.082 [pool-2341-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1547)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.084 [pool-2342-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.086 [pool-2343-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1549)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.090 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.091 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.092 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.093 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.093 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.094 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.095 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.096 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.097 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.098 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.099 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.100 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.101 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.102 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.103 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.104 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.104 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.105 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.106 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.106 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.107 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.108 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.109 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.110 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.111 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.112 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.113 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.114 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.115 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.116 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.117 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.118 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.119 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.120 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.121 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.122 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.122 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.123 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.124 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.125 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.126 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.127 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.128 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.129 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.129 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.130 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.131 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.132 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.132 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.133 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.134 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.134 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.135 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.136 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.137 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.138 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.138 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.139 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.140 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.141 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.142 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.143 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.144 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.145 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.146 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.147 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.147 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.148 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.149 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.150 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.150 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.151 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.152 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.153 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.153 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.154 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.155 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.156 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.157 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.158 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.159 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.160 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.161 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.162 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.163 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.164 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.165 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.166 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.167 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.168 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.169 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.170 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.171 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.172 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.173 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.174 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.175 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.176 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.177 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.178 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.179 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.180 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.181 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.182 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.183 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.184 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.185 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.186 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.187 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.188 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.189 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.190 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.191 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.192 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.193 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.194 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.195 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.196 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.197 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.198 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.199 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.200 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.201 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.202 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.203 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.204 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.205 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.206 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.207 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.208 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.209 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.210 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.211 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.212 [pool-2511-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.213 [pool-2512-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.214 [pool-2513-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.215 [pool-2514-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.216 [pool-2515-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.217 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.218 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:10.220 [pool-2520-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.221 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:10.225 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.227 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.228 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:10.230 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:10.232 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.234 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.236 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:10.238 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:10.240 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.242 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.244 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:10.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:10.246 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.247 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.248 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:10.249 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:10.250 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.251 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.252 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.253 [pool-2545-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.254 [pool-2546-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.255 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.256 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:10.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.257 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.258 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.259 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.260 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.271 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.272 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:10.273 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.274 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.275 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.276 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.277 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.278 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.279 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.280 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.281 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.282 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:10.292 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:10.293 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject10 iteration 0
18:36:10.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:10.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:10.293 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1596)
18:36:10.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:10.294 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:10.297 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:10.298 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:10.303 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:10.304 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:10.306 [pool-2574-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.308 [pool-2575-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.309 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:10.313 [pool-2580-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.314 [pool-2581-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.316 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:10.317 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:10.318 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:10.319 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:10.320 [pool-2588-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.321 [pool-2589-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.321 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:10.322 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:10.323 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:10.323 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:10.324 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:10.327 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.329 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.331 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.333 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.336 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.340 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.342 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.344 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.346 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.348 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.349 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.349 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.350 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:10.351 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:10.352 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.353 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.354 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.354 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.355 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.356 [pool-2618-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.357 [pool-2619-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.358 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.359 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.360 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.360 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.361 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.362 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.363 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.364 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.365 [pool-2630-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.365 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.366 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.367 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.369 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.370 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.371 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.372 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.373 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.374 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.375 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.376 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.377 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.385 [pool-2645-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.387 [pool-2646-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.388 [pool-2647-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.390 [pool-2648-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.391 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:10.393 [pool-2651-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.394 [pool-2652-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.394 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:10.396 [pool-2655-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.398 [pool-2656-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1596)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.400 [pool-2657-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1598)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.401 [pool-2658-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.403 [pool-2659-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1600)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.409 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.410 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.411 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.412 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.413 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.414 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.415 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.415 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.416 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.417 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.418 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.419 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.420 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.421 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.421 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.422 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.423 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.424 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.424 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.425 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.426 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.427 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.428 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.429 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.430 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.431 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.432 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.433 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.434 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.435 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.435 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.436 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.437 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.438 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.439 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.439 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.440 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.441 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.442 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.443 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.444 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.445 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.445 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.446 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.447 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.448 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.449 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.450 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.450 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.451 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.452 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.453 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.454 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.455 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.456 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.457 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.458 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.459 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.460 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.461 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.461 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.462 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.463 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.464 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.465 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.466 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.467 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.468 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.469 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.470 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.471 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.471 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.472 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.473 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.474 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.475 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.476 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.476 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.477 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.478 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.479 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.491 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.491 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.492 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.493 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.494 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.494 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.495 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.496 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.497 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.498 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.498 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.499 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.500 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.501 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.502 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.503 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.504 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.505 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.506 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.507 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.508 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.509 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.510 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.511 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.512 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.513 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.514 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.515 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.516 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.517 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.518 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.519 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.520 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.521 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.522 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.523 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.524 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.525 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.526 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.527 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.528 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.529 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.530 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.531 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.532 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.533 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.534 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.535 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.536 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.537 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.538 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.539 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.540 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.541 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.542 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.543 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.544 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.545 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.546 [pool-2827-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.547 [pool-2828-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.548 [pool-2829-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.549 [pool-2830-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.550 [pool-2831-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.551 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.552 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:10.554 [pool-2836-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.555 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:10.559 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.561 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.563 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:10.564 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:10.567 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.568 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.570 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:10.572 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:10.574 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.576 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.577 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:10.579 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:10.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.580 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.581 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:10.582 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:10.583 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.584 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.585 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.586 [pool-2861-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.587 [pool-2862-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.587 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.588 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:10.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.589 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.590 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.591 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.592 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.593 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:10.594 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.595 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.596 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.598 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.599 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.600 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.601 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.602 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.603 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:10.617 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - BreakpointEvent
18:36:10.619 [pool-23-thread-1] INFO  f.i.l.r.s.DynamothCodeGenesisImpl - [test] com.google.javascript.jscomp.InlineObjectLiteralsTest#testObject9 iteration 0
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.SpoonElementsCollector - [data] "Node tree inequality:"="Node tree inequality:"
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - Collect Level 1
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this=instance of com.google.javascript.rhino.Node(id=1647)
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2
18:36:10.619 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] diff
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ISNUMBER_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FIXUPS_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CATCH_SCOPE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGET_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FUNCTION_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASES_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TYPE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCALCOUNT_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.JSDOC_INFO_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MEMBER_TYPE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OPT_ARG_NAME
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BRACELESS_TYPE
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_VAR_ARGS_PARAM
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECT_EVAL
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LEFT
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_WITH
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ATTRIBUTE_FLAG
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_MASK
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_NO_THROWS
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propListHead
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_ALL
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.jsType
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LASTUSE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CODEOFFSET_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.OBJECT_IDS_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_ID_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ENUM_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.REGEXP_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SOURCENAME_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FINALLY_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEBUGSOURCE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.INCRDECR_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.QUOTED_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.ORIGINALNAME_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_OPTIONAL_PARAM
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTIVES
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BOTH
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_EVAL
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PROPERTY_FLAG
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.MAX_COLUMN_NUMBER
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.parent
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.type
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIALCALL_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.USES_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_BLOCK_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CONTINUE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LOCAL_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.CASEARRAY_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LABEL_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARIABLE_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SKIP_INDEXES_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.PARENTHESIZED_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.EMPTY_BLOCK
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_CONSTANT_NAME
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_DISPATCHER
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.LAST_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NON_SPECIALCALL
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.POST_FLAG
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.COLUMN_BITS
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_THIS_UNMODIFIED
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECTS_FLAGS_MASK
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.sourcePosition
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.next
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DIRECTCALL_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VARS_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.BREAK_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TEMP_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DEFAULT_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SPECIAL_PROP_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.TARGETBLOCK_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.VAR_ARGS_NAME
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NAME_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SYNTHETIC_BLOCK_PROP
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.SIDE_EFFECT_FLAGS
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.IS_NAMESPACE
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FREE_CALL
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.RIGHT
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DECR_FLAG
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.DESCENDANTS_FLAG
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.FLAG_LOCAL_RESULTS
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.first
18:36:10.623 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.NO_SIDE_EFFECTS
18:36:10.624 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.last
18:36:10.628 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 0)
18:36:10.629 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.propToString((int) 1)
18:36:10.632 [pool-2890-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.633 [pool-2891-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.634 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildAtIndex((int) 0)
18:36:10.637 [pool-2896-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.639 [pool-2897-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.641 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 0)
18:36:10.641 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getBooleanProp((int) 1)
18:36:10.642 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 0)
18:36:10.643 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getIntProp((int) 1)
18:36:10.644 [pool-2904-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.645 [pool-2905-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 0)
18:36:10.646 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractLineno((int) 1)
18:36:10.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 0)
18:36:10.647 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.extractCharno((int) 1)
18:36:10.648 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestor((int) 0)
18:36:10.651 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.653 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.655 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) this)
18:36:10.656 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getNodeClass((com.google.javascript.rhino.Node) node2)
18:36:10.660 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.663 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.checkTreeTypeAwareEqualsImpl((com.google.javascript.rhino.Node) node2)
18:36:10.665 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.667 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.669 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.671 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.671 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getType()
18:36:10.672 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasChildren()
18:36:10.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getFirstChild()
18:36:10.673 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastChild()
18:36:10.675 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLastSibling()
18:36:10.675 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSortedPropTypes()
18:36:10.676 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getLineno()
18:36:10.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getCharno()
18:36:10.677 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSourcePosition()
18:36:10.678 [pool-2934-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.679 [pool-2935-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.680 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.children()
18:36:10.681 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getAncestors()
18:36:10.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasOneChild()
18:36:10.682 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasMoreThanOneChild()
18:36:10.683 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getChildCount()
18:36:10.684 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.hasSideEffects()
18:36:10.685 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQualifiedName()
18:36:10.695 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isUnscopedQualifiedName()
18:36:10.696 [pool-2946-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.detachFromParent() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneNode()
18:36:10.697 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.cloneTree()
18:36:10.699 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getJsDocBuilderForNode()
18:36:10.701 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isVarArgs()
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOptionalArg()
18:36:10.702 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isSyntheticBlock()
18:36:10.704 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.wasEmptyNode()
18:36:10.705 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.getSideEffectFlags()
18:36:10.705 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isOnlyModifiesThisCall()
18:36:10.706 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isNoSideEffectsCall()
18:36:10.707 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] this.isQuotedString()
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ISNUMBER_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FIXUPS_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CATCH_SCOPE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGET_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FUNCTION_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASES_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TYPE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCALCOUNT_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.JSDOC_INFO_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MEMBER_TYPE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OPT_ARG_NAME
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BRACELESS_TYPE
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_VAR_ARGS_PARAM
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECT_EVAL
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LEFT
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_WITH
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ATTRIBUTE_FLAG
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_MASK
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_NO_THROWS
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_ALL
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LASTUSE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CODEOFFSET_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.OBJECT_IDS_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_ID_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ENUM_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.REGEXP_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SOURCENAME_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FINALLY_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEBUGSOURCE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.INCRDECR_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.QUOTED_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.ORIGINALNAME_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_OPTIONAL_PARAM
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTIVES
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BOTH
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_EVAL
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PROPERTY_FLAG
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.MAX_COLUMN_NUMBER
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_ARGUMENTS_UNMODIFIED
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIALCALL_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.USES_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_BLOCK_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CONTINUE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LOCAL_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.CASEARRAY_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LABEL_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARIABLE_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SKIP_INDEXES_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.PARENTHESIZED_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.EMPTY_BLOCK
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_CONSTANT_NAME
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_DISPATCHER
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.LAST_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NON_SPECIALCALL
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.POST_FLAG
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.COLUMN_BITS
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_THIS_UNMODIFIED
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECTS_FLAGS_MASK
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DIRECTCALL_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VARS_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.BREAK_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TEMP_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DEFAULT_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SPECIAL_PROP_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.TARGETBLOCK_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.VAR_ARGS_NAME
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NAME_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SYNTHETIC_BLOCK_PROP
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.SIDE_EFFECT_FLAGS
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.IS_NAMESPACE
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FREE_CALL
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.RIGHT
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DECR_FLAG
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.DESCENDANTS_FLAG
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_GLOBAL_STATE_UNMODIFIED
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.FLAG_LOCAL_RESULTS
18:36:10.709 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.NO_SIDE_EFFECTS
18:36:10.717 [pool-2961-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.719 [pool-2962-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.720 [pool-2963-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.722 [pool-2964-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildBefore(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.723 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) 0)
18:36:10.724 [pool-2967-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.725 [pool-2968-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.726 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildAtIndex((int) this.CATCH_SCOPE_PROP)
18:36:10.728 [pool-2971-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getChildAtIndex(int) [5]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.730 [pool-2972-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1647)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.731 [pool-2973-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1649)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.733 [pool-2974-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.735 [pool-2975-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.clonePropsFrom(com.google.javascript.rhino.Node) [instance of com.google.javascript.rhino.Node(id=1651)]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.739 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 0)
18:36:10.739 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) 1)
18:36:10.740 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ISNUMBER_PROP)
18:36:10.741 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FIXUPS_PROP)
18:36:10.741 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CATCH_SCOPE_PROP)
18:36:10.742 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGET_PROP)
18:36:10.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FUNCTION_PROP)
18:36:10.743 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASES_PROP)
18:36:10.744 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TYPE_PROP)
18:36:10.745 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCALCOUNT_PROP)
18:36:10.745 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.JSDOC_INFO_PROP)
18:36:10.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MEMBER_TYPE_PROP)
18:36:10.746 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OPT_ARG_NAME)
18:36:10.747 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BRACELESS_TYPE)
18:36:10.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.748 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECT_EVAL)
18:36:10.749 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LEFT)
18:36:10.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_WITH)
18:36:10.750 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ATTRIBUTE_FLAG)
18:36:10.751 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_MASK)
18:36:10.752 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_NO_THROWS)
18:36:10.752 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.753 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LASTUSE_PROP)
18:36:10.753 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CODEOFFSET_PROP)
18:36:10.754 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.OBJECT_IDS_PROP)
18:36:10.755 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_ID_PROP)
18:36:10.755 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ENUM_PROP)
18:36:10.756 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.REGEXP_PROP)
18:36:10.757 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SOURCENAME_PROP)
18:36:10.757 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FINALLY_PROP)
18:36:10.758 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEBUGSOURCE_PROP)
18:36:10.759 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.INCRDECR_PROP)
18:36:10.759 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.QUOTED_PROP)
18:36:10.760 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.ORIGINALNAME_PROP)
18:36:10.761 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTIVES)
18:36:10.762 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BOTH)
18:36:10.763 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_EVAL)
18:36:10.764 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PROPERTY_FLAG)
18:36:10.764 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.765 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.type)
18:36:10.766 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIALCALL_PROP)
18:36:10.767 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.USES_PROP)
18:36:10.768 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CONTINUE_PROP)
18:36:10.769 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LOCAL_PROP)
18:36:10.770 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.CASEARRAY_PROP)
18:36:10.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LABEL_PROP)
18:36:10.771 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARIABLE_PROP)
18:36:10.772 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SKIP_INDEXES_PROP)
18:36:10.773 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.PARENTHESIZED_PROP)
18:36:10.773 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.EMPTY_BLOCK)
18:36:10.774 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_CONSTANT_NAME)
18:36:10.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_DISPATCHER)
18:36:10.775 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.LAST_PROP)
18:36:10.776 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NON_SPECIALCALL)
18:36:10.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.POST_FLAG)
18:36:10.777 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.COLUMN_BITS)
18:36:10.778 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.779 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.sourcePosition)
18:36:10.780 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DIRECTCALL_PROP)
18:36:10.781 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VARS_PROP)
18:36:10.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.BREAK_PROP)
18:36:10.782 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TEMP_PROP)
18:36:10.783 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DEFAULT_PROP)
18:36:10.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SPECIAL_PROP_PROP)
18:36:10.784 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.TARGETBLOCK_PROP)
18:36:10.785 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.VAR_ARGS_NAME)
18:36:10.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NAME_PROP)
18:36:10.786 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.787 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.788 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.IS_NAMESPACE)
18:36:10.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FREE_CALL)
18:36:10.789 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.RIGHT)
18:36:10.790 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DECR_FLAG)
18:36:10.791 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.DESCENDANTS_FLAG)
18:36:10.792 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.793 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getBooleanProp((int) this.NO_SIDE_EFFECTS)
18:36:10.794 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 0)
18:36:10.795 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) 1)
18:36:10.796 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ISNUMBER_PROP)
18:36:10.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FIXUPS_PROP)
18:36:10.797 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CATCH_SCOPE_PROP)
18:36:10.798 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGET_PROP)
18:36:10.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FUNCTION_PROP)
18:36:10.799 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASES_PROP)
18:36:10.800 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TYPE_PROP)
18:36:10.800 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCALCOUNT_PROP)
18:36:10.801 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.JSDOC_INFO_PROP)
18:36:10.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MEMBER_TYPE_PROP)
18:36:10.802 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OPT_ARG_NAME)
18:36:10.803 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BRACELESS_TYPE)
18:36:10.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_VAR_ARGS_PARAM)
18:36:10.804 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECT_EVAL)
18:36:10.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LEFT)
18:36:10.805 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_WITH)
18:36:10.806 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ATTRIBUTE_FLAG)
18:36:10.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_MASK)
18:36:10.807 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_NO_THROWS)
18:36:10.808 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_ALL)
18:36:10.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LASTUSE_PROP)
18:36:10.809 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CODEOFFSET_PROP)
18:36:10.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.OBJECT_IDS_PROP)
18:36:10.810 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_ID_PROP)
18:36:10.811 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ENUM_PROP)
18:36:10.812 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.REGEXP_PROP)
18:36:10.812 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SOURCENAME_PROP)
18:36:10.813 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FINALLY_PROP)
18:36:10.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEBUGSOURCE_PROP)
18:36:10.814 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.INCRDECR_PROP)
18:36:10.815 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.QUOTED_PROP)
18:36:10.815 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.ORIGINALNAME_PROP)
18:36:10.816 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_OPTIONAL_PARAM)
18:36:10.817 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTIVES)
18:36:10.817 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BOTH)
18:36:10.818 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_EVAL)
18:36:10.818 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PROPERTY_FLAG)
18:36:10.819 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.MAX_COLUMN_NUMBER)
18:36:10.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_ARGUMENTS_UNMODIFIED)
18:36:10.820 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.type)
18:36:10.821 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIALCALL_PROP)
18:36:10.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.USES_PROP)
18:36:10.822 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_BLOCK_PROP)
18:36:10.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CONTINUE_PROP)
18:36:10.823 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LOCAL_PROP)
18:36:10.824 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.CASEARRAY_PROP)
18:36:10.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LABEL_PROP)
18:36:10.825 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARIABLE_PROP)
18:36:10.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SKIP_INDEXES_PROP)
18:36:10.826 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.PARENTHESIZED_PROP)
18:36:10.827 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.EMPTY_BLOCK)
18:36:10.828 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_CONSTANT_NAME)
18:36:10.829 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_DISPATCHER)
18:36:10.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.LAST_PROP)
18:36:10.830 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NON_SPECIALCALL)
18:36:10.831 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.POST_FLAG)
18:36:10.832 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.COLUMN_BITS)
18:36:10.833 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_THIS_UNMODIFIED)
18:36:10.834 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECTS_FLAGS_MASK)
18:36:10.835 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.sourcePosition)
18:36:10.836 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DIRECTCALL_PROP)
18:36:10.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VARS_PROP)
18:36:10.837 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.BREAK_PROP)
18:36:10.838 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TEMP_PROP)
18:36:10.839 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DEFAULT_PROP)
18:36:10.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SPECIAL_PROP_PROP)
18:36:10.840 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.TARGETBLOCK_PROP)
18:36:10.841 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.VAR_ARGS_NAME)
18:36:10.842 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NAME_PROP)
18:36:10.843 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SYNTHETIC_BLOCK_PROP)
18:36:10.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.SIDE_EFFECT_FLAGS)
18:36:10.844 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.IS_NAMESPACE)
18:36:10.845 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FREE_CALL)
18:36:10.846 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.RIGHT)
18:36:10.847 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DECR_FLAG)
18:36:10.848 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.DESCENDANTS_FLAG)
18:36:10.849 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_GLOBAL_STATE_UNMODIFIED)
18:36:10.850 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.FLAG_LOCAL_RESULTS)
18:36:10.851 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getIntProp((int) this.NO_SIDE_EFFECTS)
18:36:10.860 [pool-3143-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [0]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.862 [pool-3144-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.863 [pool-3145-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [25]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.864 [pool-3146-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [9]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.865 [pool-3147-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getExistingIntProp(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.866 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 0)
18:36:10.867 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) 1)
18:36:10.869 [pool-3152-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getAncestor(int) [-1]
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.870 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestor((int) this.TARGET_PROP)
18:36:10.874 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this)
18:36:10.876 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) node2)
18:36:10.878 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.first)
18:36:10.880 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChild((com.google.javascript.rhino.Node) this.last)
18:36:10.882 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this)
18:36:10.884 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) node2)
18:36:10.886 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.first)
18:36:10.888 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentTo((com.google.javascript.rhino.Node) this.last)
18:36:10.890 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this)
18:36:10.892 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) node2)
18:36:10.894 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.first)
18:36:10.895 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isEquivalentToTyped((com.google.javascript.rhino.Node) this.last)
18:36:10.896 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getType()
18:36:10.897 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasChildren()
18:36:10.898 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getFirstChild()
18:36:10.899 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastChild()
18:36:10.900 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLastSibling()
18:36:10.901 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getLineno()
18:36:10.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getCharno()
18:36:10.902 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSourcePosition()
18:36:10.903 [pool-3177-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getDouble() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.904 [pool-3178-thread-1] ERROR f.i.l.r.s.c.DynamothDataCollector - Unable to invoke the method com.google.javascript.rhino.Node.getString() []
com.sun.jdi.InvocationException: Exception occurred in target VM
	at com.sun.tools.jdi.ObjectReferenceImpl.invokeMethod(ObjectReferenceImpl.java:434) ~[tools.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:436) [nopol.jar:na]
	at fr.inria.lille.repair.synthesis.collect.DynamothDataCollector$2.call(DynamothDataCollector.java:427) [nopol.jar:na]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
18:36:10.905 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.children()
18:36:10.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getParent()
18:36:10.906 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getAncestors()
18:36:10.907 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasOneChild()
18:36:10.908 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasMoreThanOneChild()
18:36:10.909 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getChildCount()
18:36:10.910 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.hasSideEffects()
18:36:10.911 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQualifiedName()
18:36:10.912 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isUnscopedQualifiedName()
18:36:10.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.detachFromParent()
18:36:10.913 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneNode()
18:36:10.914 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.cloneTree()
18:36:10.915 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getJsDocBuilderForNode()
18:36:10.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isVarArgs()
18:36:10.917 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOptionalArg()
18:36:10.918 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isSyntheticBlock()
18:36:10.919 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.wasEmptyNode()
18:36:10.920 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.getSideEffectFlags()
18:36:10.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isOnlyModifiesThisCall()
18:36:10.921 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isNoSideEffectsCall()
18:36:10.922 [pool-23-thread-1] DEBUG f.i.l.r.s.c.DynamothDataCollector - [data] node2.isQuotedString()
18:36:10.928 [pool-23-thread-1] DEBUG f.i.l.r.s.DynamothCodeGenesisImpl - Exit
18:36:11.005 [pool-23-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] start on 430 elements
18:36:11.413 [pool-23-thread-1] DEBUG f.i.l.r.s.collect.DataCombiner - [combine] end 15728 evaluated elements


========= Info ==========
Nb constants             371
Nb method invocations    52
Nb field access          4
Nb variables             3
Total                    430
Nb evaluated expressions 10946
Init Execution time      1077 ms
Collect Execution time   3365 ms
Combine Execution time   485.0 ms
Nb Combination par sec   22569 combinations/sec
Total Execution time     4927 ms
Nb line execution        10
Nb results               1

Results:
1. this.getChildCount() == 0


========================
         Stat
========================
Operators: 
PLUS 8
NE 1
Methods: 
toStringTree() 4
checkTreeEqualsImpl(com.google.javascript.rhino.Node) 1
Variable: 
diff 3
nodeA 2
node2 2
nodeB 2

 & 371 & 52 & 4 & 3 & 430 & 10946 & 4928 ms & 10 &
18:36:11.415 [pool-23-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: com.google.javascript.rhino.Node:1382: PRECONDITION this.getChildCount() == 0
18:36:12.036 [pool-23-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "this.getChildCount() == 0" is working
18:36:12.288 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 384
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4344
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 70330ms
18:36:12.505 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
18:36:12.506 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
18:36:12.506 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - this.getChildCount() == 0
18:36:14.820 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 10
18:36:14.821 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - com.google.javascript.rhino.Node:1382: PRECONDITION
18:36:14.861 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1381,7 +1381,9 @@
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        if (this.getChildCount() == 0) {
+          return "Node tree inequality:" +
+          "\nTree1:\n" + toStringTree() +
+          "\n\nTree2:\n" + node2.toStringTree() +
+          "\n\nSubtree1: " + diff.nodeA.toStringTree() +
+          "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        }
       }

PATCH
414.83user 9.20system 1:16.83elapsed 551%CPU (0avgtext+0avgdata 3543900maxresident)k
56936inputs+13304outputs (7major+1712959minor)pagefaults 0swaps


Node: grisou-39.nancy.grid5000.fr



Date: Sat Dec  1 18:36:17 EST 2018

