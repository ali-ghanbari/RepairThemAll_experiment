{
  "repair_end": "2018-12-01 16:29:58.108072", 
  "repair_begin": "2018-12-01 16:02:39.248730", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1593/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:18.919090209 -0500\n@@ -1268,8 +1268,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1593/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:18.919090209 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1502/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:27:30.645901016 -0500\n@@ -1268,8 +1268,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1502/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:30.645901016 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1118/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:48.814225150 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n@@ -816,7 +812,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1447/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:27:00.186559194 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n@@ -1268,8 +1257,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1447/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:00.190559110 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1000/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:37.459287073 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1199/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:40.821328212 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1387/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:27.435248617 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -808,17 +808,7 @@\n         valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1331/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:55.803894113 -0500\n@@ -385,7 +385,7 @@\n         && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {\n       start++;\n     }\n-    return s.substring(start, end);\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1331/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:55.807894032 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 388, 
          "faulty": "return s.substring(start,end);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1090/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:32.518486405 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1580/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:13.110863520 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1580/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:13.110863520 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1274/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:22.232554341 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1353/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:07.019667686 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1747/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:43.785636681 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1747/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:43.785636681 -0500\n@@ -248,9 +248,9 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n-        return;\n+        ;\n       case Token.NAME:\n         if (!NodeUtil.isUndefined(n)) {\n           return;\n@@ -842,7 +842,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 253, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1371/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:18.071441904 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1479/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:18.302169590 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1681/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:08.232732095 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1011/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:22:44.183196677 -0500\n@@ -317,7 +317,7 @@\n         break;\n \n       case Token.STRING:\n-        return getStringNumberValue(n.getString());\n+        break;\n \n       case Token.ARRAYLIT:\n       case Token.OBJECTLIT:\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1011/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:44.183196677 -0500\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 320, 
          "faulty": "return getStringNumberValue(n.getString());", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1437/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:55.970649052 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1075/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:22.822636900 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_259/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:13:43.570219307 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1559/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:02.382424704 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1103/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:40.698356538 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1585/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:15.186945404 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1673/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:03.756602599 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1537/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:50.137890840 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1517/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:38.553727701 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,17 +797,11 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1367/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:16.643471219 -0500\n@@ -359,16 +359,8 @@\n       return null;\n     }\n \n-    // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n-    // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n-    if (s.equals(\"infinity\")\n-        || s.equals(\"-infinity\")\n-        || s.equals(\"+infinity\")) {\n-      return null;\n-    }\n-\n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1367/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:16.647471136 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 364, 
          "faulty": "if (s.equals(\"infinity\") || s.equals(\"-infinity\") || s.equals(\"+infinity\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_891/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:23.456121233 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_853/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:20:59.844316276 -0500\n@@ -1430,11 +1430,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"ADD\";\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_853/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:59.848316245 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1433, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_386/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:13.735381325 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_386/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:13.739381191 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1749/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:44.485652389 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,8 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1110/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:45.098285618 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1380/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:23.867322476 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n@@ -359,14 +348,6 @@\n       return null;\n     }\n \n-    // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n-    // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n-    if (s.equals(\"infinity\")\n-        || s.equals(\"-infinity\")\n-        || s.equals(\"+infinity\")) {\n-      return null;\n-    }\n-\n     try {\n       return Double.parseDouble(s);\n     } catch (NumberFormatException e) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1380/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:23.867322476 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 364, 
          "faulty": "if (s.equals(\"infinity\") || s.equals(\"-infinity\") || s.equals(\"+infinity\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_289/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:14:04.537653477 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_289/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:04.537653477 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1734/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:29:37.413490045 -0500\n@@ -1459,7 +1459,10 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        if (!isEquivalentTo(node2, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1734/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:37.413490045 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1613/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:31.003538272 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1211/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:24:46.701221311 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1211/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:46.705221239 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1568/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:07.370632015 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1568/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:07.374632180 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1469/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:12.570293463 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1285/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:28.628430685 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1597/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:28:21.215177756 -0500\n@@ -1430,11 +1430,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1597/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:21.215177756 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,8 +805,7 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n+        return null;\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1433, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 809, 
          "faulty": "replacement=performArithmeticOp(opType,valueToCombine,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1669/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:01.576538190 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_369/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:02.539758640 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n@@ -351,14 +346,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_369/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:02.539758640 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1399/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:32.667139855 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1599/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:21.943205289 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1599/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:21.943205289 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,14 +805,11 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1589/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:16.663003030 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,17 +797,11 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1307/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:25:40.336201684 -0500\n@@ -1459,7 +1459,10 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        if (!isEquivalentTo(node2, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1307/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:40.336201684 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1295/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:34.292320322 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1236/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:01.088955463 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_972/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:19.635515787 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1426/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:50.182771893 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1426/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:50.182771893 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_880/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:17.296175789 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_228/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:13:18.958223588 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_228/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:13:18.958223588 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_502/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:16:40.044557995 -0500\n@@ -1459,7 +1459,9 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_502/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:16:40.044557995 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_376/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:07.123603808 -0500\n@@ -317,7 +317,7 @@\n         break;\n \n       case Token.STRING:\n-        return getStringNumberValue(n.getString());\n+        break;\n \n       case Token.ARRAYLIT:\n       case Token.OBJECTLIT:\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_376/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:07.123603808 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 320, 
          "faulty": "return getStringNumberValue(n.getString());", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1209/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:45.949235042 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1431/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:52.986712459 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -817,7 +816,7 @@\n         // added.\n         replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n-        reportCodeChange();\n+        return null;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 820, 
          "faulty": "reportCodeChange();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_686/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:19:03.868611595 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1768/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:55.473889095 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1707/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:23.009134145 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1707/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:23.009134145 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1535/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:49.393857212 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1026/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:52.291084796 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1299/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:35.700292764 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1717/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:29.565300406 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,8 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_238/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:13:26.058281514 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_238/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:13:26.058281514 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1496/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:28.389950282 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1498/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:29.189932821 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,14 +805,11 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1150/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:24:10.089869280 -0500\n@@ -1459,7 +1459,9 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1150/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:10.089869280 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_388/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:14.503355547 -0500\n@@ -368,7 +368,7 @@\n     }\n \n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_388/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:14.503355547 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n@@ -842,7 +840,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1725/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:33.085386730 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1657/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:55.200344725 -0500\n@@ -1268,8 +1268,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1657/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:55.200344725 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,14 +805,11 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1722/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:31.713353322 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1230/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:58.944995455 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1152/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:10.797857163 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_295/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:14:07.449574891 -0500\n@@ -1459,7 +1459,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_295/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:07.453574784 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "if (!isEquivalentTo(node2,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1305/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:39.588216415 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,12 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 813, 
          "faulty": "left.removeChild(valueToCombine);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1157/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:13.197815966 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1240/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:02.488929279 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1007/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:22:41.915227415 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              return \"SCRIPT\";\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1007/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:41.915227415 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1238/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:01.788942378 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1757/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:49.517763099 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1473/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:14.726246935 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -806,7 +806,6 @@\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n         valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 809, 
          "faulty": "replacement=performArithmeticOp(opType,valueToCombine,right);", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1644/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:48.640137563 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_806/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:28.096514467 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_889/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:22.644128569 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1397/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:31.943154938 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1397/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:31.947154855 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1335/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:57.891852173 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n@@ -406,8 +398,7 @@\n       case '\\uFEFF': // <BOM>\n         return TernaryValue.TRUE;\n       default:\n-        return (Character.getType(c) == Character.SPACE_SEPARATOR)\n-            ? TernaryValue.TRUE : TernaryValue.FALSE;\n+        return null;\n     }\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1335/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:57.891852173 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 409, 
          "faulty": "return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1071/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:21.374659044 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_861/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:04.304282400 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1546/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:55.906146837 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1637/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:28:44.191992331 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              ;\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1637/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:44.191992331 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Delete", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1328/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:54.331923620 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1347/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:26:03.819732569 -0500\n@@ -1430,11 +1430,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1347/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:03.823732489 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1433, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1246/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:04.744886972 -0500\n@@ -385,7 +385,7 @@\n         && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {\n       start++;\n     }\n-    return s.substring(start, end);\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1246/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:04.748886897 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -806,7 +806,7 @@\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n         valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n+        return null;\n       }\n       if (replacement != null) {\n         // Remove the child that has been combined\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 388, 
          "faulty": "return s.substring(start,end);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 809, 
          "faulty": "replacement=performArithmeticOp(opType,valueToCombine,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1391/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:28.911217990 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1689/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:12.636855956 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,17 +797,11 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1548/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:56.610177511 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_974/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:20.383506516 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1770/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:56.189903887 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_813/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:32.568491292 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_950/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:05.743682487 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1028/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:53.015074660 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_575/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:17:36.466779427 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1439/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:56.674634068 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_887/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:21:21.920135079 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_887/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:21.920135079 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,12 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 813, 
          "faulty": "left.removeChild(valueToCombine);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1272/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:21.532567810 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1272/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:21.532567810 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1635/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:43.479968707 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1628/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:28:39.811845454 -0500\n@@ -1459,7 +1459,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        parent = null;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1628/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:39.811845454 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1116/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:48.086237038 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1729/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:34.517421242 -0500\n@@ -359,16 +359,8 @@\n       return null;\n     }\n \n-    // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n-    // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n-    if (s.equals(\"infinity\")\n-        || s.equals(\"-infinity\")\n-        || s.equals(\"+infinity\")) {\n-      return null;\n-    }\n-\n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1729/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:34.517421242 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 364, 
          "faulty": "if (s.equals(\"infinity\") || s.equals(\"-infinity\") || s.equals(\"+infinity\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1576/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:11.670806135 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_998/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:36.699297152 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1297/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:34.992306630 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1659/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:55.900366348 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1190/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:24:34.769437139 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1190/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:34.769437139 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_210/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:12:56.013413988 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_210/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:12:56.017414228 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1234/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:00.376968756 -0500\n@@ -406,8 +406,7 @@\n       case '\\uFEFF': // <BOM>\n         return TernaryValue.TRUE;\n       default:\n-        return (Character.getType(c) == Character.SPACE_SEPARATOR)\n-            ? TernaryValue.TRUE : TernaryValue.FALSE;\n+        return null;\n     }\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1234/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:00.376968756 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 409, 
          "faulty": "return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1065/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:17.330720432 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1449/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:00.890544160 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1342/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:00.979789967 -0500\n@@ -317,7 +317,7 @@\n         break;\n \n       case Token.STRING:\n-        return getStringNumberValue(n.getString());\n+        break;\n \n       case Token.ARRAYLIT:\n       case Token.OBJECTLIT:\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1342/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:26:00.979789967 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              ;\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1342/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:00.979789967 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Delete", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 320, 
          "faulty": "return getStringNumberValue(n.getString());", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1394/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:30.467185653 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1394/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:30.467185653 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1736/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:38.121506670 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1653/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:53.108279572 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -808,17 +808,7 @@\n         valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1290/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:31.460375603 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_480/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:16:20.285192306 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1242/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:03.184916243 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1316/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:45.960090504 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1369/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:26:17.347456771 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              ;\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1369/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:17.347456771 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Delete", 
          "seed": "return \"SUB\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1617/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:33.211616770 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n@@ -842,7 +831,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_359/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:55.120010302 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n@@ -842,7 +838,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1458/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:06.698419789 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_859/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:21:03.580287994 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1651/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:52.404257441 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n@@ -1268,8 +1263,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1651/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:52.404257441 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1015/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:22:46.339167228 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1015/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:46.343167173 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1494/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:27.677965814 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_952/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:06.535673265 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1073/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:23:22.110647802 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1073/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:22.110647802 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_781/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:11.640585448 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_818/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:20:34.728479527 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_818/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:34.732479505 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1382/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:24.567308005 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1063/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:16.618731169 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1443/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:58.082604078 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_96/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:11:27.022091468 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_96/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:11:27.058101262 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1765/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:54.049859478 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1112/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:45.806274136 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_287/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:14:03.781673879 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_287/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:03.781673879 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1562/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:03.830485491 -0500\n@@ -368,7 +368,7 @@\n     }\n \n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1562/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:03.834485659 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_684/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:19:03.148609304 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1506/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:27:32.809853686 -0500\n@@ -1459,7 +1459,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return null;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1506/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:32.809853686 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1441/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:57.378619076 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1178/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:27.345569207 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1433/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:53.714697003 -0500\n@@ -329,17 +329,7 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1433/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:53.718696917 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1557/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:01.678394978 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_450/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:59.361871319 -0500\n@@ -368,7 +368,7 @@\n     }\n \n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_450/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:59.365871188 -0500\n@@ -805,12 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 813, 
          "faulty": "left.removeChild(valueToCombine);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1530/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:47.117753639 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1407/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:37.851031562 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -842,7 +842,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1340/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:00.239804892 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1340/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:00.239804892 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1337/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:58.595838009 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1083/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:28.130554984 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1100/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:39.246379780 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1696/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:16.368958214 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_615/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:18:10.469727833 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1512/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:36.429774346 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1694/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:15.564936391 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,15 +804,9 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 815, 
          "faulty": "n.replaceChild(left,left.removeFirstChild());", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1720/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:31.013336179 -0500\n@@ -406,8 +406,7 @@\n       case '\\uFEFF': // <BOM>\n         return TernaryValue.TRUE;\n       default:\n-        return (Character.getType(c) == Character.SPACE_SEPARATOR)\n-            ? TernaryValue.TRUE : TernaryValue.FALSE;\n+        return null;\n     }\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1720/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:31.013336179 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 409, 
          "faulty": "return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1685/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:10.384793053 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1727/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:33.785403641 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1740/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:40.281556848 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1740/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:40.281556848 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_762/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:19:58.956624167 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1463/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:08.974370896 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_255/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:13:39.314262632 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1256/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:10.912770590 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1648/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:50.916210395 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_355/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:52.892086124 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_504/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:16:40.752535386 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1742/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:40.989573151 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,25 +797,17 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 813, 
          "faulty": "left.removeChild(valueToCombine);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1578/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:12.370834081 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1204/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:42.965289355 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1460/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:07.398404761 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1533/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:27:48.557819278 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1533/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:27:48.561819460 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              ;\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1533/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:48.561819460 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -808,17 +808,7 @@\n         valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Delete", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_293/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:14:06.709594862 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_293/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:06.713594754 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_800/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:20:24.312532794 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_800/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:24.316532775 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1213/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:47.605204785 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1763/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:53.345844701 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1763/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:53.345844701 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_452/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:16:00.093847429 -0500\n@@ -1430,11 +1430,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"EMPTY\";\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_452/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:16:00.093847429 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1433, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"EMPTY\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1147/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:08.677893390 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1244/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:03.884903118 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1552/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:58.802272326 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1666/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:00.156495773 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n@@ -842,7 +838,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1515/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:27:37.825743697 -0500\n@@ -406,8 +406,7 @@\n       case '\\uFEFF': // <BOM>\n         return TernaryValue.TRUE;\n       default:\n-        return (Character.getType(c) == Character.SPACE_SEPARATOR)\n-            ? TernaryValue.TRUE : TernaryValue.FALSE;\n+        return null;\n     }\n   }\n \n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1515/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:37.829743609 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 409, 
          "faulty": "return (Character.getType(c) == Character.SPACE_SEPARATOR) ? TernaryValue.TRUE : TernaryValue.FALSE;", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1582/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:13.814891392 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_816/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:33.972483694 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,9 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n         n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1698/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:29:17.096977889 -0500\n@@ -385,7 +385,7 @@\n         && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {\n       start++;\n     }\n-    return s.substring(start, end);\n+    return null;\n   }\n \n   /**\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1698/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:17.096977889 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 388, 
          "faulty": "return s.substring(start,end);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_431/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:45.862313709 -0500\n@@ -368,7 +368,7 @@\n     }\n \n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_431/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:45.862313709 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_660/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:18:47.676591920 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_784/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:13.080580163 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1389/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:28.179233185 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1389/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:28.179233185 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,12 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n         // New \"-Infinity\" node need location info explicitly\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 813, 
          "faulty": "left.removeChild(valueToCombine);", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1041/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:01.122959459 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1155/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:24:12.477828343 -0500\n@@ -368,7 +368,7 @@\n     }\n \n     try {\n-      return Double.parseDouble(s);\n+      return null;\n     } catch (NumberFormatException e) {\n       return Double.NaN;\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1155/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:12.477828343 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 371, 
          "faulty": "return Double.parseDouble(s);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1232/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:59.644982410 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1488/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:24.110043528 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_667/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:18:52.292567529 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1039/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:23:00.414969634 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_397/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:15:20.459156075 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_397/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:20.463155940 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1411/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:40.022986036 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -804,10 +804,6 @@\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n-      if (replacement == null) {\n-        valueToCombine = lr;\n-        replacement = performArithmeticOp(opType, valueToCombine, right);\n-      }\n       if (replacement != null) {\n         // Remove the child that has been combined\n         left.removeChild(valueToCombine);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 807, 
          "faulty": "if (replacement == null) {\n  valueToCombine=lr;\n  replacement=performArithmeticOp(opType,valueToCombine,right);\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1587/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:28:15.938974838 -0500\n@@ -1459,7 +1459,6 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1587/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:15.942974994 -0500\n@@ -359,14 +359,6 @@\n       return null;\n     }\n \n-    // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n-    // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n-    if (s.equals(\"infinity\")\n-        || s.equals(\"-infinity\")\n-        || s.equals(\"+infinity\")) {\n-      return null;\n-    }\n-\n     try {\n       return Double.parseDouble(s);\n     } catch (NumberFormatException e) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1587/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:15.942974994 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "Delete", 
          "seed": "for (n=first, n2=node2.first; res == null && n != null; n=n.next, n2=n2.next) {\n  if (node2 == null) {\n    throw new IllegalStateException();\n  }\n  res=n.checkTreeEqualsImpl(n2);\n  if (res != null) {\n    return res;\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 364, 
          "faulty": "if (s.equals(\"infinity\") || s.equals(\"-infinity\") || s.equals(\"+infinity\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_980/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:22:24.039460795 -0500\n@@ -1268,8 +1268,7 @@\n         return allResultsMatch(n.getFirstChild(), p)\n             && allResultsMatch(n.getLastChild(), p);\n       case Token.HOOK:\n-        return allResultsMatch(n.getFirstChild().getNext(), p)\n-            && allResultsMatch(n.getLastChild(), p);\n+        return false;\n       default:\n         return p.apply(n);\n     }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_980/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:24.043460743 -0500\n@@ -248,9 +248,9 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n-        return;\n+        ;\n       case Token.NAME:\n         if (!NodeUtil.isUndefined(n)) {\n           return;\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 253, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 1271, 
          "faulty": "return allResultsMatch(n.getFirstChild().getNext(),p) && allResultsMatch(n.getLastChild(),p);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_427/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:15:43.674385742 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,20 +805,9 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n-      if (replacement != null) {\n-        // Remove the child that has been combined\n-        left.removeChild(valueToCombine);\n-        // Replace the left op with the remaining child.\n-        n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n-        reportCodeChange();\n-      }\n+      return null;\n     }\n \n     return n;\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 811, 
          "faulty": "if (replacement != null) {\n  left.removeChild(valueToCombine);\n  n.replaceChild(left,left.removeFirstChild());\n  replacement.copyInformationFromForTree(right);\n  n.replaceChild(right,replacement);\n  reportCodeChange();\n}", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_678/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:18:59.496596770 -0500\n@@ -1430,11 +1430,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return \"EMPTY\";\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_678/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:18:59.500596785 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -842,7 +842,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1433, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return \"EMPTY\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1022/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:50.663107506 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_500/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:16:39.292582019 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_500/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:16:39.296581891 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1202/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:42.261302127 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_962/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:12.943597397 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1175/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:25.845595679 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1277/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:23.632527363 -0500\n@@ -340,17 +340,6 @@\n       return 0.0;\n     }\n \n-    if (s.length() > 2\n-        && s.charAt(0) == '0'\n-        && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n-      // Attempt to convert hex numbers.\n-      try {\n-        return Double.valueOf(Integer.parseInt(s.substring(2), 16));\n-      } catch (NumberFormatException e) {\n-        return Double.NaN;\n-      }\n-    }\n-\n     if (s.length() > 3\n         && (s.charAt(0) == '-' || s.charAt(0) == '+')\n         && s.charAt(1) == '0'\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1277/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:23.632527363 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -797,15 +797,12 @@\n     // other values are converted to numbers elsewhere.\n     Double rightValObj = NodeUtil.getNumberValue(right);\n     if (rightValObj != null && left.getType() == opType) {\n-      Preconditions.checkState(left.getChildCount() == 2);\n-\n       Node ll = left.getFirstChild();\n       Node lr = ll.getNext();\n \n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 800, 
          "faulty": "Preconditions.checkState(left.getChildCount() == 2);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 343, 
          "faulty": "if (s.length() > 2 && s.charAt(0) == '0' && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n  try {\n    return Double.valueOf(Integer.parseInt(s.substring(2),16));\n  }\n catch (  NumberFormatException e) {\n    return Double.NaN;\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_539/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:17:10.655587439 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -816,7 +815,6 @@\n         // New \"-Infinity\" node need location info explicitly\n         // added.\n         replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1605/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:25.723346331 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1570/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:08.074660832 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1181/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:28.821543090 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_121/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:11:50.102437031 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_121/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:11:50.102437031 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1024/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:22:51.563094966 -0500\n@@ -188,7 +188,7 @@\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n-          case GT:              return \"GT\";\n+          case GT:              ;\n           case GE:              return \"GE\";\n           case LSH:             return \"LSH\";\n           case RSH:             return \"RSH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1024/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:22:51.567094910 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 191, 
          "faulty": "return \"GT\";", 
          "type": "Delete", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1350/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:26:05.295702669 -0500\n@@ -1459,7 +1459,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        parent = null;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1350/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:26:05.295702669 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1350/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:26:05.299702588 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1678/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:29:06.728688990 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -842,7 +841,7 @@\n       if (result != node) {\n         return result;\n       }\n-      return tryFoldLeftChildOp(node, left, right);\n+      return null;\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 845, 
          "faulty": "return tryFoldLeftChildOp(node,left,right);", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1500/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:27:29.913917011 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:02:17.272394866 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1268/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/rhino/Node.java\t2018-12-01 10:25:19.224612132 -0500\n@@ -1459,7 +1459,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        parent = null;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1268/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:25:19.224612132 -0500\n@@ -329,11 +329,6 @@\n   }\n \n   static Double getStringNumberValue(String rawJsString) {\n-    if (rawJsString.contains(\"\\u000b\")) {\n-      // vertical tab is not always whitespace\n-      return null;\n-    }\n-\n     String s = trimJsWhiteSpace(rawJsString);\n     // return ScriptRuntime.toNumber(s);\n     if (s.length() == 0) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1268/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:25:19.224612132 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1462, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 332, 
          "faulty": "if (rawJsString.contains(\"\\u000b\")) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1633/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:28:42.659941388 -0500\n@@ -335,11 +335,6 @@\n     }\n \n     String s = trimJsWhiteSpace(rawJsString);\n-    // return ScriptRuntime.toNumber(s);\n-    if (s.length() == 0) {\n-      return 0.0;\n-    }\n-\n     if (s.length() > 2\n         && s.charAt(0) == '0'\n         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1633/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:42.663941522 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 339, 
          "faulty": "if (s.length() == 0) {\n  return 0.0;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_767/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:20:01.924616399 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_305/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:14:14.921373246 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n@@ -813,10 +812,6 @@\n         left.removeChild(valueToCombine);\n         // Replace the left op with the remaining child.\n         n.replaceChild(left, left.removeFirstChild());\n-        // New \"-Infinity\" node need location info explicitly\n-        // added.\n-        replacement.copyInformationFromForTree(right);\n-        n.replaceChild(right, replacement);\n         reportCodeChange();\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 818, 
          "faulty": "replacement.copyInformationFromForTree(right);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 819, 
          "faulty": "n.replaceChild(right,replacement);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:02:20.292394989 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1145/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:24:07.945905866 -0500\n@@ -351,14 +351,6 @@\n       }\n     }\n \n-    if (s.length() > 3\n-        && (s.charAt(0) == '-' || s.charAt(0) == '+')\n-        && s.charAt(1) == '0'\n-        && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n-      // hex numbers with explicit signs vary between browsers.\n-      return null;\n-    }\n-\n     // Firefox and IE treat the \"Infinity\" differently. Firefox is case\n     // insensitive, but IE treats \"infinity\" as NaN.  So leave it alone.\n     if (s.equals(\"infinity\")\n\n\n--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1145/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:24:07.949905797 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 354, 
          "faulty": "if (s.length() > 3 && (s.charAt(0) == '-' || s.charAt(0) == '+') && s.charAt(1) == '0' && (s.charAt(2) == 'x' || s.charAt(2) == 'X')) {\n  return null;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:02:17.256394865 -0500\n+++ /tmp/Arja_Defects4J_Closure_10/patches_ktm9/Patch_1619/patched/tmp/Arja_Defects4J_Closure_10/src/com/google/javascript/jscomp/PeepholeFoldConstants.java\t2018-12-01 10:28:33.931642163 -0500\n@@ -248,7 +248,7 @@\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.HOOK:\n-        tryConvertToNumber(n.getChildAtIndex(1));\n+        ;\n         tryConvertToNumber(n.getLastChild());\n         return;\n       case Token.NAME:\n@@ -805,7 +805,6 @@\n       Node valueToCombine = ll;\n       Node replacement = performArithmeticOp(opType, valueToCombine, right);\n       if (replacement == null) {\n-        valueToCombine = lr;\n         replacement = performArithmeticOp(opType, valueToCombine, right);\n       }\n       if (replacement != null) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 251, 
          "faulty": "tryConvertToNumber(n.getChildAtIndex(1));", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/PeepholeFoldConstants.java", 
          "line": 808, 
          "faulty": "valueToCombine=lr;", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}