{
  "repair_end": "2018-12-01 16:16:46.385037", 
  "repair_begin": "2018-12-01 15:58:06.183678", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_264/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:27.511927684 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_675/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:34.727498459 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_153/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:02.394988391 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -173,7 +165,6 @@\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_715/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:12:03.135832932 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -174,7 +166,6 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Delete", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_881/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:14:07.841310325 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              ;\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_881/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:07.841310325 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 134, 
          "faulty": "msg=\"Is there a missing '+' on the previous line?\";", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_250/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:16.235797995 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -131,7 +132,6 @@\n         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {\n       String msg = \"This code lacks side-effects. Is there a bug?\";\n       if (n.isString()) {\n-        msg = \"Is there a missing '+' on the previous line?\";\n       } else if (isSimpleOp) {\n         msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +\n             \"' operator is not being used.\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_538/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:54.318323563 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_422/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:22.169256900 -0500\n@@ -115,12 +115,6 @@\n         return;\n       }\n       if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 134, 
          "faulty": "msg=\"Is there a missing '+' on the previous line?\";", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_179/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:20.939188139 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -131,7 +123,6 @@\n         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {\n       String msg = \"This code lacks side-effects. Is there a bug?\";\n       if (n.isString()) {\n-        msg = \"Is there a missing '+' on the previous line?\";\n       } else if (isSimpleOp) {\n         msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +\n             \"' operator is not being used.\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_43/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:46.606069259 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -157,7 +158,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_31/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:38.313968975 -0500\n@@ -118,8 +118,7 @@\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n           if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_935/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:47.329780886 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_85/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:18.390454661 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3124, 
          "faulty": "if (gramps.isCall() && parent == gramps.getFirstChild()) {\n  if (expr == parent.getFirstChild() && parent.getChildCount() == 2 && expr.getNext().isName() && \"eval\".equals(expr.getNext().getString())) {\n    return true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_541/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:09:55.954342607 -0500\n@@ -3121,19 +3121,7 @@\n             ? true : isExpressionResultUsed(parent);\n       case Token.COMMA:\n         Node gramps = parent.getParent();\n-        if (gramps.isCall() &&\n-            parent == gramps.getFirstChild()) {\n-          // Semantically, a direct call to eval is different from an indirect\n-          // call to an eval. See ECMA-262 S15.1.2.1. So it's OK for the first\n-          // expression to a comma to be a no-op if it's used to indirect\n-          // an eval. This we pretend that this is \"used\".\n-          if (expr == parent.getFirstChild() &&\n-              parent.getChildCount() == 2 &&\n-              expr.getNext().isName() &&\n-              \"eval\".equals(expr.getNext().getString())) {\n-            return true;\n-          }\n-        }\n+        ;\n \n         return (expr == parent.getFirstChild())\n             ? false : isExpressionResultUsed(parent);\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_541/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:55.958342654 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_147/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:04:58.594944224 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              ;\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_147/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:58.594944224 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_122/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:04:41.866740268 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              ;\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_122/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:41.870740317 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_971/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:15:14.130100911 -0500\n@@ -117,9 +117,11 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n+          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)\n+\t\t\tbreak;\n+\t\telse break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_468/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:54.693631981 -0500\n@@ -118,8 +118,6 @@\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n           if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_388/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:56.404956780 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 157, 
          "faulty": "addExtern();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_40/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:44.402042593 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -154,7 +155,6 @@\n    */\n   private void protectSideEffects() {\n     if (!problemNodes.isEmpty()) {\n-      addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n         name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_284/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:43.100107297 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_358/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:07:31.896671918 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              return \"PARAM_LIST\";\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_358/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:31.896671918 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_177/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:19.967177619 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -174,7 +175,6 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1055/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:16:15.882840177 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Delete", 
          "seed": "case EMPTY:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_45/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:03:47.366078456 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              ;\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_45/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:47.370078504 -0500\n@@ -118,8 +118,7 @@\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n           if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n@@ -169,7 +168,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_997/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:15:32.090315658 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_289/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:45.932139969 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_323/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:08.256397942 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_603/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:10:42.094881106 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_72/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:09.598347899 -0500\n@@ -117,9 +117,9 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n+          break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_706/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:57.291764058 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -174,7 +166,6 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_435/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:08:30.645354493 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              return \"PARAM_LIST\";\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_435/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:30.645354493 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 166, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_129/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:46.338794758 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -163,7 +155,6 @@\n         n.getParent().replaceChild(n, replacement);\n         replacement.addChildToBack(n);\n       }\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_652/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:18.391306510 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_12/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:21.073760849 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 157, 
          "faulty": "addExtern();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_88/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:20.318478087 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -154,10 +146,8 @@\n    */\n   private void protectSideEffects() {\n     if (!problemNodes.isEmpty()) {\n-      addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_298/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:52.376214358 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_634/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:05.275152611 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_344/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:21.456550825 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_137/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:52.070864639 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_191/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:29.679282994 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,11 +161,9 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 179, 
          "faulty": "input.getAstRoot(compiler).addChildrenToBack(var);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_491/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:13.257846773 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -174,9 +166,7 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n-    input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_331/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:12.992452766 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -173,7 +174,6 @@\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_896/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:18.929442334 -0500\n@@ -117,9 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_316/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:04.444353839 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_34/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:40.097990541 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_667/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:11:29.023431403 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              ;\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_667/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:29.027431450 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_441/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:34.581399851 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 134, 
          "faulty": "msg=\"Is there a missing '+' on the previous line?\";", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_156/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:04.047006099 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -131,7 +123,6 @@\n         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {\n       String msg = \"This code lacks side-effects. Is there a bug?\";\n       if (n.isString()) {\n-        msg = \"Is there a missing '+' on the previous line?\";\n       } else if (isSimpleOp) {\n         msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +\n             \"' operator is not being used.\";\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_198/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:34.611336713 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_356/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:31.044662030 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_120/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:40.898728476 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_403/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:07.509086110 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_992/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:15:28.994278623 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_428/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:26.093302068 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_630/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:02.759123111 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_510/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:27.626013352 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 179, 
          "faulty": "input.getAstRoot(compiler).addChildrenToBack(var);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1065/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:16:22.934924755 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -176,7 +168,6 @@\n     builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n-    input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_133/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:49.134828839 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_103/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:30.030596177 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 180, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_585/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:10:28.958727528 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -177,7 +169,6 @@\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n-    compiler.reportCodeChange();\n   }\n \n   /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_287/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:44.752126355 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 157, 
          "faulty": "addExtern();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_83/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:17.630445428 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -154,7 +146,6 @@\n    */\n   private void protectSideEffects() {\n     if (!problemNodes.isEmpty()) {\n-      addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n         name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_319/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:05.956371330 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -173,7 +165,6 @@\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_101/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:29.026583964 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 166, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_916/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:32.849608196 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -163,7 +164,6 @@\n         n.getParent().replaceChild(n, replacement);\n         replacement.addChildToBack(n);\n       }\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1027/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:15:55.074590793 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_869/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:13:59.453210526 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_259/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:24.359891411 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_503/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:23.377964072 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_303/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:55.656252247 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 166, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_339/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:18.288514111 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,13 +149,11 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n         replacement.addChildToBack(n);\n       }\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_842/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:13:38.880966008 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 136, 
          "faulty": "msg=\"The result of the '\" + Token.name(n.getType()).toLowerCase() + \"' operator is not being used.\";", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_209/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:43.215430749 -0500\n@@ -118,8 +118,7 @@\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n           if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n@@ -133,8 +132,6 @@\n       if (n.isString()) {\n         msg = \"Is there a missing '+' on the previous line?\";\n       } else if (isSimpleOp) {\n-        msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +\n-            \"' operator is not being used.\";\n       }\n \n       t.getCompiler().report(\n@@ -174,7 +171,6 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1068/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:16:24.482943326 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "if (ancestorType == Token.COMMA) continue;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_737/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:12:19.848030084 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 177, 
          "faulty": "var.setJSDocInfo(builder.build(var));", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_911/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:29.949573629 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -174,7 +166,6 @@\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n     builder.recordNoAlias();\n-    var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_107/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:32.146621924 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 179, 
          "faulty": "input.getAstRoot(compiler).addChildrenToBack(var);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_143/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:56.282916014 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -176,7 +168,6 @@\n     builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n-    input.getAstRoot(compiler).addChildrenToBack(var);\n     compiler.reportCodeChange();\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_485/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:09.461802811 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_559/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:10:10.890516633 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_150/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:05:00.882972034 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 134, 
          "faulty": "msg=\"Is there a missing '+' on the previous line?\";", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_524/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:09:42.578187005 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n@@ -131,7 +132,6 @@\n         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {\n       String msg = \"This code lacks side-effects. Is there a bug?\";\n       if (n.isString()) {\n-        msg = \"Is there a missing '+' on the previous line?\";\n       } else if (isSimpleOp) {\n         msg = \"The result of the '\" + Token.name(n.getType()).toLowerCase() +\n             \"' operator is not being used.\";\n@@ -173,7 +173,6 @@\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3138, 
          "faulty": "return (expr == parent.getFirstChild()) ? false : isExpressionResultUsed(parent);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1044/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:16:07.974745367 -0500\n@@ -3135,8 +3135,7 @@\n           }\n         }\n \n-        return (expr == parent.getFirstChild())\n-            ? false : isExpressionResultUsed(parent);\n+        return false;\n       case Token.FOR:\n         if (!NodeUtil.isForIn(parent)) {\n           // Only an expression whose result is in the condition part of the\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1044/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:16:07.978745416 -0500\n@@ -117,7 +117,8 @@\n       if (n == parent.getLastChild()) {\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n+          if (ancestorType == Token.COMMA)\n+\t\t\tbreak;\n           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n           else break;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 119, 
          "faulty": "int ancestorType=an.getType();", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_830/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:13:30.644868214 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_451/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:08:41.713482098 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/NodeUtil.java", 
          "line": 3124, 
          "faulty": "if (gramps.isCall() && parent == gramps.getFirstChild()) {\n  if (expr == parent.getFirstChild() && parent.getChildCount() == 2 && expr.getNext().isName() && \"eval\".equals(expr.getNext().getString())) {\n    return true;\n  }\n}", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_273/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/NodeUtil.java\t2018-12-01 10:06:34.796011567 -0500\n@@ -3121,19 +3121,7 @@\n             ? true : isExpressionResultUsed(parent);\n       case Token.COMMA:\n         Node gramps = parent.getParent();\n-        if (gramps.isCall() &&\n-            parent == gramps.getFirstChild()) {\n-          // Semantically, a direct call to eval is different from an indirect\n-          // call to an eval. See ECMA-262 S15.1.2.1. So it's OK for the first\n-          // expression to a comma to be a no-op if it's used to indirect\n-          // an eval. This we pretend that this is \"used\".\n-          if (expr == parent.getFirstChild() &&\n-              parent.getChildCount() == 2 &&\n-              expr.getNext().isName() &&\n-              \"eval\".equals(expr.getNext().getString())) {\n-            return true;\n-          }\n-        }\n+        ;\n \n         return (expr == parent.getFirstChild())\n             ? false : isExpressionResultUsed(parent);\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_273/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:34.800011612 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 120, 
          "faulty": "continue;", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_577/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:10:23.562664502 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "Replace", 
          "seed": "break;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_947/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:14:56.077885291 -0500\n@@ -118,8 +118,7 @@\n         for (Node an : parent.getAncestors()) {\n           int ancestorType = an.getType();\n           if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n+          break;\n         }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_1034/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:16:00.074650693 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -169,7 +161,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_19/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:03:27.273835637 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 157, 
          "faulty": "addExtern();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_309/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:06:59.912301433 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -154,7 +146,6 @@\n    */\n   private void protectSideEffects() {\n     if (!problemNodes.isEmpty()) {\n-      addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n         name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n else break;", 
          "type": "InsertBefore", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_562/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:10:12.398534218 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_686/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:11:42.515590070 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              return \"PARAM_LIST\";\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_686/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:11:42.519590117 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_329/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:12.256444244 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 172, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 160, 
          "faulty": "name.putBooleanProp(Node.IS_CONSTANT_NAME,true);", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_96/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:25.858545434 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -157,7 +149,6 @@\n       addExtern();\n       for (Node n : problemNodes) {\n         Node name = IR.name(PROTECTOR_FN).srcref(n);\n-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n         Node replacement = IR.call(name).srcref(n);\n         replacement.putBooleanProp(Node.FREE_CALL, true);\n         n.getParent().replaceChild(n, replacement);\n@@ -169,7 +160,6 @@\n \n   private void addExtern() {\n     Node name = IR.name(PROTECTOR_FN);\n-    name.putBooleanProp(Node.IS_CONSTANT_NAME, true);\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 187, 
          "faulty": "return \"EQ\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:57:45.757882813 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_379/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/rhino/Token.java\t2018-12-01 10:07:49.340874590 -0500\n@@ -184,7 +184,7 @@\n           case BITOR:           return \"BITOR\";\n           case BITXOR:          return \"BITXOR\";\n           case BITAND:          return \"BITAND\";\n-          case EQ:              return \"EQ\";\n+          case EQ:              return \"PARAM_LIST\";\n           case NE:              return \"NE\";\n           case LT:              return \"LT\";\n           case LE:              return \"LE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_379/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:07:49.344874637 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 166, 
          "faulty": "compiler.reportCodeChange();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_117/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:04:39.478711181 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -163,7 +155,6 @@\n         n.getParent().replaceChild(n, replacement);\n         replacement.addChildToBack(n);\n       }\n-      compiler.reportCodeChange();\n     }\n   }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 117, 
          "faulty": "if (n == parent.getLastChild()) {\n  for (  Node an : parent.getAncestors()) {\n    int ancestorType=an.getType();\n    if (ancestorType == Token.COMMA)     continue;\n    if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)     return;\n else     break;\n  }\n}", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 176, 
          "faulty": "builder.recordNoAlias();", 
          "type": "Delete", 
          "seed": "this.level=level;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 121, 
          "faulty": "return;", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 09:57:47.389900461 -0500\n+++ /tmp/Arja_Defects4J_Closure_21/patches_9yoi/Patch_790/patched/tmp/Arja_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2018-12-01 10:12:59.700501313 -0500\n@@ -114,14 +114,6 @@\n       if (isResultUsed) {\n         return;\n       }\n-      if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n-      }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n         return;\n@@ -173,7 +165,6 @@\n     Node var = IR.var(name);\n     // Add \"@noalias\" so we can strip the method when AliasExternals is enabled.\n     JSDocInfoBuilder builder = new JSDocInfoBuilder(false);\n-    builder.recordNoAlias();\n     var.setJSDocInfo(builder.build(var));\n     CompilerInput input = compiler.getSynthesizedExternsInput();\n     input.getAstRoot(compiler).addChildrenToBack(var);\n\n\n"
    }
  ]
}