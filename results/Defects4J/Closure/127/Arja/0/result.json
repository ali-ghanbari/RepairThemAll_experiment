{
  "repair_end": "2018-12-01 15:03:49.666248", 
  "repair_begin": "2018-12-01 14:46:23.100398", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1136/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:00:46.026478861 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"BITOR\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1136/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:46.026478861 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      parent = null;\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1136/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:46.026478861 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_862/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:17.817591098 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_862/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:17.821591123 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n@@ -184,7 +181,7 @@\n           next = computeFollowing(next);\n         }\n       }\n-      return next;\n+      return null;\n     }\n \n     private void removeDeadExprStatementSafely(Node n) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 187, 
          "faulty": "return next;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1082/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:17.458308416 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1082/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:17.458308416 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_659/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:25.252910062 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1454,7 +1453,9 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_659/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:25.256910087 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "if (printType) {\n  if (jsType != null) {\n    String jsTypeString=jsType.toString();\n    if (jsTypeString != null) {\n      sb.append(\" : \");\n      sb.append(jsTypeString);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_880/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:58:27.657650329 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_880/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:27.661650353 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_880/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:27.661650353 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "sourcePosition=-1;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_962/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:13.693926859 -0500\n@@ -951,7 +951,11 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_962/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:13.697926882 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_998/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:33.502045562 -0500\n@@ -952,7 +952,8 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      sb.append(Token.name(type));\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_998/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:33.506045585 -0500\n@@ -159,18 +159,7 @@\n           // branches to the same node. If after removing it control still\n           // branches to the same node, it is safe to remove.\n           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();\n-          if (outEdges.size() == 1 &&\n-              // If there is a next node, this jump is not useless.\n-              (n.getNext() == null || n.getNext().isFunction())) {\n-\n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n-            Node fallThrough = computeFollowing(n);\n-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n-          }\n+          ;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 162, 
          "faulty": "if (outEdges.size() == 1 && (n.getNext() == null || n.getNext().isFunction())) {\n  Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);\n  Node fallThrough=computeFollowing(n);\n  Node nextCfgNode=outEdges.get(0).getDestination().getValue();\n  if (nextCfgNode == fallThrough) {\n    removeNode(n);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 166, 
          "faulty": "Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_835/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:03.053502143 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n@@ -1425,11 +1426,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_835/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:03.057502167 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1377/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:00.639320108 -0500\n@@ -952,14 +952,10 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n+      if (type == Token.NUMBER) {\n+\t\tsb.append(' ');\n+\t\tsb.append(getDouble());\n+\t}\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n@@ -1454,7 +1450,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1377/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:00.643320135 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_204/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:21.035404376 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_204/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:21.035404376 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 09:01:16.190658517 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:16.190658517 -0500\n@@ -952,7 +952,8 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      sb.append(Token.name(type));\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1191/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:01:16.194658540 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1414/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:20.619459368 -0500\n@@ -952,7 +952,8 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      sb.append(Token.name(type));\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n@@ -1454,7 +1455,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1414/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:20.619459368 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_598/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:55:51.768706113 -0500\n@@ -839,7 +839,8 @@\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n           if (lastJump == cfgNode) {\n-            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n+            this.cfg = cfg;\n+\t\t\tcreateEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n           }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_598/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:51.768706113 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_598/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:51.768706113 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 842, 
          "faulty": "createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1100/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 09:00:26.866364580 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1100/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:26.866364580 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_583/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:55:44.332660727 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_583/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:44.336660752 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1015/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:59:41.690094583 -0500\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1015/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:59:41.690094583 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1015/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:41.690094583 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_564/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:34.404600076 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -951,7 +951,11 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_564/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:34.404600076 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1010/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:59:39.370080695 -0500\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1010/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:39.370080695 -0500\n@@ -1425,11 +1425,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1010/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:39.370080695 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1055/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:02.010216123 -0500\n@@ -952,7 +952,11 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      if (type == Token.NUMBER) {\n+\t\tsb.append(' ');\n+\t\tsb.append(getDouble());\n+\t}\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n@@ -1425,11 +1429,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1055/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:02.010216123 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_142/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:47.179191734 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"ADD\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_142/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:47.183191759 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "sb.append('\\n');"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1162/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:01:00.526565261 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1162/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:00.526565261 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1162/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:01:00.526565261 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_279/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:58.627639216 -0500\n@@ -952,13 +952,13 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      sb.append(Token.name(type));\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_279/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:58.627639216 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_450/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:54:32.068217751 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           return \"SCRIPT\";\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_450/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:32.068217751 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_521/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:55:10.908456281 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_521/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:10.908456281 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_521/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:10.908456281 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_986/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:27.186007729 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        sourcePosition = -1;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_986/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:27.186007729 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "sourcePosition=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_68/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:10.850962277 -0500\n@@ -958,7 +958,14 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_68/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:10.850962277 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n@@ -184,7 +181,7 @@\n           next = computeFollowing(next);\n         }\n       }\n-      return next;\n+      return null;\n     }\n \n     private void removeDeadExprStatementSafely(Node n) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 187, 
          "faulty": "return next;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_109/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:32.155097006 -0500\n@@ -1425,11 +1425,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_109/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:32.159097032 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_931/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:56.137821513 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "Replace", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_176/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:52:05.927309624 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"BLOCK\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_176/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:05.927309624 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"BLOCK\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_888/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:58:31.717674755 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      this.sourcePosition = sourcePosition;\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_888/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:31.717674755 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1439/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:03:33.951551845 -0500\n@@ -951,7 +951,7 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1439/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:33.951551845 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Replace", 
          "seed": "sb.append('\\n');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_206/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:52:21.703408561 -0500\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_206/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:21.703408561 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1051/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:00:00.226205458 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1051/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:00.230205483 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_222/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:29.899459867 -0500\n@@ -163,13 +163,8 @@\n               // If there is a next node, this jump is not useless.\n               (n.getNext() == null || n.getNext().isFunction())) {\n \n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 166, 
          "faulty": "Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1171/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:01:05.198593085 -0500\n@@ -1441,7 +1441,10 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1171/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:01:05.198593085 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_115/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:51:34.563112204 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           ;\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_115/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:34.563112204 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Delete", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case SCRIPT:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_805/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:46.473402119 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_805/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:57:46.473402119 -0500\n@@ -159,18 +159,7 @@\n           // branches to the same node. If after removing it control still\n           // branches to the same node, it is safe to remove.\n           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();\n-          if (outEdges.size() == 1 &&\n-              // If there is a next node, this jump is not useless.\n-              (n.getNext() == null || n.getNext().isFunction())) {\n-\n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n-            Node fallThrough = computeFollowing(n);\n-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n-          }\n+          ;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 162, 
          "faulty": "if (outEdges.size() == 1 && (n.getNext() == null || n.getNext().isFunction())) {\n  Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);\n  Node fallThrough=computeFollowing(n);\n  Node nextCfgNode=outEdges.get(0).getDestination().getValue();\n  if (nextCfgNode == fallThrough) {\n    removeNode(n);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_245/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:41.059529627 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_245/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:41.059529627 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_75/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:14.262983888 -0500\n@@ -159,18 +159,7 @@\n           // branches to the same node. If after removing it control still\n           // branches to the same node, it is safe to remove.\n           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();\n-          if (outEdges.size() == 1 &&\n-              // If there is a next node, this jump is not useless.\n-              (n.getNext() == null || n.getNext().isFunction())) {\n-\n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n-            Node fallThrough = computeFollowing(n);\n-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n-          }\n+          ;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 162, 
          "faulty": "if (outEdges.size() == 1 && (n.getNext() == null || n.getNext().isFunction())) {\n  Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);\n  Node fallThrough=computeFollowing(n);\n  Node nextCfgNode=outEdges.get(0).getDestination().getValue();\n  if (nextCfgNode == fallThrough) {\n    removeNode(n);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1289/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:02:11.006984238 -0500\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1289/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:11.010984261 -0500\n@@ -163,13 +163,8 @@\n               // If there is a next node, this jump is not useless.\n               (n.getNext() == null || n.getNext().isFunction())) {\n \n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 166, 
          "faulty": "Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_367/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:53:46.739937975 -0500\n@@ -839,7 +839,8 @@\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n           if (lastJump == cfgNode) {\n-            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n+            this.cfg = cfg;\n+\t\t\tcreateEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n           }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_367/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:46.739937975 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_367/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:46.743938000 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 842, 
          "faulty": "createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_105/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:30.391085868 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return new NodeMismatch(this, node2);\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_105/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:30.395085894 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return new NodeMismatch(this,node2);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/InputId.java\t2018-12-01 08:46:07.576979557 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_64/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/InputId.java\t2018-12-01 08:51:09.002950568 -0500\n@@ -71,6 +71,6 @@\n \n   @Override\n   public String toString() {\n-    return \"InputId: \" + getIdName();\n+    return \"ADD\";\n   }\n }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_64/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:09.006950593 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/InputId.java", 
          "line": 74, 
          "faulty": "return \"InputId: \" + getIdName();", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1279/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:06.218955824 -0500\n@@ -958,7 +958,8 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        parent = null;\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1279/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:06.222955848 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_571/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:37.856621172 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      parent = null;\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_571/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:37.860621196 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "parent=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_534/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:17.580497151 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -1425,11 +1425,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_534/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:17.584497175 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1033/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:51.030150468 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1033/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:51.034150493 -0500\n@@ -159,18 +159,7 @@\n           // branches to the same node. If after removing it control still\n           // branches to the same node, it is safe to remove.\n           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();\n-          if (outEdges.size() == 1 &&\n-              // If there is a next node, this jump is not useless.\n-              (n.getNext() == null || n.getNext().isFunction())) {\n-\n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n-            Node fallThrough = computeFollowing(n);\n-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n-          }\n+          ;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 162, 
          "faulty": "if (outEdges.size() == 1 && (n.getNext() == null || n.getNext().isFunction())) {\n  Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);\n  Node fallThrough=computeFollowing(n);\n  Node nextCfgNode=outEdges.get(0).getDestination().getValue();\n  if (nextCfgNode == fallThrough) {\n    removeNode(n);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_4/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:50:32.926721212 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_515/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:55:07.996438434 -0500\n@@ -214,7 +214,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n-          case NULL:            return \"NULL\";\n+          case NULL:            return \"ADD\";\n           case THIS:            return \"THIS\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_515/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:55:07.996438434 -0500\n@@ -838,7 +838,8 @@\n         Node catchBlock = NodeUtil.getCatchBlock(handler);\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n-          if (lastJump == cfgNode) {\n+          this.cfg = cfg;\n+\t\tif (lastJump == cfgNode) {\n             createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_515/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:08.000438458 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 217, 
          "faulty": "return \"NULL\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 841, 
          "faulty": "if (lastJump == cfgNode) {\n  createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());\n}\n else {\n  finallyMap.put(lastJump,handler.getLastChild());\n}", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_497/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:57.864376291 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_497/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:57.864376291 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1271/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:02.066931179 -0500\n@@ -1425,11 +1425,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return toStringTreeImpl();\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1271/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:02.066931179 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return toStringTreeImpl();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_169/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:52:02.411287541 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_169/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:02.411287541 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_211/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:52:24.095423540 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"PARAM_LIST\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_211/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:24.099423566 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_128/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:39.467143138 -0500\n@@ -951,7 +951,14 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_128/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:39.471143163 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_461/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:54:38.012254325 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"BITOR\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_461/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:54:38.016254349 -0500\n@@ -838,7 +838,8 @@\n         Node catchBlock = NodeUtil.getCatchBlock(handler);\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n-          if (lastJump == cfgNode) {\n+          this.cfg = cfg;\n+\t\tif (lastJump == cfgNode) {\n             createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_461/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:38.016254349 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 841, 
          "faulty": "if (lastJump == cfgNode) {\n  createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());\n}\n else {\n  finallyMap.put(lastJump,handler.getLastChild());\n}", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1385/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:03:04.115344394 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1385/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 09:03:04.119344423 -0500\n@@ -839,7 +839,8 @@\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n           if (lastJump == cfgNode) {\n-            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n+            this.cfg = cfg;\n+\t\t\tcreateEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n           }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1385/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:04.119344423 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 842, 
          "faulty": "createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_595/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:55:50.576698839 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"ADD\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_595/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:50.580698864 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_263/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:52:49.775584032 -0500\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           return \"ADD\";\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_263/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:49.775584032 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_317/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:19.739770554 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n@@ -1441,7 +1433,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      sourcePosition = -1;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_317/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:19.739770554 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (type == Token.FUNCTION) {\n  sb.append(' ');\n  if (first == null || first.getType() != Token.NAME) {\n    sb.append(\"<invalid>\");\n  }\n else {\n    sb.append(first.getString());\n  }\n}\n else if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "sourcePosition=-1;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_656/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:24.096903032 -0500\n@@ -1441,7 +1441,10 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_656/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:24.096903032 -0500\n@@ -159,18 +159,7 @@\n           // branches to the same node. If after removing it control still\n           // branches to the same node, it is safe to remove.\n           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();\n-          if (outEdges.size() == 1 &&\n-              // If there is a next node, this jump is not useless.\n-              (n.getNext() == null || n.getNext().isFunction())) {\n-\n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n-            Node fallThrough = computeFollowing(n);\n-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n-          }\n+          ;\n       }\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 162, 
          "faulty": "if (outEdges.size() == 1 && (n.getNext() == null || n.getNext().isFunction())) {\n  Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);\n  Node fallThrough=computeFollowing(n);\n  Node nextCfgNode=outEdges.get(0).getDestination().getValue();\n  if (nextCfgNode == fallThrough) {\n    removeNode(n);\n  }\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_248/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:42.227536922 -0500\n@@ -952,14 +952,6 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_248/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:42.231536947 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_385/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:55.519992292 -0500\n@@ -951,7 +951,6 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_385/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:55.519992292 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "Delete", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_712/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:56:54.301086458 -0500\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_712/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:56:54.301086458 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_712/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:54.305086482 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "InsertBefore", 
          "seed": "this.cfg=null;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_125/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:38.183135041 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n@@ -184,7 +181,7 @@\n           next = computeFollowing(next);\n         }\n       }\n-      return next;\n+      return null;\n     }\n \n     private void removeDeadExprStatementSafely(Node n) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 187, 
          "faulty": "return next;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1048/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:59.034198332 -0500\n@@ -951,7 +951,16 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      if (printType) {\n+\t\t\tif (jsType != null) {\n+\t\t\t\tString jsTypeString = jsType.toString();\n+\t\t\t\tif (jsTypeString != null) {\n+\t\t\t\t\tsb.append(\" : \");\n+\t\t\t\t\tsb.append(jsTypeString);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1048/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:59.034198332 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (printType) {\n  if (jsType != null) {\n    String jsTypeString=jsType.toString();\n    if (jsTypeString != null) {\n      sb.append(\" : \");\n      sb.append(jsTypeString);\n    }\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_345/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:34.371861359 -0500\n@@ -1454,7 +1454,7 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        return new NodeMismatch(this, node2);\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_345/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:34.371861359 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "return new NodeMismatch(this,node2);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_336/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:29.703832409 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_418/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:54:14.464109281 -0500\n@@ -952,14 +952,10 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n+      if (type == Token.NUMBER) {\n+\t\tsb.append(' ');\n+\t\tsb.append(getDouble());\n+\t}\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_418/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:14.468109306 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_281/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:59.219642904 -0500\n@@ -952,7 +952,8 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      sb.append(Token.name(type));\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_281/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:59.219642904 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "sb.append(Token.name(type));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_369/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:53:47.339941689 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_369/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:47.343941714 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        sb.append(Token.name(type));\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_369/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:47.343941714 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_254/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:52:45.123555003 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_254/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:45.127555028 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_254/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:45.127555028 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_663/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:26.988920618 -0500\n@@ -1441,7 +1441,10 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_663/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:26.992920642 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1382/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:03:02.963336348 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -227,7 +227,210 @@\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n           case TRY:             return \"TRY\";\n-          case PARAM_LIST:      return \"PARAM_LIST\";\n+          case PARAM_LIST:      switch (token) {\n+\t\t\tcase ERROR:\n+\t\t\t\treturn \"ERROR\";\n+\t\t\tcase RETURN:\n+\t\t\t\treturn \"RETURN\";\n+\t\t\tcase BITOR:\n+\t\t\t\treturn \"BITOR\";\n+\t\t\tcase BITXOR:\n+\t\t\t\treturn \"BITXOR\";\n+\t\t\tcase BITAND:\n+\t\t\t\treturn \"BITAND\";\n+\t\t\tcase EQ:\n+\t\t\t\treturn \"EQ\";\n+\t\t\tcase NE:\n+\t\t\t\treturn \"NE\";\n+\t\t\tcase LT:\n+\t\t\t\treturn \"LT\";\n+\t\t\tcase LE:\n+\t\t\t\treturn \"LE\";\n+\t\t\tcase GT:\n+\t\t\t\treturn \"GT\";\n+\t\t\tcase GE:\n+\t\t\t\treturn \"GE\";\n+\t\t\tcase LSH:\n+\t\t\t\treturn \"LSH\";\n+\t\t\tcase RSH:\n+\t\t\t\treturn \"RSH\";\n+\t\t\tcase URSH:\n+\t\t\t\treturn \"URSH\";\n+\t\t\tcase ADD:\n+\t\t\t\treturn \"ADD\";\n+\t\t\tcase SUB:\n+\t\t\t\treturn \"SUB\";\n+\t\t\tcase MUL:\n+\t\t\t\treturn \"MUL\";\n+\t\t\tcase DIV:\n+\t\t\t\treturn \"DIV\";\n+\t\t\tcase MOD:\n+\t\t\t\treturn \"MOD\";\n+\t\t\tcase NOT:\n+\t\t\t\treturn \"NOT\";\n+\t\t\tcase BITNOT:\n+\t\t\t\treturn \"BITNOT\";\n+\t\t\tcase POS:\n+\t\t\t\treturn \"POS\";\n+\t\t\tcase NEG:\n+\t\t\t\treturn \"NEG\";\n+\t\t\tcase NEW:\n+\t\t\t\treturn \"NEW\";\n+\t\t\tcase DELPROP:\n+\t\t\t\treturn \"DELPROP\";\n+\t\t\tcase TYPEOF:\n+\t\t\t\treturn \"TYPEOF\";\n+\t\t\tcase GETPROP:\n+\t\t\t\treturn \"GETPROP\";\n+\t\t\tcase GETELEM:\n+\t\t\t\treturn \"GETELEM\";\n+\t\t\tcase CALL:\n+\t\t\t\treturn \"CALL\";\n+\t\t\tcase NAME:\n+\t\t\t\treturn \"NAME\";\n+\t\t\tcase LABEL_NAME:\n+\t\t\t\treturn \"LABEL_NAME\";\n+\t\t\tcase NUMBER:\n+\t\t\t\treturn \"NUMBER\";\n+\t\t\tcase STRING:\n+\t\t\t\treturn \"STRING\";\n+\t\t\tcase STRING_KEY:\n+\t\t\t\treturn \"STRING_KEY\";\n+\t\t\tcase NULL:\n+\t\t\t\treturn \"NULL\";\n+\t\t\tcase THIS:\n+\t\t\t\treturn \"THIS\";\n+\t\t\tcase FALSE:\n+\t\t\t\treturn \"FALSE\";\n+\t\t\tcase TRUE:\n+\t\t\t\treturn \"TRUE\";\n+\t\t\tcase SHEQ:\n+\t\t\t\treturn \"SHEQ\";\n+\t\t\tcase SHNE:\n+\t\t\t\treturn \"SHNE\";\n+\t\t\tcase REGEXP:\n+\t\t\t\treturn \"REGEXP\";\n+\t\t\tcase THROW:\n+\t\t\t\treturn \"THROW\";\n+\t\t\tcase IN:\n+\t\t\t\treturn \"IN\";\n+\t\t\tcase INSTANCEOF:\n+\t\t\t\treturn \"INSTANCEOF\";\n+\t\t\tcase ARRAYLIT:\n+\t\t\t\treturn \"ARRAYLIT\";\n+\t\t\tcase OBJECTLIT:\n+\t\t\t\treturn \"OBJECTLIT\";\n+\t\t\tcase TRY:\n+\t\t\t\treturn \"TRY\";\n+\t\t\tcase PARAM_LIST:\n+\t\t\t\treturn \"PARAM_LIST\";\n+\t\t\tcase COMMA:\n+\t\t\t\treturn \"COMMA\";\n+\t\t\tcase ASSIGN:\n+\t\t\t\treturn \"ASSIGN\";\n+\t\t\tcase ASSIGN_BITOR:\n+\t\t\t\treturn \"ASSIGN_BITOR\";\n+\t\t\tcase ASSIGN_BITXOR:\n+\t\t\t\treturn \"ASSIGN_BITXOR\";\n+\t\t\tcase ASSIGN_BITAND:\n+\t\t\t\treturn \"ASSIGN_BITAND\";\n+\t\t\tcase ASSIGN_LSH:\n+\t\t\t\treturn \"ASSIGN_LSH\";\n+\t\t\tcase ASSIGN_RSH:\n+\t\t\t\treturn \"ASSIGN_RSH\";\n+\t\t\tcase ASSIGN_URSH:\n+\t\t\t\treturn \"ASSIGN_URSH\";\n+\t\t\tcase ASSIGN_ADD:\n+\t\t\t\treturn \"ASSIGN_ADD\";\n+\t\t\tcase ASSIGN_SUB:\n+\t\t\t\treturn \"ASSIGN_SUB\";\n+\t\t\tcase ASSIGN_MUL:\n+\t\t\t\treturn \"ASSIGN_MUL\";\n+\t\t\tcase ASSIGN_DIV:\n+\t\t\t\treturn \"ASSIGN_DIV\";\n+\t\t\tcase ASSIGN_MOD:\n+\t\t\t\treturn \"ASSIGN_MOD\";\n+\t\t\tcase HOOK:\n+\t\t\t\treturn \"HOOK\";\n+\t\t\tcase OR:\n+\t\t\t\treturn \"OR\";\n+\t\t\tcase AND:\n+\t\t\t\treturn \"AND\";\n+\t\t\tcase INC:\n+\t\t\t\treturn \"INC\";\n+\t\t\tcase DEC:\n+\t\t\t\treturn \"DEC\";\n+\t\t\tcase FUNCTION:\n+\t\t\t\treturn \"FUNCTION\";\n+\t\t\tcase IF:\n+\t\t\t\treturn \"IF\";\n+\t\t\tcase SWITCH:\n+\t\t\t\treturn \"SWITCH\";\n+\t\t\tcase CASE:\n+\t\t\t\treturn \"CASE\";\n+\t\t\tcase DEFAULT_CASE:\n+\t\t\t\treturn \"DEFAULT_CASE\";\n+\t\t\tcase WHILE:\n+\t\t\t\treturn \"WHILE\";\n+\t\t\tcase DO:\n+\t\t\t\treturn \"DO\";\n+\t\t\tcase FOR:\n+\t\t\t\treturn \"FOR\";\n+\t\t\tcase BREAK:\n+\t\t\t\treturn \"BREAK\";\n+\t\t\tcase CONTINUE:\n+\t\t\t\treturn \"CONTINUE\";\n+\t\t\tcase VAR:\n+\t\t\t\treturn \"VAR\";\n+\t\t\tcase WITH:\n+\t\t\t\treturn \"WITH\";\n+\t\t\tcase CATCH:\n+\t\t\t\treturn \"CATCH\";\n+\t\t\tcase EMPTY:\n+\t\t\t\treturn \"EMPTY\";\n+\t\t\tcase BLOCK:\n+\t\t\t\treturn \"BLOCK\";\n+\t\t\tcase LABEL:\n+\t\t\t\treturn \"LABEL\";\n+\t\t\tcase EXPR_RESULT:\n+\t\t\t\treturn \"EXPR_RESULT\";\n+\t\t\tcase SCRIPT:\n+\t\t\t\treturn \"SCRIPT\";\n+\t\t\tcase GETTER_DEF:\n+\t\t\t\treturn \"GETTER_DEF\";\n+\t\t\tcase SETTER_DEF:\n+\t\t\t\treturn \"SETTER_DEF\";\n+\t\t\tcase CONST:\n+\t\t\t\treturn \"CONST\";\n+\t\t\tcase DEBUGGER:\n+\t\t\t\treturn \"DEBUGGER\";\n+\t\t\tcase CAST:\n+\t\t\t\treturn \"CAST\";\n+\t\t\tcase ANNOTATION:\n+\t\t\t\treturn \"ANNOTATION\";\n+\t\t\tcase PIPE:\n+\t\t\t\treturn \"PIPE\";\n+\t\t\tcase STAR:\n+\t\t\t\treturn \"STAR\";\n+\t\t\tcase EOC:\n+\t\t\t\treturn \"EOC\";\n+\t\t\tcase QMARK:\n+\t\t\t\treturn \"QMARK\";\n+\t\t\tcase ELLIPSIS:\n+\t\t\t\treturn \"ELLIPSIS\";\n+\t\t\tcase BANG:\n+\t\t\t\treturn \"BANG\";\n+\t\t\tcase VOID:\n+\t\t\t\treturn \"VOID\";\n+\t\t\tcase EQUALS:\n+\t\t\t\treturn \"EQUALS\";\n+\t\t\tcase LB:\n+\t\t\t\treturn \"LB\";\n+\t\t\tcase LC:\n+\t\t\t\treturn \"LC\";\n+\t\t\tcase COLON:\n+\t\t\t\treturn \"COLON\";\n+\t\t\t}\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1382/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:02.963336348 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 230, 
          "faulty": "return \"PARAM_LIST\";", 
          "type": "Replace", 
          "seed": "switch (token) {\ncase ERROR:\n  return \"ERROR\";\ncase RETURN:\nreturn \"RETURN\";\ncase BITOR:\nreturn \"BITOR\";\ncase BITXOR:\nreturn \"BITXOR\";\ncase BITAND:\nreturn \"BITAND\";\ncase EQ:\nreturn \"EQ\";\ncase NE:\nreturn \"NE\";\ncase LT:\nreturn \"LT\";\ncase LE:\nreturn \"LE\";\ncase GT:\nreturn \"GT\";\ncase GE:\nreturn \"GE\";\ncase LSH:\nreturn \"LSH\";\ncase RSH:\nreturn \"RSH\";\ncase URSH:\nreturn \"URSH\";\ncase ADD:\nreturn \"ADD\";\ncase SUB:\nreturn \"SUB\";\ncase MUL:\nreturn \"MUL\";\ncase DIV:\nreturn \"DIV\";\ncase MOD:\nreturn \"MOD\";\ncase NOT:\nreturn \"NOT\";\ncase BITNOT:\nreturn \"BITNOT\";\ncase POS:\nreturn \"POS\";\ncase NEG:\nreturn \"NEG\";\ncase NEW:\nreturn \"NEW\";\ncase DELPROP:\nreturn \"DELPROP\";\ncase TYPEOF:\nreturn \"TYPEOF\";\ncase GETPROP:\nreturn \"GETPROP\";\ncase GETELEM:\nreturn \"GETELEM\";\ncase CALL:\nreturn \"CALL\";\ncase NAME:\nreturn \"NAME\";\ncase LABEL_NAME:\nreturn \"LABEL_NAME\";\ncase NUMBER:\nreturn \"NUMBER\";\ncase STRING:\nreturn \"STRING\";\ncase STRING_KEY:\nreturn \"STRING_KEY\";\ncase NULL:\nreturn \"NULL\";\ncase THIS:\nreturn \"THIS\";\ncase FALSE:\nreturn \"FALSE\";\ncase TRUE:\nreturn \"TRUE\";\ncase SHEQ:\nreturn \"SHEQ\";\ncase SHNE:\nreturn \"SHNE\";\ncase REGEXP:\nreturn \"REGEXP\";\ncase THROW:\nreturn \"THROW\";\ncase IN:\nreturn \"IN\";\ncase INSTANCEOF:\nreturn \"INSTANCEOF\";\ncase ARRAYLIT:\nreturn \"ARRAYLIT\";\ncase OBJECTLIT:\nreturn \"OBJECTLIT\";\ncase TRY:\nreturn \"TRY\";\ncase PARAM_LIST:\nreturn \"PARAM_LIST\";\ncase COMMA:\nreturn \"COMMA\";\ncase ASSIGN:\nreturn \"ASSIGN\";\ncase ASSIGN_BITOR:\nreturn \"ASSIGN_BITOR\";\ncase ASSIGN_BITXOR:\nreturn \"ASSIGN_BITXOR\";\ncase ASSIGN_BITAND:\nreturn \"ASSIGN_BITAND\";\ncase ASSIGN_LSH:\nreturn \"ASSIGN_LSH\";\ncase ASSIGN_RSH:\nreturn \"ASSIGN_RSH\";\ncase ASSIGN_URSH:\nreturn \"ASSIGN_URSH\";\ncase ASSIGN_ADD:\nreturn \"ASSIGN_ADD\";\ncase ASSIGN_SUB:\nreturn \"ASSIGN_SUB\";\ncase ASSIGN_MUL:\nreturn \"ASSIGN_MUL\";\ncase ASSIGN_DIV:\nreturn \"ASSIGN_DIV\";\ncase ASSIGN_MOD:\nreturn \"ASSIGN_MOD\";\ncase HOOK:\nreturn \"HOOK\";\ncase OR:\nreturn \"OR\";\ncase AND:\nreturn \"AND\";\ncase INC:\nreturn \"INC\";\ncase DEC:\nreturn \"DEC\";\ncase FUNCTION:\nreturn \"FUNCTION\";\ncase IF:\nreturn \"IF\";\ncase SWITCH:\nreturn \"SWITCH\";\ncase CASE:\nreturn \"CASE\";\ncase DEFAULT_CASE:\nreturn \"DEFAULT_CASE\";\ncase WHILE:\nreturn \"WHILE\";\ncase DO:\nreturn \"DO\";\ncase FOR:\nreturn \"FOR\";\ncase BREAK:\nreturn \"BREAK\";\ncase CONTINUE:\nreturn \"CONTINUE\";\ncase VAR:\nreturn \"VAR\";\ncase WITH:\nreturn \"WITH\";\ncase CATCH:\nreturn \"CATCH\";\ncase EMPTY:\nreturn \"EMPTY\";\ncase BLOCK:\nreturn \"BLOCK\";\ncase LABEL:\nreturn \"LABEL\";\ncase EXPR_RESULT:\nreturn \"EXPR_RESULT\";\ncase SCRIPT:\nreturn \"SCRIPT\";\ncase GETTER_DEF:\nreturn \"GETTER_DEF\";\ncase SETTER_DEF:\nreturn \"SETTER_DEF\";\ncase CONST:\nreturn \"CONST\";\ncase DEBUGGER:\nreturn \"DEBUGGER\";\ncase CAST:\nreturn \"CAST\";\ncase ANNOTATION:\nreturn \"ANNOTATION\";\ncase PIPE:\nreturn \"PIPE\";\ncase STAR:\nreturn \"STAR\";\ncase EOC:\nreturn \"EOC\";\ncase QMARK:\nreturn \"QMARK\";\ncase ELLIPSIS:\nreturn \"ELLIPSIS\";\ncase BANG:\nreturn \"BANG\";\ncase VOID:\nreturn \"VOID\";\ncase EQUALS:\nreturn \"EQUALS\";\ncase LB:\nreturn \"LB\";\ncase LC:\nreturn \"LC\";\ncase COLON:\nreturn \"COLON\";\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "return \"RETURN\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1420/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:03:23.583479958 -0500\n@@ -229,7 +229,7 @@\n           case TRY:             return \"TRY\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          ;\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1420/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 09:03:23.583479958 -0500\n@@ -851,7 +851,6 @@\n             finallyMap.put(lastJump, catchBlock);\n           }\n         }\n-        lastJump = handler;\n       }\n     }\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1420/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:03:23.587479986 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 232, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Delete", 
          "seed": "case ADD:"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 854, 
          "faulty": "lastJump=handler;", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_649/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:20.684882278 -0500\n@@ -958,7 +958,13 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_649/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:20.684882278 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1097/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:25.642357274 -0500\n@@ -1425,11 +1425,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1097/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:25.642357274 -0500\n@@ -163,13 +163,8 @@\n               // If there is a next node, this jump is not useless.\n               (n.getNext() == null || n.getNext().isFunction())) {\n \n-            Preconditions.checkState(\n-                outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 166, 
          "faulty": "Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND);", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_821/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:55.245455055 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        sb.append(Token.name(type));\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_821/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:57:55.249455080 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_52/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:02.338908311 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"SCRIPT\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_52/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:02.338908311 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1023/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:59:45.762118951 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1023/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:45.762118951 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case SUB:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_119/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:35.799120003 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"PARAM_LIST\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_119/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:35.799120003 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1283/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:07.946966079 -0500\n@@ -952,7 +952,11 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n+      if (type == Token.NUMBER) {\n+\t\tsb.append(' ');\n+\t\tsb.append(getDouble());\n+\t}\n+\t// In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n       if (first == null || first.getType() != Token.NAME) {\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1283/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:07.946966079 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_86/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:20.251021783 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"ADD\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_86/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:20.251021783 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_532/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:55:16.988493526 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             ;\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_532/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:55:16.988493526 -0500\n@@ -958,7 +958,7 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        sb.append(Token.name(type));\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_532/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:55:16.988493526 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Replace", 
          "seed": "sb.append(Token.name(type));"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Delete", 
          "seed": "case RETURN:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:57:34.969332637 -0500\n@@ -214,7 +214,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n-          case NULL:            return \"NULL\";\n+          case NULL:            return \"ADD\";\n           case THIS:            return \"THIS\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:34.969332637 -0500\n@@ -951,7 +951,11 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      if (type == Token.NUMBER) {\n+\t\t\tsb.append(' ');\n+\t\t\tsb.append(getDouble());\n+\t\t}\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_785/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:57:34.969332637 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 217, 
          "faulty": "return \"NULL\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_98/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:51:27.347066642 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_98/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:27.351066667 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_334/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:53:29.115828761 -0500\n@@ -838,7 +838,8 @@\n         Node catchBlock = NodeUtil.getCatchBlock(handler);\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n-          if (lastJump == cfgNode) {\n+          this.cfg = cfg;\n+\t\tif (lastJump == cfgNode) {\n             createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_334/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:29.115828761 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 841, 
          "faulty": "if (lastJump == cfgNode) {\n  createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());\n}\n else {\n  finallyMap.put(lastJump,handler.getLastChild());\n}", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_231/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:52:34.639489510 -0500\n@@ -839,7 +839,8 @@\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n           if (lastJump == cfgNode) {\n-            createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n+            this.cfg = cfg;\n+\t\t\tcreateEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n           }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_231/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:34.643489535 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 842, 
          "faulty": "createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1003/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:59:35.862059694 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1003/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:59:35.866059717 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1109/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:30.946388926 -0500\n@@ -119,7 +119,7 @@\n         case QUOTED_PROP:        return \"quoted\";\n         case OPT_ARG_NAME:       return \"opt_arg\";\n \n-        case SYNTHETIC_BLOCK_PROP: return \"synthetic\";\n+        case SYNTHETIC_BLOCK_PROP: return \"BITOR\";\n         case EMPTY_BLOCK:        return \"empty_block\";\n         case ORIGINALNAME_PROP:  return \"originalname\";\n         case SIDE_EFFECT_FLAGS:  return \"side_effect_flags\";\n@@ -958,7 +958,14 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1109/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:30.946388926 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 122, 
          "faulty": "return \"synthetic\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_100/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:51:27.995070735 -0500\n@@ -229,7 +229,7 @@\n           case TRY:             return \"TRY\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          return \"BITOR\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_100/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:27.999070761 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 232, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_849/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:58:10.805548863 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"RETURN\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n@@ -261,7 +261,7 @@\n           case CATCH:           return \"CATCH\";\n           case EMPTY:           return \"EMPTY\";\n           case BLOCK:           return \"BLOCK\";\n-          case LABEL:           return \"LABEL\";\n+          case LABEL:           return \"SCRIPT\";\n           case EXPR_RESULT:     return \"EXPR_RESULT\";\n           case SCRIPT:          return \"SCRIPT\";\n           case GETTER_DEF:      return \"GETTER_DEF\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_849/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:58:10.809548887 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 264, 
          "faulty": "return \"LABEL\";", 
          "type": "Replace", 
          "seed": "return \"SCRIPT\";"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_111/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:51:32.839101323 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:46:07.744980697 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_111/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/ControlFlowAnalysis.java\t2018-12-01 08:51:32.843101349 -0500\n@@ -838,7 +838,8 @@\n         Node catchBlock = NodeUtil.getCatchBlock(handler);\n \n         if (!NodeUtil.hasCatchHandler(catchBlock)) { // No catch but a FINALLY.\n-          if (lastJump == cfgNode) {\n+          this.cfg = cfg;\n+\t\tif (lastJump == cfgNode) {\n             createEdge(cfgNode, Branch.ON_EX, handler.getLastChild());\n           } else {\n             finallyMap.put(lastJump, handler.getLastChild());\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_111/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:32.843101349 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/ControlFlowAnalysis.java", 
          "line": 841, 
          "faulty": "if (lastJump == cfgNode) {\n  createEdge(cfgNode,Branch.ON_EX,handler.getLastChild());\n}\n else {\n  finallyMap.put(lastJump,handler.getLastChild());\n}", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1356/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:49.127239493 -0500\n@@ -958,7 +958,14 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n+        if (printSource) {\n+\t\t\tint lineno = getLineno();\n+\t\t\tif (lineno != -1) {\n+\t\t\t\tsb.append(' ');\n+\t\t\t\tsb.append(lineno);\n+\t\t\t}\n+\t\t}\n+\t\tsb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1356/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:49.127239493 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "InsertBefore", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_239/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:38.183511660 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 171, 
          "faulty": "removeNode(n);", 
          "type": "InsertBefore", 
          "seed": "this.cfg=cfg;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_743/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:11.777192355 -0500\n@@ -1441,7 +1441,8 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      this.sourcePosition = sourcePosition;\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_743/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:57:11.777192355 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_374/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:53:49.655956022 -0500\n@@ -214,7 +214,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n-          case NULL:            return \"NULL\";\n+          case NULL:            return \"ADD\";\n           case THIS:            return \"THIS\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_374/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:53:49.659956046 -0500\n@@ -951,7 +951,8 @@\n       sb.append(' ');\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n-      sb.append(' ');\n+      sb.append('\\n');\n+\tsb.append(' ');\n       // In the case of JsDoc trees, the first child is often not a string\n       // which causes exceptions to be thrown when calling toString or\n       // toStringTree.\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_374/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:53:49.659956046 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 217, 
          "faulty": "return \"NULL\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 954, 
          "faulty": "sb.append(' ');", 
          "type": "InsertBefore", 
          "seed": "sb.append('\\n');"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_684/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:56:38.580991057 -0500\n@@ -952,14 +952,10 @@\n       sb.append(getString());\n     } else if (type == Token.FUNCTION) {\n       sb.append(' ');\n-      // In the case of JsDoc trees, the first child is often not a string\n-      // which causes exceptions to be thrown when calling toString or\n-      // toStringTree.\n-      if (first == null || first.getType() != Token.NAME) {\n-        sb.append(\"<invalid>\");\n-      } else {\n-        sb.append(first.getString());\n-      }\n+      if (type == Token.NUMBER) {\n+\t\tsb.append(' ');\n+\t\tsb.append(getDouble());\n+\t}\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n       sb.append(getDouble());\n@@ -1441,7 +1437,10 @@\n    */\n   NodeMismatch checkTreeEqualsImpl(Node node2) {\n     if (!isEquivalentTo(node2, false, false, false)) {\n-      return new NodeMismatch(this, node2);\n+      if (!isEquivalentTo(node2, false, false, false)) {\n+\t\t\treturn new NodeMismatch(this, node2);\n+\t\t}\n+\treturn new NodeMismatch(this, node2);\n     }\n \n     NodeMismatch res = null;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_684/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:56:38.580991057 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 958, 
          "faulty": "if (first == null || first.getType() != Token.NAME) {\n  sb.append(\"<invalid>\");\n}\n else {\n  sb.append(first.getString());\n}", 
          "type": "Replace", 
          "seed": "if (type == Token.NUMBER) {\n  sb.append(' ');\n  sb.append(getDouble());\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1444, 
          "faulty": "return new NodeMismatch(this,node2);", 
          "type": "InsertBefore", 
          "seed": "if (!isEquivalentTo(node2,false,false,false)) {\n  return new NodeMismatch(this,node2);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_436/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:54:24.400170532 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"RETURN\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_436/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:24.400170532 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"RETURN\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_234/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:35.891497337 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_234/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:35.891497337 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1106/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:00:29.702381503 -0500\n@@ -226,7 +226,7 @@\n           case INSTANCEOF:      return \"INSTANCEOF\";\n           case ARRAYLIT:        return \"ARRAYLIT\";\n           case OBJECTLIT:       return \"OBJECTLIT\";\n-          case TRY:             return \"TRY\";\n+          case TRY:             return \"ADD\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n           case ASSIGN:          return \"ASSIGN\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1106/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:00:29.706381527 -0500\n@@ -958,7 +958,6 @@\n       if (first == null || first.getType() != Token.NAME) {\n         sb.append(\"<invalid>\");\n       } else {\n-        sb.append(first.getString());\n       }\n     } else if (type == Token.NUMBER) {\n       sb.append(' ');\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1106/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:00:29.706381527 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 961, 
          "faulty": "sb.append(first.getString());", 
          "type": "Delete", 
          "seed": "if (printSource) {\n  int lineno=getLineno();\n  if (lineno != -1) {\n    sb.append(' ');\n    sb.append(lineno);\n  }\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 229, 
          "faulty": "return \"TRY\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_495/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:54:57.252372535 -0500\n@@ -229,7 +229,7 @@\n           case TRY:             return \"TRY\";\n           case PARAM_LIST:      return \"PARAM_LIST\";\n           case COMMA:           return \"COMMA\";\n-          case ASSIGN:          return \"ASSIGN\";\n+          case ASSIGN:          return \"PARAM_LIST\";\n           case ASSIGN_BITOR:    return \"ASSIGN_BITOR\";\n           case ASSIGN_BITXOR:   return \"ASSIGN_BITXOR\";\n           case ASSIGN_BITAND:   return \"ASSIGN_BITAND\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_495/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:54:57.252372535 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 232, 
          "faulty": "return \"ASSIGN\";", 
          "type": "Replace", 
          "seed": "return \"PARAM_LIST\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1299/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 09:02:16.307015682 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      return \"BITOR\";\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1299/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:16.311015705 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Replace", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_746/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:57:12.973199596 -0500\n@@ -254,7 +254,7 @@\n           case WHILE:           return \"WHILE\";\n           case DO:              return \"DO\";\n           case FOR:             return \"FOR\";\n-          case BREAK:           return \"BREAK\";\n+          case BREAK:           ;\n           case CONTINUE:        return \"CONTINUE\";\n           case VAR:             return \"VAR\";\n           case WITH:            return \"WITH\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_746/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:57:12.977199621 -0500\n@@ -1425,11 +1425,12 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        if (diff != null) {\n+\t\t\treturn \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree()\n+\t\t\t\t\t+ \"\\n\\nTree2:\\n\" + node2.toStringTree() + \"\\n\\nSubtree1: \"\n+\t\t\t\t\t+ diff.nodeA.toStringTree() + \"\\n\\nSubtree2: \"\n+\t\t\t\t\t+ diff.nodeB.toStringTree();\n+\t\t}\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_746/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:57:12.977199621 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1428, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "if (diff != null) {\n  return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();\n}"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 257, 
          "faulty": "return \"BREAK\";", 
          "type": "Delete", 
          "seed": "case SUB:"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_199/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:52:18.731389940 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        Preconditions.checkState(this.propListHead == null,\n+\t\t\t\t\"Node has existing properties.\");\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_199/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:52:18.731389940 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "Replace", 
          "seed": "Preconditions.checkState(this.propListHead == null,\"Node has existing properties.\");"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_121/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:51:36.387123712 -0500\n@@ -210,7 +210,7 @@\n           case GETELEM:         return \"GETELEM\";\n           case CALL:            return \"CALL\";\n           case NAME:            return \"NAME\";\n-          case LABEL_NAME:      return \"LABEL_NAME\";\n+          case LABEL_NAME:      ;\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_121/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:36.391123738 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 213, 
          "faulty": "return \"LABEL_NAME\";", 
          "type": "Delete", 
          "seed": "return \"BITOR\";"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1267/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Node.java\t2018-12-01 09:02:00.358921040 -0500\n@@ -1454,7 +1454,8 @@\n       }\n       res = n.checkTreeEqualsImpl(n2);\n       if (res != null) {\n-        return res;\n+        this.sourcePosition = sourcePosition;\n+\t\treturn res;\n       }\n     }\n     return res;\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_1267/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 09:02:00.358921040 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=cfg;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1457, 
          "faulty": "return res;", 
          "type": "InsertBefore", 
          "seed": "this.sourcePosition=sourcePosition;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:46:07.764980832 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_117/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/rhino/Token.java\t2018-12-01 08:51:35.151115915 -0500\n@@ -214,7 +214,7 @@\n           case NUMBER:          return \"NUMBER\";\n           case STRING:          return \"STRING\";\n           case STRING_KEY:      return \"STRING_KEY\";\n-          case NULL:            return \"NULL\";\n+          case NULL:            return \"ADD\";\n           case THIS:            return \"THIS\";\n           case FALSE:           return \"FALSE\";\n           case TRUE:            return \"TRUE\";\n\n\n--- /tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:46:10.460999129 -0500\n+++ /tmp/Arja_Defects4J_Closure_127/patches_rmbn/Patch_117/patched/tmp/Arja_Defects4J_Closure_127/src/com/google/javascript/jscomp/UnreachableCodeElimination.java\t2018-12-01 08:51:35.151115915 -0500\n@@ -167,9 +167,6 @@\n                 outEdges.get(0).getValue() == Branch.UNCOND);\n             Node fallThrough = computeFollowing(n);\n             Node nextCfgNode = outEdges.get(0).getDestination().getValue();\n-            if (nextCfgNode == fallThrough) {\n-              removeNode(n);\n-            }\n           }\n       }\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Token.java", 
          "line": 217, 
          "faulty": "return \"NULL\";", 
          "type": "Replace", 
          "seed": "return \"ADD\";"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/UnreachableCodeElimination.java", 
          "line": 170, 
          "faulty": "if (nextCfgNode == fallThrough) {\n  removeNode(n);\n}", 
          "type": "Delete", 
          "seed": "this.cfg=null;"
        }
      ]
    }
  ]
}